// Generated by the protocol buffer compiler.  DO NOT EDIT!
 // source: gtfs-realtime.proto

package com.example.delhitransit
 import com.example.delhitransit.GtfsRealtime.FeedMessage.Builderimport com.google.protobuf.Internal

 object GtfsRealtime {

private val internal_static_com_example_delhitransit_FeedMessage_descriptor:com.google.protobuf.Descriptors.Descriptor
private val internal_static_com_example_delhitransit_FeedMessage_fieldAccessorTable:com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
private val internal_static_com_example_delhitransit_FeedHeader_descriptor:com.google.protobuf.Descriptors.Descriptor
private val internal_static_com_example_delhitransit_FeedHeader_fieldAccessorTable:com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
private val internal_static_com_example_delhitransit_FeedEntity_descriptor:com.google.protobuf.Descriptors.Descriptor
private val internal_static_com_example_delhitransit_FeedEntity_fieldAccessorTable:com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
private val internal_static_com_example_delhitransit_TripUpdate_descriptor:com.google.protobuf.Descriptors.Descriptor
private val internal_static_com_example_delhitransit_TripUpdate_fieldAccessorTable:com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
private val internal_static_com_example_delhitransit_TripUpdate_StopTimeEvent_descriptor:com.google.protobuf.Descriptors.Descriptor
private val internal_static_com_example_delhitransit_TripUpdate_StopTimeEvent_fieldAccessorTable:com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
private val internal_static_com_example_delhitransit_TripUpdate_StopTimeUpdate_descriptor:com.google.protobuf.Descriptors.Descriptor
private val internal_static_com_example_delhitransit_TripUpdate_StopTimeUpdate_fieldAccessorTable:com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
private val internal_static_com_example_delhitransit_VehiclePosition_descriptor:com.google.protobuf.Descriptors.Descriptor
private val internal_static_com_example_delhitransit_VehiclePosition_fieldAccessorTable:com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
private val internal_static_com_example_delhitransit_Alert_descriptor:com.google.protobuf.Descriptors.Descriptor
private val internal_static_com_example_delhitransit_Alert_fieldAccessorTable:com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
private val internal_static_com_example_delhitransit_TimeRange_descriptor:com.google.protobuf.Descriptors.Descriptor
private val internal_static_com_example_delhitransit_TimeRange_fieldAccessorTable:com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
private val internal_static_com_example_delhitransit_Position_descriptor:com.google.protobuf.Descriptors.Descriptor
private val internal_static_com_example_delhitransit_Position_fieldAccessorTable:com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
private val internal_static_com_example_delhitransit_TripDescriptor_descriptor:com.google.protobuf.Descriptors.Descriptor
private val internal_static_com_example_delhitransit_TripDescriptor_fieldAccessorTable:com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
private val internal_static_com_example_delhitransit_VehicleDescriptor_descriptor:com.google.protobuf.Descriptors.Descriptor
private val internal_static_com_example_delhitransit_VehicleDescriptor_fieldAccessorTable:com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
private val internal_static_com_example_delhitransit_EntitySelector_descriptor:com.google.protobuf.Descriptors.Descriptor
private val internal_static_com_example_delhitransit_EntitySelector_fieldAccessorTable:com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
private val internal_static_com_example_delhitransit_TranslatedString_descriptor:com.google.protobuf.Descriptors.Descriptor
private val internal_static_com_example_delhitransit_TranslatedString_fieldAccessorTable:com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
private val internal_static_com_example_delhitransit_TranslatedString_Translation_descriptor:com.google.protobuf.Descriptors.Descriptor
private val internal_static_com_example_delhitransit_TranslatedString_Translation_fieldAccessorTable:com.google.protobuf.GeneratedMessageV3.FieldAccessorTable

 val descriptor:com.google.protobuf.Descriptors.FileDescriptor? = null

 fun registerAllExtensions(
registry:com.google.protobuf.ExtensionRegistryLite) {}

 fun registerAllExtensions(
registry:com.google.protobuf.ExtensionRegistry) {
registerAllExtensions(
registry as com.google.protobuf.ExtensionRegistryLite)
}

 interface FeedMessageOrBuilder:
 // @@protoc_insertion_point(interface_extends:com.example.delhitransit.FeedMessage)
            com.google.protobuf.GeneratedMessageV3.ExtendableMessageOrBuilder<FeedMessage> {

/**
 * <pre>
 * Metadata about this feed and feed message.
</pre> *
 *
 * `required .com.example.delhitransit.FeedHeader header = 1;`
 */
         val header:com.example.delhitransit.GtfsRealtime.FeedHeader

/**
 * <pre>
 * Metadata about this feed and feed message.
</pre> *
 *
 * `required .com.example.delhitransit.FeedHeader header = 1;`
 */
         val headerOrBuilder:com.example.delhitransit.GtfsRealtime.FeedHeaderOrBuilder

/**
 * <pre>
 * Contents of the feed.
</pre> *
 *
 * `repeated .com.example.delhitransit.FeedEntity entity = 2;`
 */
         val entityList:List<com.example.delhitransit.GtfsRealtime.FeedEntity>

/**
 * <pre>
 * Contents of the feed.
</pre> *
 *
 * `repeated .com.example.delhitransit.FeedEntity entity = 2;`
 */
         val entityCount:Int

/**
 * <pre>
 * Contents of the feed.
</pre> *
 *
 * `repeated .com.example.delhitransit.FeedEntity entity = 2;`
 */
         val entityOrBuilderList:List< com.example.delhitransit.GtfsRealtime.FeedEntityOrBuilder>

/**
 * <pre>
 * Metadata about this feed and feed message.
</pre> *
 *
 * `required .com.example.delhitransit.FeedHeader header = 1;`
 */
         fun hasHeader():Boolean

/**
 * <pre>
 * Contents of the feed.
</pre> *
 *
 * `repeated .com.example.delhitransit.FeedEntity entity = 2;`
 */
         fun getEntity(index:Int):com.example.delhitransit.GtfsRealtime.FeedEntity

/**
 * <pre>
 * Contents of the feed.
</pre> *
 *
 * `repeated .com.example.delhitransit.FeedEntity entity = 2;`
 */
         fun getEntityOrBuilder(
index:Int):com.example.delhitransit.GtfsRealtime.FeedEntityOrBuilder
}

/**
 * <pre>
 * The contents of a feed message.
 * A feed is a continuous stream of feed messages. Each message in the stream is
 * obtained as a response to an appropriate HTTP GET request.
 * A realtime feed is always defined with relation to an existing GTFS feed.
 * All the entity ids are resolved with respect to the GTFS feed.
 * Note that "required" and "optional" as stated in this file refer to Protocol
 * Buffer cardinality, not semantic cardinality.  See reference.md at
 * https://github.com/google/transit/tree/master/gtfs-realtime for field
 * semantic cardinality.
</pre> *
 *
 *
 * Protobuf type `com.example.delhitransit.FeedMessage`
 */
     class FeedMessage:com.google.protobuf.GeneratedMessageV3.ExtendableMessage<FeedMessage>,
 // @@protoc_insertion_point(message_implements:com.example.delhitransit.FeedMessage)
            FeedMessageOrBuilder {

private var bitField0_:Int = 0
private var header_:com.example.delhitransit.GtfsRealtime.FeedHeader? = null

/**
 * <pre>
 * Metadata about this feed and feed message.
</pre> *
 *
 * `required .com.example.delhitransit.FeedHeader header = 1;`
 */
        override val header:com.example.delhitransit.GtfsRealtime.FeedHeader
get() =if (header_ == null) com.example.delhitransit.GtfsRealtime.FeedHeader.defaultInstance else header_

/**
 * <pre>
 * Metadata about this feed and feed message.
</pre> *
 *
 * `required .com.example.delhitransit.FeedHeader header = 1;`
 */
        override val headerOrBuilder:com.example.delhitransit.GtfsRealtime.FeedHeaderOrBuilder
get() =if (header_ == null) com.example.delhitransit.GtfsRealtime.FeedHeader.defaultInstance else header_
private var entity_:MutableList<com.example.delhitransit.GtfsRealtime.FeedEntity>? = null

/**
 * <pre>
 * Contents of the feed.
</pre> *
 *
 * `repeated .com.example.delhitransit.FeedEntity entity = 2;`
 */
        override val entityList:List<com.example.delhitransit.GtfsRealtime.FeedEntity>?
get() =entity_

/**
 * <pre>
 * Contents of the feed.
</pre> *
 *
 * `repeated .com.example.delhitransit.FeedEntity entity = 2;`
 */
        override val entityOrBuilderList:List< com.example.delhitransit.GtfsRealtime.FeedEntityOrBuilder>?
get() =entity_

/**
 * <pre>
 * Contents of the feed.
</pre> *
 *
 * `repeated .com.example.delhitransit.FeedEntity entity = 2;`
 */
        override val entityCount:Int
get() =entity_!!.size

private var memoizedIsInitialized:Byte = -1

 // Use FeedMessage.newBuilder() to construct.
        private constructor(builder:com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.example.delhitransit.GtfsRealtime.FeedMessage, *>) : super(builder) {}

private constructor() {
entity_ = emptyList<FeedEntity>()
}

 //        @java.lang.Override
 //        @SuppressWarnings({"unused"})
 //        protected java.lang.Object newInstance(
 //                UnusedPrivateParameter unused) {
 //            return new FeedMessage();
 //        }

        override fun getUnknownFields():com.google.protobuf.UnknownFieldSet {
return this.unknownFields
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
private constructor(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite?) : this() {
if (extensionRegistry == null)
{
throw java.lang.NullPointerException()
}
var mutable_bitField0_ = 0
val unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder()
try
{
var done = false
while (!done)
{
val tag = input.readTag()
when (tag) {
0 -> done = true
10 -> {
var subBuilder:com.example.delhitransit.GtfsRealtime.FeedHeader.Builder? = null
if (bitField0_ and 0x00000001 != 0)
{
subBuilder = header_!!.toBuilder()
}
header_ = input.readMessage(com.example.delhitransit.GtfsRealtime.FeedHeader.PARSER, extensionRegistry)
if (subBuilder != null)
{
subBuilder.mergeFrom(header_)
header_ = subBuilder.buildPartial()
}
bitField0_ = bitField0_ or 0x00000001
}
18 -> {
if (mutable_bitField0_ and 0x00000002 == 0)
{
entity_ = java.util.ArrayList()
mutable_bitField0_ = mutable_bitField0_ or 0x00000002
}
entity_!!.add(
input.readMessage(com.example.delhitransit.GtfsRealtime.FeedEntity.PARSER, extensionRegistry))
}
else -> {
if (!parseUnknownField(
input, unknownFields, extensionRegistry, tag))
{
done = true
}
}
}
}
}
catch (e:com.google.protobuf.InvalidProtocolBufferException) {
throw e.setUnfinishedMessage(this)
}
catch (e:java.io.IOException) {
throw com.google.protobuf.InvalidProtocolBufferException(
e).setUnfinishedMessage(this)
}
finally
{
if (mutable_bitField0_ and 0x00000002 != 0)
{
entity_ = java.util.Collections.unmodifiableList(entity_!!)
}
this.unknownFields = unknownFields.build()
makeExtensionsImmutable()
}
}

override fun internalGetFieldAccessorTable():com.google.protobuf.GeneratedMessageV3.FieldAccessorTable {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_FeedMessage_fieldAccessorTable
.ensureFieldAccessorsInitialized(
com.example.delhitransit.GtfsRealtime.FeedMessage::class.java, com.example.delhitransit.GtfsRealtime.FeedMessage.Builder::class.java)
}

/**
 * <pre>
 * Metadata about this feed and feed message.
</pre> *
 *
 * `required .com.example.delhitransit.FeedHeader header = 1;`
 */
        override fun hasHeader():Boolean {
return bitField0_ and 0x00000001 != 0
}

/**
 * <pre>
 * Contents of the feed.
</pre> *
 *
 * `repeated .com.example.delhitransit.FeedEntity entity = 2;`
 */
        override fun getEntity(index:Int):com.example.delhitransit.GtfsRealtime.FeedEntity {
return entity_!![index]
}

/**
 * <pre>
 * Contents of the feed.
</pre> *
 *
 * `repeated .com.example.delhitransit.FeedEntity entity = 2;`
 */
        override fun getEntityOrBuilder(
index:Int):com.example.delhitransit.GtfsRealtime.FeedEntityOrBuilder {
return entity_!![index]
}

override fun isInitialized():Boolean {
val isInitialized = memoizedIsInitialized
if (isInitialized.toInt() == 1) return true
if (isInitialized.toInt() == 0) return false

if (!hasHeader())
{
memoizedIsInitialized = 0
return false
}
if (!header.isInitialized)
{
memoizedIsInitialized = 0
return false
}
for (i in 0 until entityCount)
{
if (!getEntity(i).isInitialized)
{
memoizedIsInitialized = 0
return false
}
}
if (!extensionsAreInitialized())
{
memoizedIsInitialized = 0
return false
}
memoizedIsInitialized = 1
return true
}

@Throws(java.io.IOException::class)
override fun writeTo(output:com.google.protobuf.CodedOutputStream) {
val extensionWriter = newExtensionWriter()
if (bitField0_ and 0x00000001 != 0)
{
output.writeMessage(1, header)
}
for (i in entity_!!.indices)
{
output.writeMessage(2, entity_!![i])
}
extensionWriter.writeUntil(2000, output)
unknownFields.writeTo(output)
}

override fun getSerializedSize():Int {
var size = memoizedSize
if (size != -1) return size

size = 0
if (bitField0_ and 0x00000001 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeMessageSize(1, header)
}
for (i in entity_!!.indices)
{
size += com.google.protobuf.CodedOutputStream
.computeMessageSize(2, entity_!![i])
}
size += extensionsSerializedSize()
size += unknownFields.serializedSize
memoizedSize = size
return size
}

override fun equals(obj:Any?):Boolean {
if (obj === this)
{
return true
}
if (obj !is com.example.delhitransit.GtfsRealtime.FeedMessage)
{
return super.equals(obj)
}
val other = obj as com.example.delhitransit.GtfsRealtime.FeedMessage?

if (hasHeader() != other!!.hasHeader()) return false
if (hasHeader())
{
if (header != other.header)
return false
}
if (entityList != other.entityList)
return false
if (unknownFields != other.unknownFields) return false
return if (extensionFields != other.extensionFields) false else true
}

override fun hashCode():Int {
if (memoizedHashCode != 0)
{
return memoizedHashCode
}
var hash = 41
hash = 19 * hash + descriptor.hashCode()
if (hasHeader())
{
hash = 37 * hash + HEADER_FIELD_NUMBER
hash = 53 * hash + header.hashCode()
}
if (entityCount > 0)
{
hash = 37 * hash + ENTITY_FIELD_NUMBER
hash = 53 * hash + entityList!!.hashCode()
}
hash = AbstractMessage.hashFields(hash, extensionFields)
hash = 29 * hash + unknownFields.hashCode()
memoizedHashCode = hash
return hash
}

override fun newBuilderForType():Builder {
return newBuilder()
}

override fun toBuilder():Builder {
return if (this === defaultInstance)
Builder()
else
Builder().mergeFrom(this)
}

override fun newBuilderForType(
parent:com.google.protobuf.GeneratedMessageV3.BuilderParent):Builder {
return Builder(parent)
}

/**
 * <pre>
 * The contents of a feed message.
 * A feed is a continuous stream of feed messages. Each message in the stream is
 * obtained as a response to an appropriate HTTP GET request.
 * A realtime feed is always defined with relation to an existing GTFS feed.
 * All the entity ids are resolved with respect to the GTFS feed.
 * Note that "required" and "optional" as stated in this file refer to Protocol
 * Buffer cardinality, not semantic cardinality.  See reference.md at
 * https://github.com/google/transit/tree/master/gtfs-realtime for field
 * semantic cardinality.
</pre> *
 *
 *
 * Protobuf type `com.example.delhitransit.FeedMessage`
 */
         class Builder:com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.example.delhitransit.GtfsRealtime.FeedMessage, Builder>,
 // @@protoc_insertion_point(builder_implements:com.example.delhitransit.FeedMessage)
                com.example.delhitransit.GtfsRealtime.FeedMessageOrBuilder {

private var bitField0_:Int = 0

private var header_:com.example.delhitransit.GtfsRealtime.FeedHeader? = null
private var headerBuilder_:com.google.protobuf.SingleFieldBuilderV3<com.example.delhitransit.GtfsRealtime.FeedHeader, com.example.delhitransit.GtfsRealtime.FeedHeader.Builder, com.example.delhitransit.GtfsRealtime.FeedHeaderOrBuilder>? = null

/**
 * <pre>
 * Metadata about this feed and feed message.
</pre> *
 *
 * `required .com.example.delhitransit.FeedHeader header = 1;`
 */
            override val header:com.example.delhitransit.GtfsRealtime.FeedHeader
get() =if (headerBuilder_ == null) {
            if (header_ == null) com.example.delhitransit.GtfsRealtime.FeedHeader.defaultInstance else header_
        } else {
            headerBuilder_!!.message
        }

/**
 * <pre>
 * Metadata about this feed and feed message.
</pre> *
 *
 * `required .com.example.delhitransit.FeedHeader header = 1;`
 */
             val headerBuilder:com.example.delhitransit.GtfsRealtime.FeedHeader.Builder
get() {
bitField0_ = bitField0_ or 0x00000001
onChanged()
return headerFieldBuilder.builder
}

/**
 * <pre>
 * Metadata about this feed and feed message.
</pre> *
 *
 * `required .com.example.delhitransit.FeedHeader header = 1;`
 */
            override val headerOrBuilder:com.example.delhitransit.GtfsRealtime.FeedHeaderOrBuilder
get() =if (headerBuilder_ != null) {
            headerBuilder_!!.messageOrBuilder
        } else {
            if (header_ == null)
                com.example.delhitransit.GtfsRealtime.FeedHeader.defaultInstance
            else
                header_
        }

/**
 * <pre>
 * Metadata about this feed and feed message.
</pre> *
 *
 * `required .com.example.delhitransit.FeedHeader header = 1;`
 */
            private val headerFieldBuilder:com.google.protobuf.SingleFieldBuilderV3<com.example.delhitransit.GtfsRealtime.FeedHeader, com.example.delhitransit.GtfsRealtime.FeedHeader.Builder, com.example.delhitransit.GtfsRealtime.FeedHeaderOrBuilder>
get() {
if (headerBuilder_ == null)
{
headerBuilder_ = com.google.protobuf.SingleFieldBuilderV3(
header,
parentForChildren,
isClean)
header_ = null
}
return headerBuilder_
}

private var entity_:MutableList<com.example.delhitransit.GtfsRealtime.FeedEntity>? = emptyList<com.example.delhitransit.GtfsRealtime.FeedEntity>()

private var entityBuilder_:com.google.protobuf.RepeatedFieldBuilderV3<com.example.delhitransit.GtfsRealtime.FeedEntity, com.example.delhitransit.GtfsRealtime.FeedEntity.Builder, com.example.delhitransit.GtfsRealtime.FeedEntityOrBuilder>? = null

/**
 * <pre>
 * Contents of the feed.
</pre> *
 *
 * `repeated .com.example.delhitransit.FeedEntity entity = 2;`
 */
            override val entityList:List<com.example.delhitransit.GtfsRealtime.FeedEntity>
get() =if (entityBuilder_ == null) {
            java.util.Collections.unmodifiableList(entity_!!)
        } else {
            entityBuilder_!!.messageList
        }

/**
 * <pre>
 * Contents of the feed.
</pre> *
 *
 * `repeated .com.example.delhitransit.FeedEntity entity = 2;`
 */
            override val entityCount:Int
get() =if (entityBuilder_ == null) {
            entity_!!.size
        } else {
            entityBuilder_!!.count
        }

/**
 * <pre>
 * Contents of the feed.
</pre> *
 *
 * `repeated .com.example.delhitransit.FeedEntity entity = 2;`
 */
            override val entityOrBuilderList:List< com.example.delhitransit.GtfsRealtime.FeedEntityOrBuilder>
get() =if (entityBuilder_ != null) {
            entityBuilder_!!.messageOrBuilderList
        } else {
            java.util.Collections.unmodifiableList(entity_!!)
        }

/**
 * <pre>
 * Contents of the feed.
</pre> *
 *
 * `repeated .com.example.delhitransit.FeedEntity entity = 2;`
 */
             val entityBuilderList:List<com.example.delhitransit.GtfsRealtime.FeedEntity.Builder>
get() =entityFieldBuilder.builderList

private val entityFieldBuilder:com.google.protobuf.RepeatedFieldBuilderV3<com.example.delhitransit.GtfsRealtime.FeedEntity, com.example.delhitransit.GtfsRealtime.FeedEntity.Builder, com.example.delhitransit.GtfsRealtime.FeedEntityOrBuilder>
get() {
if (entityBuilder_ == null)
{
entityBuilder_ = com.google.protobuf.RepeatedFieldBuilderV3(
entity_,
bitField0_ and 0x00000002 != 0,
parentForChildren,
isClean)
entity_ = null
}
return entityBuilder_
}

override fun internalGetFieldAccessorTable():com.google.protobuf.GeneratedMessageV3.FieldAccessorTable {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_FeedMessage_fieldAccessorTable
.ensureFieldAccessorsInitialized(
com.example.delhitransit.GtfsRealtime.FeedMessage::class.java, com.example.delhitransit.GtfsRealtime.FeedMessage.Builder::class.java)
}

 // Construct using com.example.delhitransit.GtfsRealtime.FeedMessage.newBuilder()
            private constructor() {
maybeForceBuilderInitialization()
}

private constructor(
parent:com.google.protobuf.GeneratedMessageV3.BuilderParent) : super(parent) {
maybeForceBuilderInitialization()
}

private fun maybeForceBuilderInitialization() {
if (com.google.protobuf.GeneratedMessageV3
.alwaysUseFieldBuilders)
{
headerFieldBuilder
entityFieldBuilder
}
}

override fun clear():Builder {
super.clear()
if (headerBuilder_ == null)
{
header_ = null
}
else
{
headerBuilder_!!.clear()
}
bitField0_ = bitField0_ and 0x00000001.inv()
if (entityBuilder_ == null)
{
entity_ = emptyList<FeedEntity>()
bitField0_ = bitField0_ and 0x00000002.inv()
}
else
{
entityBuilder_!!.clear()
}
return this
}

override fun getDescriptorForType():com.google.protobuf.Descriptors.Descriptor {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_FeedMessage_descriptor
}

override fun getDefaultInstanceForType():com.example.delhitransit.GtfsRealtime.FeedMessage {
return com.example.delhitransit.GtfsRealtime.FeedMessage.defaultInstance
}

override fun build():com.example.delhitransit.GtfsRealtime.FeedMessage {
val result = buildPartial()
if (!result.isInitialized)
{
throw AbstractMessage.Builder.newUninitializedMessageException(result)
}
return result
}

override fun buildPartial():com.example.delhitransit.GtfsRealtime.FeedMessage {
val result = com.example.delhitransit.GtfsRealtime.FeedMessage(this)
val from_bitField0_ = bitField0_
var to_bitField0_ = 0
if (from_bitField0_ and 0x00000001 != 0)
{
if (headerBuilder_ == null)
{
result.header_ = header_
}
else
{
result.header_ = headerBuilder_!!.build()
}
to_bitField0_ = to_bitField0_ or 0x00000001
}
if (entityBuilder_ == null)
{
if (bitField0_ and 0x00000002 != 0)
{
entity_ = java.util.Collections.unmodifiableList(entity_!!)
bitField0_ = bitField0_ and 0x00000002.inv()
}
result.entity_ = entity_
}
else
{
result.entity_ = entityBuilder_!!.build()
}
result.bitField0_ = to_bitField0_
onBuilt()
return result
}

override fun clone():Builder {
return super.clone()
}

override fun setField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
value:Any):Builder {
return super.setField(field, value)
}

override fun clearField(
field:com.google.protobuf.Descriptors.FieldDescriptor):Builder {
return super.clearField(field)
}

override fun clearOneof(
oneof:com.google.protobuf.Descriptors.OneofDescriptor):Builder {
return super.clearOneof(oneof)
}

override fun setRepeatedField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
index:Int, value:Any):Builder {
return super.setRepeatedField(field, index, value)
}

override fun addRepeatedField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
value:Any):Builder {
return super.addRepeatedField(field, value)
}

override fun <Type> setExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.FeedMessage, Type>,
value:Type):Builder {
return super.setExtension(extension, value)
}

override fun <Type> setExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.FeedMessage, List<Type>>,
index:Int, value:Type):Builder {
return super.setExtension(extension, index, value)
}

override fun <Type> addExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.FeedMessage, List<Type>>,
value:Type):Builder {
return super.addExtension(extension, value)
}

override fun <Type> clearExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.FeedMessage, *>):Builder {
return super.clearExtension<Any>(extension)
}

override fun mergeFrom(other:com.google.protobuf.Message):Builder {
if (other is com.example.delhitransit.GtfsRealtime.FeedMessage)
{
return mergeFrom(other)
}
else
{
super.mergeFrom(other)
return this
}
}

 fun mergeFrom(other:com.example.delhitransit.GtfsRealtime.FeedMessage):Builder {
if (other === com.example.delhitransit.GtfsRealtime.FeedMessage.defaultInstance)
return this
if (other.hasHeader())
{
mergeHeader(other.header)
}
if (entityBuilder_ == null)
{
if (!other.entity_!!.isEmpty())
{
if (entity_!!.isEmpty())
{
entity_ = other.entity_
bitField0_ = bitField0_ and 0x00000002.inv()
}
else
{
ensureEntityIsMutable()
entity_!!.addAll(other.entity_!!)
}
onChanged()
}
}
else
{
if (!other.entity_!!.isEmpty())
{
if (entityBuilder_!!.isEmpty)
{
entityBuilder_!!.dispose()
entityBuilder_ = null
entity_ = other.entity_
bitField0_ = bitField0_ and 0x00000002.inv()
entityBuilder_ = if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders)
entityFieldBuilder
else
null
}
else
{
entityBuilder_!!.addAllMessages(other.entity_!!)
}
}
}
this.mergeExtensionFields(other)
this.mergeUnknownFields(other.unknownFields)
onChanged()
return this
}

override fun isInitialized():Boolean {
if (!hasHeader())
{
return false
}
if (!header.isInitialized)
{
return false
}
for (i in 0 until entityCount)
{
if (!getEntity(i).isInitialized)
{
return false
}
}
return if (!extensionsAreInitialized()) {
            false
        } else true
}

@Throws(java.io.IOException::class)
override fun mergeFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):Builder {
var parsedMessage:com.example.delhitransit.GtfsRealtime.FeedMessage? = null
try
{
parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry)
}
catch (e:com.google.protobuf.InvalidProtocolBufferException) {
parsedMessage = e.unfinishedMessage as com.example.delhitransit.GtfsRealtime.FeedMessage
throw e.unwrapIOException()
}
finally
{
if (parsedMessage != null)
{
mergeFrom(parsedMessage)
}
}
return this
}

/**
 * <pre>
 * Metadata about this feed and feed message.
</pre> *
 *
 * `required .com.example.delhitransit.FeedHeader header = 1;`
 */
            override fun hasHeader():Boolean {
return bitField0_ and 0x00000001 != 0
}

/**
 * <pre>
 * Metadata about this feed and feed message.
</pre> *
 *
 * `required .com.example.delhitransit.FeedHeader header = 1;`
 */
             fun setHeader(value:com.example.delhitransit.GtfsRealtime.FeedHeader?):Builder {
if (headerBuilder_ == null)
{
if (value == null)
{
throw NullPointerException()
}
header_ = value
onChanged()
}
else
{
headerBuilder_!!.setMessage(value!!)
}
bitField0_ = bitField0_ or 0x00000001
return this
}

/**
 * <pre>
 * Metadata about this feed and feed message.
</pre> *
 *
 * `required .com.example.delhitransit.FeedHeader header = 1;`
 */
             fun setHeader(
builderForValue:com.example.delhitransit.GtfsRealtime.FeedHeader.Builder):Builder {
if (headerBuilder_ == null)
{
header_ = builderForValue.build()
onChanged()
}
else
{
headerBuilder_!!.setMessage(builderForValue.build())
}
bitField0_ = bitField0_ or 0x00000001
return this
}

/**
 * <pre>
 * Metadata about this feed and feed message.
</pre> *
 *
 * `required .com.example.delhitransit.FeedHeader header = 1;`
 */
             fun mergeHeader(value:com.example.delhitransit.GtfsRealtime.FeedHeader):Builder {
if (headerBuilder_ == null)
{
if (bitField0_ and 0x00000001 != 0 &&
header_ != null &&
header_ !== com.example.delhitransit.GtfsRealtime.FeedHeader.defaultInstance)
{
header_ = com.example.delhitransit.GtfsRealtime.FeedHeader.newBuilder(header_).mergeFrom(value).buildPartial()
}
else
{
header_ = value
}
onChanged()
}
else
{
headerBuilder_!!.mergeFrom(value)
}
bitField0_ = bitField0_ or 0x00000001
return this
}

/**
 * <pre>
 * Metadata about this feed and feed message.
</pre> *
 *
 * `required .com.example.delhitransit.FeedHeader header = 1;`
 */
             fun clearHeader():Builder {
if (headerBuilder_ == null)
{
header_ = null
onChanged()
}
else
{
headerBuilder_!!.clear()
}
bitField0_ = bitField0_ and 0x00000001.inv()
return this
}

private fun ensureEntityIsMutable() {
if (bitField0_ and 0x00000002 == 0)
{
entity_ = java.util.ArrayList(entity_!!)
bitField0_ = bitField0_ or 0x00000002
}
}

/**
 * <pre>
 * Contents of the feed.
</pre> *
 *
 * `repeated .com.example.delhitransit.FeedEntity entity = 2;`
 */
            override fun getEntity(index:Int):com.example.delhitransit.GtfsRealtime.FeedEntity {
return if (entityBuilder_ == null) {
            entity_!![index]
        } else {
            entityBuilder_!!.getMessage(index)
        }
}

/**
 * <pre>
 * Contents of the feed.
</pre> *
 *
 * `repeated .com.example.delhitransit.FeedEntity entity = 2;`
 */
             fun setEntity(
index:Int, value:com.example.delhitransit.GtfsRealtime.FeedEntity?):Builder {
if (entityBuilder_ == null)
{
if (value == null)
{
throw NullPointerException()
}
ensureEntityIsMutable()
entity_!![index] = value
onChanged()
}
else
{
entityBuilder_!!.setMessage(index, value!!)
}
return this
}

/**
 * <pre>
 * Contents of the feed.
</pre> *
 *
 * `repeated .com.example.delhitransit.FeedEntity entity = 2;`
 */
             fun setEntity(
index:Int, builderForValue:com.example.delhitransit.GtfsRealtime.FeedEntity.Builder):Builder {
if (entityBuilder_ == null)
{
ensureEntityIsMutable()
entity_!![index] = builderForValue.build()
onChanged()
}
else
{
entityBuilder_!!.setMessage(index, builderForValue.build())
}
return this
}

/**
 * <pre>
 * Contents of the feed.
</pre> *
 *
 * `repeated .com.example.delhitransit.FeedEntity entity = 2;`
 */
             fun addEntity(value:com.example.delhitransit.GtfsRealtime.FeedEntity?):Builder {
if (entityBuilder_ == null)
{
if (value == null)
{
throw NullPointerException()
}
ensureEntityIsMutable()
entity_!!.add(value)
onChanged()
}
else
{
entityBuilder_!!.addMessage(value!!)
}
return this
}

/**
 * <pre>
 * Contents of the feed.
</pre> *
 *
 * `repeated .com.example.delhitransit.FeedEntity entity = 2;`
 */
             fun addEntity(
index:Int, value:com.example.delhitransit.GtfsRealtime.FeedEntity?):Builder {
if (entityBuilder_ == null)
{
if (value == null)
{
throw NullPointerException()
}
ensureEntityIsMutable()
entity_!!.add(index, value)
onChanged()
}
else
{
entityBuilder_!!.addMessage(index, value!!)
}
return this
}

/**
 * <pre>
 * Contents of the feed.
</pre> *
 *
 * `repeated .com.example.delhitransit.FeedEntity entity = 2;`
 */
             fun addEntity(
builderForValue:com.example.delhitransit.GtfsRealtime.FeedEntity.Builder):Builder {
if (entityBuilder_ == null)
{
ensureEntityIsMutable()
entity_!!.add(builderForValue.build())
onChanged()
}
else
{
entityBuilder_!!.addMessage(builderForValue.build())
}
return this
}

/**
 * <pre>
 * Contents of the feed.
</pre> *
 *
 * `repeated .com.example.delhitransit.FeedEntity entity = 2;`
 */
             fun addEntity(
index:Int, builderForValue:com.example.delhitransit.GtfsRealtime.FeedEntity.Builder):Builder {
if (entityBuilder_ == null)
{
ensureEntityIsMutable()
entity_!!.add(index, builderForValue.build())
onChanged()
}
else
{
entityBuilder_!!.addMessage(index, builderForValue.build())
}
return this
}

/**
 * <pre>
 * Contents of the feed.
</pre> *
 *
 * `repeated .com.example.delhitransit.FeedEntity entity = 2;`
 */
             fun addAllEntity(
values:Iterable< com.example.delhitransit.GtfsRealtime.FeedEntity>):Builder {
if (entityBuilder_ == null)
{
ensureEntityIsMutable()
com.google.protobuf.AbstractMessageLite.Builder.addAll(
values, entity_!!)
onChanged()
}
else
{
entityBuilder_!!.addAllMessages(values)
}
return this
}

/**
 * <pre>
 * Contents of the feed.
</pre> *
 *
 * `repeated .com.example.delhitransit.FeedEntity entity = 2;`
 */
             fun clearEntity():Builder {
if (entityBuilder_ == null)
{
entity_ = emptyList<FeedEntity>()
bitField0_ = bitField0_ and 0x00000002.inv()
onChanged()
}
else
{
entityBuilder_!!.clear()
}
return this
}

/**
 * <pre>
 * Contents of the feed.
</pre> *
 *
 * `repeated .com.example.delhitransit.FeedEntity entity = 2;`
 */
             fun removeEntity(index:Int):Builder {
if (entityBuilder_ == null)
{
ensureEntityIsMutable()
entity_!!.removeAt(index)
onChanged()
}
else
{
entityBuilder_!!.remove(index)
}
return this
}

/**
 * <pre>
 * Contents of the feed.
</pre> *
 *
 * `repeated .com.example.delhitransit.FeedEntity entity = 2;`
 */
             fun getEntityBuilder(
index:Int):com.example.delhitransit.GtfsRealtime.FeedEntity.Builder {
return entityFieldBuilder.getBuilder(index)
}

/**
 * <pre>
 * Contents of the feed.
</pre> *
 *
 * `repeated .com.example.delhitransit.FeedEntity entity = 2;`
 */
            override fun getEntityOrBuilder(
index:Int):com.example.delhitransit.GtfsRealtime.FeedEntityOrBuilder {
return if (entityBuilder_ == null) {
            entity_!![index]
        } else {
            entityBuilder_!!.getMessageOrBuilder(index)
        }
}

/**
 * <pre>
 * Contents of the feed.
</pre> *
 *
 * `repeated .com.example.delhitransit.FeedEntity entity = 2;`
 */
             fun addEntityBuilder():com.example.delhitransit.GtfsRealtime.FeedEntity.Builder {
return entityFieldBuilder.addBuilder(
com.example.delhitransit.GtfsRealtime.FeedEntity.defaultInstance)
}

/**
 * <pre>
 * Contents of the feed.
</pre> *
 *
 * `repeated .com.example.delhitransit.FeedEntity entity = 2;`
 */
             fun addEntityBuilder(
index:Int):com.example.delhitransit.GtfsRealtime.FeedEntity.Builder {
return entityFieldBuilder.addBuilder(
index, com.example.delhitransit.GtfsRealtime.FeedEntity.defaultInstance)
}

override fun setUnknownFields(
unknownFields:com.google.protobuf.UnknownFieldSet):Builder {
return super.setUnknownFields(unknownFields)
}

override fun mergeUnknownFields(
unknownFields:com.google.protobuf.UnknownFieldSet):Builder {
return super.mergeUnknownFields(unknownFields)
}

companion object {
 val descriptor:com.google.protobuf.Descriptors.Descriptor
get() =com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_FeedMessage_descriptor
}


 // @@protoc_insertion_point(builder_scope:com.example.delhitransit.FeedMessage)
        }

override fun getParserForType():com.google.protobuf.Parser<FeedMessage> {
return PARSER
}

override fun getDefaultInstanceForType():com.example.delhitransit.GtfsRealtime.FeedMessage {
return defaultInstance
}

companion object {
private val serialVersionUID = 0L

 val descriptor:com.google.protobuf.Descriptors.Descriptor
get() =com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_FeedMessage_descriptor
 val HEADER_FIELD_NUMBER = 1

 val ENTITY_FIELD_NUMBER = 2

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:java.nio.ByteBuffer):com.example.delhitransit.GtfsRealtime.FeedMessage {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:java.nio.ByteBuffer,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.FeedMessage {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:com.google.protobuf.ByteString):com.example.delhitransit.GtfsRealtime.FeedMessage {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:com.google.protobuf.ByteString,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.FeedMessage {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(data:ByteArray):com.example.delhitransit.GtfsRealtime.FeedMessage {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:ByteArray,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.FeedMessage {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseFrom(input:java.io.InputStream):com.example.delhitransit.GtfsRealtime.FeedMessage {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:java.io.InputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.FeedMessage {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseDelimitedFrom(input:java.io.InputStream):com.example.delhitransit.GtfsRealtime.FeedMessage {
return com.google.protobuf.GeneratedMessageV3
.parseDelimitedWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseDelimitedFrom(
input:java.io.InputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.FeedMessage {
return com.google.protobuf.GeneratedMessageV3
.parseDelimitedWithIOException(PARSER, input, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:com.google.protobuf.CodedInputStream):com.example.delhitransit.GtfsRealtime.FeedMessage {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.FeedMessage {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input, extensionRegistry)
}

 fun newBuilder():Builder {
return defaultInstance.toBuilder()
}

 fun newBuilder(prototype:com.example.delhitransit.GtfsRealtime.FeedMessage):Builder {
return defaultInstance.toBuilder().mergeFrom(prototype)
}

 // @@protoc_insertion_point(class_scope:com.example.delhitransit.FeedMessage)
         val defaultInstance:com.example.delhitransit.GtfsRealtime.FeedMessage

init{
defaultInstance = com.example.delhitransit.GtfsRealtime.FeedMessage()
}

@Deprecated("")
 val PARSER:com.google.protobuf.Parser<FeedMessage> = object:com.google.protobuf.AbstractParser<FeedMessage>() {
@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
override fun parsePartialFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):FeedMessage {
return FeedMessage(input, extensionRegistry)
}
}

 fun parser():com.google.protobuf.Parser<FeedMessage> {
return PARSER
}
}

}

 interface FeedHeaderOrBuilder:
 // @@protoc_insertion_point(interface_extends:com.example.delhitransit.FeedHeader)
            com.google.protobuf.GeneratedMessageV3.ExtendableMessageOrBuilder<FeedHeader> {

/**
 * <pre>
 * Version of the feed specification.
 * The current version is 2.0.
</pre> *
 *
 * `required string gtfs_realtime_version = 1;`
 */
         val gtfsRealtimeVersion:java.lang.String

/**
 * <pre>
 * Version of the feed specification.
 * The current version is 2.0.
</pre> *
 *
 * `required string gtfs_realtime_version = 1;`
 */
         val gtfsRealtimeVersionBytes:com.google.protobuf.ByteString

/**
 * `optional .com.example.delhitransit.FeedHeader.Incrementality incrementality = 2 [default = FULL_DATASET];`
 */
         val incrementality:com.example.delhitransit.GtfsRealtime.FeedHeader.Incrementality

/**
 * <pre>
 * This timestamp identifies the moment when the content of this feed has been
 * created (in server time). In POSIX time (i.e., number of seconds since
 * January 1st 1970 00:00:00 UTC).
</pre> *
 *
 * `optional uint64 timestamp = 3;`
 */
         val timestamp:Long

/**
 * <pre>
 * Version of the feed specification.
 * The current version is 2.0.
</pre> *
 *
 * `required string gtfs_realtime_version = 1;`
 */
         fun hasGtfsRealtimeVersion():Boolean

/**
 * `optional .com.example.delhitransit.FeedHeader.Incrementality incrementality = 2 [default = FULL_DATASET];`
 */
         fun hasIncrementality():Boolean

/**
 * <pre>
 * This timestamp identifies the moment when the content of this feed has been
 * created (in server time). In POSIX time (i.e., number of seconds since
 * January 1st 1970 00:00:00 UTC).
</pre> *
 *
 * `optional uint64 timestamp = 3;`
 */
         fun hasTimestamp():Boolean
}

/**
 * <pre>
 * Metadata about a feed, included in feed messages.
</pre> *
 *
 *
 * Protobuf type `com.example.delhitransit.FeedHeader`
 */
     class FeedHeader:com.google.protobuf.GeneratedMessageV3.ExtendableMessage<FeedHeader>,
 // @@protoc_insertion_point(message_implements:com.example.delhitransit.FeedHeader)
            FeedHeaderOrBuilder {

private var bitField0_:Int = 0
@Volatile private var gtfsRealtimeVersion_:Any? = null

/**
 * <pre>
 * Version of the feed specification.
 * The current version is 2.0.
</pre> *
 *
 * `required string gtfs_realtime_version = 1;`
 */
        override val gtfsRealtimeVersion:java.lang.String
get() {
val ref = gtfsRealtimeVersion_
if (ref is java.lang.String)
{
return ref
}
else
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
gtfsRealtimeVersion_ = s
}
return s
}
}

/**
 * <pre>
 * Version of the feed specification.
 * The current version is 2.0.
</pre> *
 *
 * `required string gtfs_realtime_version = 1;`
 */
        override val gtfsRealtimeVersionBytes:com.google.protobuf.ByteString
get() {
val ref = gtfsRealtimeVersion_
if (ref is java.lang.String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
gtfsRealtimeVersion_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}
private var incrementality_:Int = 0

/**
 * `optional .com.example.delhitransit.FeedHeader.Incrementality incrementality = 2 [default = FULL_DATASET];`
 */
        override val incrementality:com.example.delhitransit.GtfsRealtime.FeedHeader.Incrementality
get() {
val result = com.example.delhitransit.GtfsRealtime.FeedHeader.Incrementality.valueOf(incrementality_)
return result ?: com.example.delhitransit.GtfsRealtime.FeedHeader.Incrementality.FULL_DATASET
}
/**
 * <pre>
 * This timestamp identifies the moment when the content of this feed has been
 * created (in server time). In POSIX time (i.e., number of seconds since
 * January 1st 1970 00:00:00 UTC).
</pre> *
 *
 * `optional uint64 timestamp = 3;`
 */
        override var timestamp:Long = 0
private set

private var memoizedIsInitialized:Byte = -1

 // Use FeedHeader.newBuilder() to construct.
        private constructor(builder:com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.example.delhitransit.GtfsRealtime.FeedHeader, *>) : super(builder) {}

private constructor() {
gtfsRealtimeVersion_ = ""
incrementality_ = 0
}

 //        @java.lang.Override
 //        @SuppressWarnings({"unused"})
 //        protected java.lang.Object newInstance(
 //                UnusedPrivateParameter unused) {
 //            return new FeedHeader();
 //        }

        override fun getUnknownFields():com.google.protobuf.UnknownFieldSet {
return this.unknownFields
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
private constructor(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite?) : this() {
if (extensionRegistry == null)
{
throw java.lang.NullPointerException()
}
val mutable_bitField0_ = 0
val unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder()
try
{
var done = false
while (!done)
{
val tag = input.readTag()
when (tag) {
0 -> done = true
10 -> {
val bs = input.readBytes()
bitField0_ = bitField0_ or 0x00000001
gtfsRealtimeVersion_ = bs
}
16 -> {
val rawValue = input.readEnum()
val value = com.example.delhitransit.GtfsRealtime.FeedHeader.Incrementality.valueOf(rawValue)
if (value == null)
{
unknownFields.mergeVarintField(2, rawValue)
}
else
{
bitField0_ = bitField0_ or 0x00000002
incrementality_ = rawValue
}
}
24 -> {
bitField0_ = bitField0_ or 0x00000004
timestamp = input.readUInt64()
}
else -> {
if (!parseUnknownField(
input, unknownFields, extensionRegistry, tag))
{
done = true
}
}
}
}
}
catch (e:com.google.protobuf.InvalidProtocolBufferException) {
throw e.setUnfinishedMessage(this)
}
catch (e:java.io.IOException) {
throw com.google.protobuf.InvalidProtocolBufferException(
e).setUnfinishedMessage(this)
}
finally
{
this.unknownFields = unknownFields.build()
makeExtensionsImmutable()
}
}

override fun internalGetFieldAccessorTable():com.google.protobuf.GeneratedMessageV3.FieldAccessorTable {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_FeedHeader_fieldAccessorTable
.ensureFieldAccessorsInitialized(
com.example.delhitransit.GtfsRealtime.FeedHeader::class.java, com.example.delhitransit.GtfsRealtime.FeedHeader.Builder::class.java)
}

/**
 * <pre>
 * Determines whether the current fetch is incremental.  Currently,
 * DIFFERENTIAL mode is unsupported and behavior is unspecified for feeds
 * that use this mode.  There are discussions on the GTFS Realtime mailing
 * list around fully specifying the behavior of DIFFERENTIAL mode and the
 * documentation will be updated when those discussions are finalized.
</pre> *
 *
 *
 * Protobuf enum `com.example.delhitransit.FeedHeader.Incrementality`
 */
         enum class Incrementality private constructor(private val value:Int):com.google.protobuf.ProtocolMessageEnum {
/**
 * `FULL_DATASET = 0;`
 */
            FULL_DATASET(0),
/**
 * `DIFFERENTIAL = 1;`
 */
            DIFFERENTIAL(1);


override fun getNumber():Int {
return value
}

override fun getValueDescriptor():com.google.protobuf.Descriptors.EnumValueDescriptor {
return descriptor.values[ordinal]
}

override fun getDescriptorForType():com.google.protobuf.Descriptors.EnumDescriptor {
return descriptor
}

companion object {

/**
 * `FULL_DATASET = 0;`
 */
             val FULL_DATASET_VALUE = 0
/**
 * `DIFFERENTIAL = 1;`
 */
             val DIFFERENTIAL_VALUE = 1


            @Deprecated("Use {@link #forNumber(int)} instead.")
 fun valueOf(value:Int):Incrementality? {
return forNumber(value)
}

 fun forNumber(value:Int):Incrementality? {
when (value) {
0 -> return FULL_DATASET
1 -> return DIFFERENTIAL
else -> return null
}
}

 fun internalGetValueMap():com.google.protobuf.Internal.EnumLiteMap<Incrementality> {
return internalValueMap
}

private val internalValueMap = com.google.protobuf.Internal.EnumLiteMap<Incrementality> { number -> Incrementality.forNumber(number) }

 val descriptor:com.google.protobuf.Descriptors.EnumDescriptor
get() =com.example.delhitransit.GtfsRealtime.FeedHeader.descriptor.enumTypes[0]

private val VALUES = values()

 fun valueOf(
desc:com.google.protobuf.Descriptors.EnumValueDescriptor):Incrementality {
require(desc.type == descriptor) { "EnumValueDescriptor is not for this type." }
return VALUES[desc.index]
}
}

 // @@protoc_insertion_point(enum_scope:com.example.delhitransit.FeedHeader.Incrementality)
        }

/**
 * <pre>
 * Version of the feed specification.
 * The current version is 2.0.
</pre> *
 *
 * `required string gtfs_realtime_version = 1;`
 */
        override fun hasGtfsRealtimeVersion():Boolean {
return bitField0_ and 0x00000001 != 0
}

/**
 * `optional .com.example.delhitransit.FeedHeader.Incrementality incrementality = 2 [default = FULL_DATASET];`
 */
        override fun hasIncrementality():Boolean {
return bitField0_ and 0x00000002 != 0
}

/**
 * <pre>
 * This timestamp identifies the moment when the content of this feed has been
 * created (in server time). In POSIX time (i.e., number of seconds since
 * January 1st 1970 00:00:00 UTC).
</pre> *
 *
 * `optional uint64 timestamp = 3;`
 */
        override fun hasTimestamp():Boolean {
return bitField0_ and 0x00000004 != 0
}

override fun isInitialized():Boolean {
val isInitialized = memoizedIsInitialized
if (isInitialized.toInt() == 1) return true
if (isInitialized.toInt() == 0) return false

if (!hasGtfsRealtimeVersion())
{
memoizedIsInitialized = 0
return false
}
if (!extensionsAreInitialized())
{
memoizedIsInitialized = 0
return false
}
memoizedIsInitialized = 1
return true
}

@Throws(java.io.IOException::class)
override fun writeTo(output:com.google.protobuf.CodedOutputStream) {
val extensionWriter = newExtensionWriter()
if (bitField0_ and 0x00000001 != 0)
{
com.google.protobuf.GeneratedMessageV3.writeString(output, 1, gtfsRealtimeVersion_)
}
if (bitField0_ and 0x00000002 != 0)
{
output.writeEnum(2, incrementality_)
}
if (bitField0_ and 0x00000004 != 0)
{
output.writeUInt64(3, timestamp)
}
extensionWriter.writeUntil(2000, output)
unknownFields.writeTo(output)
}

override fun getSerializedSize():Int {
var size = memoizedSize
if (size != -1) return size

size = 0
if (bitField0_ and 0x00000001 != 0)
{
size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, gtfsRealtimeVersion_!!)
}
if (bitField0_ and 0x00000002 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeEnumSize(2, incrementality_)
}
if (bitField0_ and 0x00000004 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeUInt64Size(3, timestamp)
}
size += extensionsSerializedSize()
size += unknownFields.serializedSize
memoizedSize = size
return size
}

override fun equals(obj:Any?):Boolean {
if (obj === this)
{
return true
}
if (obj !is com.example.delhitransit.GtfsRealtime.FeedHeader)
{
return super.equals(obj)
}
val other = obj as com.example.delhitransit.GtfsRealtime.FeedHeader?

if (hasGtfsRealtimeVersion() != other!!.hasGtfsRealtimeVersion()) return false
if (hasGtfsRealtimeVersion())
{
if (gtfsRealtimeVersion != other.gtfsRealtimeVersion)
return false
}
if (hasIncrementality() != other.hasIncrementality()) return false
if (hasIncrementality())
{
if (incrementality_ != other.incrementality_) return false
}
if (hasTimestamp() != other.hasTimestamp()) return false
if (hasTimestamp())
{
if (timestamp != other.timestamp)
return false
}
if (unknownFields != other.unknownFields) return false
return if (extensionFields != other.extensionFields) false else true
}

override fun hashCode():Int {
if (memoizedHashCode != 0)
{
return memoizedHashCode
}
var hash = 41
hash = 19 * hash + descriptor.hashCode()
if (hasGtfsRealtimeVersion())
{
hash = 37 * hash + GTFS_REALTIME_VERSION_FIELD_NUMBER
hash = 53 * hash + gtfsRealtimeVersion.hashCode()
}
if (hasIncrementality())
{
hash = 37 * hash + INCREMENTALITY_FIELD_NUMBER
hash = 53 * hash + incrementality_
}
if (hasTimestamp())
{
hash = 37 * hash + TIMESTAMP_FIELD_NUMBER
hash = 53 * hash + com.google.protobuf.Internal.hashLong(
timestamp)
}
hash = AbstractMessage.hashFields(hash, extensionFields)
hash = 29 * hash + unknownFields.hashCode()
memoizedHashCode = hash
return hash
}

override fun newBuilderForType():Builder {
return newBuilder()
}

override fun toBuilder():Builder {
return if (this === defaultInstance)
Builder()
else
Builder().mergeFrom(this)
}

override fun newBuilderForType(
parent:com.google.protobuf.GeneratedMessageV3.BuilderParent):Builder {
return Builder(parent)
}

/**
 * <pre>
 * Metadata about a feed, included in feed messages.
</pre> *
 *
 *
 * Protobuf type `com.example.delhitransit.FeedHeader`
 */
         class Builder:com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.example.delhitransit.GtfsRealtime.FeedHeader, Builder>,
 // @@protoc_insertion_point(builder_implements:com.example.delhitransit.FeedHeader)
                com.example.delhitransit.GtfsRealtime.FeedHeaderOrBuilder {

private var bitField0_:Int = 0

private var gtfsRealtimeVersion_:Any? = ""

/**
 * <pre>
 * Version of the feed specification.
 * The current version is 2.0.
</pre> *
 *
 * `required string gtfs_realtime_version = 1;`
 */
            override val gtfsRealtimeVersion:java.lang.String
get() {
val ref = gtfsRealtimeVersion_
if (ref !is java.lang.String)
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
gtfsRealtimeVersion_ = s
}
return s
}
else
{
return ref
}
}

/**
 * <pre>
 * Version of the feed specification.
 * The current version is 2.0.
</pre> *
 *
 * `required string gtfs_realtime_version = 1;`
 */
            override val gtfsRealtimeVersionBytes:com.google.protobuf.ByteString
get() {
val ref = gtfsRealtimeVersion_
if (ref is String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
gtfsRealtimeVersion_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}

private var incrementality_ = 0

/**
 * `optional .com.example.delhitransit.FeedHeader.Incrementality incrementality = 2 [default = FULL_DATASET];`
 */
            override val incrementality:com.example.delhitransit.GtfsRealtime.FeedHeader.Incrementality
get() {
val result = com.example.delhitransit.GtfsRealtime.FeedHeader.Incrementality.valueOf(incrementality_)
return result ?: com.example.delhitransit.GtfsRealtime.FeedHeader.Incrementality.FULL_DATASET
}

/**
 * <pre>
 * This timestamp identifies the moment when the content of this feed has been
 * created (in server time). In POSIX time (i.e., number of seconds since
 * January 1st 1970 00:00:00 UTC).
</pre> *
 *
 * `optional uint64 timestamp = 3;`
 */
            override var timestamp:Long = 0
private set

override fun internalGetFieldAccessorTable():com.google.protobuf.GeneratedMessageV3.FieldAccessorTable {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_FeedHeader_fieldAccessorTable
.ensureFieldAccessorsInitialized(
com.example.delhitransit.GtfsRealtime.FeedHeader::class.java, com.example.delhitransit.GtfsRealtime.FeedHeader.Builder::class.java)
}

 // Construct using com.example.delhitransit.GtfsRealtime.FeedHeader.newBuilder()
            private constructor() {
maybeForceBuilderInitialization()
}

private constructor(
parent:com.google.protobuf.GeneratedMessageV3.BuilderParent) : super(parent) {
maybeForceBuilderInitialization()
}

private fun maybeForceBuilderInitialization() {
if (com.google.protobuf.GeneratedMessageV3
.alwaysUseFieldBuilders)
{}
}

override fun clear():Builder {
super.clear()
gtfsRealtimeVersion_ = ""
bitField0_ = bitField0_ and 0x00000001.inv()
incrementality_ = 0
bitField0_ = bitField0_ and 0x00000002.inv()
timestamp = 0L
bitField0_ = bitField0_ and 0x00000004.inv()
return this
}

override fun getDescriptorForType():com.google.protobuf.Descriptors.Descriptor {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_FeedHeader_descriptor
}

override fun getDefaultInstanceForType():com.example.delhitransit.GtfsRealtime.FeedHeader {
return com.example.delhitransit.GtfsRealtime.FeedHeader.defaultInstance
}

override fun build():com.example.delhitransit.GtfsRealtime.FeedHeader {
val result = buildPartial()
if (!result.isInitialized)
{
throw AbstractMessage.Builder.newUninitializedMessageException(result)
}
return result
}

override fun buildPartial():com.example.delhitransit.GtfsRealtime.FeedHeader {
val result = com.example.delhitransit.GtfsRealtime.FeedHeader(this)
val from_bitField0_ = bitField0_
var to_bitField0_ = 0
if (from_bitField0_ and 0x00000001 != 0)
{
to_bitField0_ = to_bitField0_ or 0x00000001
}
result.gtfsRealtimeVersion_ = gtfsRealtimeVersion_
if (from_bitField0_ and 0x00000002 != 0)
{
to_bitField0_ = to_bitField0_ or 0x00000002
}
result.incrementality_ = incrementality_
if (from_bitField0_ and 0x00000004 != 0)
{
result.timestamp = timestamp
to_bitField0_ = to_bitField0_ or 0x00000004
}
result.bitField0_ = to_bitField0_
onBuilt()
return result
}

override fun clone():Builder {
return super.clone()
}

override fun setField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
value:Any):Builder {
return super.setField(field, value)
}

override fun clearField(
field:com.google.protobuf.Descriptors.FieldDescriptor):Builder {
return super.clearField(field)
}

override fun clearOneof(
oneof:com.google.protobuf.Descriptors.OneofDescriptor):Builder {
return super.clearOneof(oneof)
}

override fun setRepeatedField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
index:Int, value:Any):Builder {
return super.setRepeatedField(field, index, value)
}

override fun addRepeatedField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
value:Any):Builder {
return super.addRepeatedField(field, value)
}

override fun <Type> setExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.FeedHeader, Type>,
value:Type):Builder {
return super.setExtension(extension, value)
}

override fun <Type> setExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.FeedHeader, List<Type>>,
index:Int, value:Type):Builder {
return super.setExtension(extension, index, value)
}

override fun <Type> addExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.FeedHeader, List<Type>>,
value:Type):Builder {
return super.addExtension(extension, value)
}

override fun <Type> clearExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.FeedHeader, *>):Builder {
return super.clearExtension<Any>(extension)
}

override fun mergeFrom(other:com.google.protobuf.Message):Builder {
if (other is com.example.delhitransit.GtfsRealtime.FeedHeader)
{
return mergeFrom(other)
}
else
{
super.mergeFrom(other)
return this
}
}

 fun mergeFrom(other:com.example.delhitransit.GtfsRealtime.FeedHeader?):Builder {
if (other === com.example.delhitransit.GtfsRealtime.FeedHeader.defaultInstance)
return this
if (other!!.hasGtfsRealtimeVersion())
{
bitField0_ = bitField0_ or 0x00000001
gtfsRealtimeVersion_ = other.gtfsRealtimeVersion_
onChanged()
}
if (other.hasIncrementality())
{
setIncrementality(other.incrementality)
}
if (other.hasTimestamp())
{
setTimestamp(other.timestamp)
}
this.mergeExtensionFields(other)
this.mergeUnknownFields(other.unknownFields)
onChanged()
return this
}

override fun isInitialized():Boolean {
if (!hasGtfsRealtimeVersion())
{
return false
}
return if (!extensionsAreInitialized()) {
            false
        } else true
}

@Throws(java.io.IOException::class)
override fun mergeFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):Builder {
var parsedMessage:com.example.delhitransit.GtfsRealtime.FeedHeader? = null
try
{
parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry)
}
catch (e:com.google.protobuf.InvalidProtocolBufferException) {
parsedMessage = e.unfinishedMessage as com.example.delhitransit.GtfsRealtime.FeedHeader
throw e.unwrapIOException()
}
finally
{
if (parsedMessage != null)
{
mergeFrom(parsedMessage)
}
}
return this
}

/**
 * <pre>
 * Version of the feed specification.
 * The current version is 2.0.
</pre> *
 *
 * `required string gtfs_realtime_version = 1;`
 */
            override fun hasGtfsRealtimeVersion():Boolean {
return bitField0_ and 0x00000001 != 0
}

/**
 * <pre>
 * Version of the feed specification.
 * The current version is 2.0.
</pre> *
 *
 * `required string gtfs_realtime_version = 1;`
 */
             fun setGtfsRealtimeVersion(
value:java.lang.String?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000001
gtfsRealtimeVersion_ = value
onChanged()
return this
}

/**
 * <pre>
 * Version of the feed specification.
 * The current version is 2.0.
</pre> *
 *
 * `required string gtfs_realtime_version = 1;`
 */
             fun clearGtfsRealtimeVersion():Builder {
bitField0_ = bitField0_ and 0x00000001.inv()
gtfsRealtimeVersion_ = defaultInstance.gtfsRealtimeVersion
onChanged()
return this
}

/**
 * <pre>
 * Version of the feed specification.
 * The current version is 2.0.
</pre> *
 *
 * `required string gtfs_realtime_version = 1;`
 */
             fun setGtfsRealtimeVersionBytes(
value:com.google.protobuf.ByteString?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000001
gtfsRealtimeVersion_ = value
onChanged()
return this
}

/**
 * `optional .com.example.delhitransit.FeedHeader.Incrementality incrementality = 2 [default = FULL_DATASET];`
 */
            override fun hasIncrementality():Boolean {
return bitField0_ and 0x00000002 != 0
}

/**
 * `optional .com.example.delhitransit.FeedHeader.Incrementality incrementality = 2 [default = FULL_DATASET];`
 */
             fun setIncrementality(value:com.example.delhitransit.GtfsRealtime.FeedHeader.Incrementality?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000002
incrementality_ = value.number
onChanged()
return this
}

/**
 * `optional .com.example.delhitransit.FeedHeader.Incrementality incrementality = 2 [default = FULL_DATASET];`
 */
             fun clearIncrementality():Builder {
bitField0_ = bitField0_ and 0x00000002.inv()
incrementality_ = 0
onChanged()
return this
}

/**
 * <pre>
 * This timestamp identifies the moment when the content of this feed has been
 * created (in server time). In POSIX time (i.e., number of seconds since
 * January 1st 1970 00:00:00 UTC).
</pre> *
 *
 * `optional uint64 timestamp = 3;`
 */
            override fun hasTimestamp():Boolean {
return bitField0_ and 0x00000004 != 0
}

/**
 * <pre>
 * This timestamp identifies the moment when the content of this feed has been
 * created (in server time). In POSIX time (i.e., number of seconds since
 * January 1st 1970 00:00:00 UTC).
</pre> *
 *
 * `optional uint64 timestamp = 3;`
 */
             fun setTimestamp(value:Long):Builder {
bitField0_ = bitField0_ or 0x00000004
timestamp = value
onChanged()
return this
}

/**
 * <pre>
 * This timestamp identifies the moment when the content of this feed has been
 * created (in server time). In POSIX time (i.e., number of seconds since
 * January 1st 1970 00:00:00 UTC).
</pre> *
 *
 * `optional uint64 timestamp = 3;`
 */
             fun clearTimestamp():Builder {
bitField0_ = bitField0_ and 0x00000004.inv()
timestamp = 0L
onChanged()
return this
}

override fun setUnknownFields(
unknownFields:com.google.protobuf.UnknownFieldSet):Builder {
return super.setUnknownFields(unknownFields)
}

override fun mergeUnknownFields(
unknownFields:com.google.protobuf.UnknownFieldSet):Builder {
return super.mergeUnknownFields(unknownFields)
}

companion object {
 val descriptor:com.google.protobuf.Descriptors.Descriptor
get() =com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_FeedHeader_descriptor
}


 // @@protoc_insertion_point(builder_scope:com.example.delhitransit.FeedHeader)
        }

override fun getParserForType():com.google.protobuf.Parser<FeedHeader> {
return PARSER
}

override fun getDefaultInstanceForType():com.example.delhitransit.GtfsRealtime.FeedHeader {
return defaultInstance
}

companion object {
private val serialVersionUID = 0L

 val descriptor:com.google.protobuf.Descriptors.Descriptor
get() =com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_FeedHeader_descriptor
 val GTFS_REALTIME_VERSION_FIELD_NUMBER = 1

 val INCREMENTALITY_FIELD_NUMBER = 2

 val TIMESTAMP_FIELD_NUMBER = 3

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:java.nio.ByteBuffer):com.example.delhitransit.GtfsRealtime.FeedHeader {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:java.nio.ByteBuffer,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.FeedHeader {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:com.google.protobuf.ByteString):com.example.delhitransit.GtfsRealtime.FeedHeader {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:com.google.protobuf.ByteString,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.FeedHeader {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(data:ByteArray):com.example.delhitransit.GtfsRealtime.FeedHeader {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:ByteArray,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.FeedHeader {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseFrom(input:java.io.InputStream):com.example.delhitransit.GtfsRealtime.FeedHeader {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:java.io.InputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.FeedHeader {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseDelimitedFrom(input:java.io.InputStream):com.example.delhitransit.GtfsRealtime.FeedHeader {
return com.google.protobuf.GeneratedMessageV3
.parseDelimitedWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseDelimitedFrom(
input:java.io.InputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.FeedHeader {
return com.google.protobuf.GeneratedMessageV3
.parseDelimitedWithIOException(PARSER, input, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:com.google.protobuf.CodedInputStream):com.example.delhitransit.GtfsRealtime.FeedHeader {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.FeedHeader {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input, extensionRegistry)
}

 fun newBuilder():Builder {
return defaultInstance.toBuilder()
}

 fun newBuilder(prototype:com.example.delhitransit.GtfsRealtime.FeedHeader):Builder {
return defaultInstance.toBuilder().mergeFrom(prototype)
}

 // @@protoc_insertion_point(class_scope:com.example.delhitransit.FeedHeader)
         val defaultInstance:com.example.delhitransit.GtfsRealtime.FeedHeader

init{
defaultInstance = com.example.delhitransit.GtfsRealtime.FeedHeader()
}

@Deprecated("")
 val PARSER:com.google.protobuf.Parser<FeedHeader> = object:com.google.protobuf.AbstractParser<FeedHeader>() {
@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
override fun parsePartialFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):FeedHeader {
return FeedHeader(input, extensionRegistry)
}
}

 fun parser():com.google.protobuf.Parser<FeedHeader> {
return PARSER
}
}

}

 interface FeedEntityOrBuilder:
 // @@protoc_insertion_point(interface_extends:com.example.delhitransit.FeedEntity)
            com.google.protobuf.GeneratedMessageV3.ExtendableMessageOrBuilder<FeedEntity> {

/**
 * <pre>
 * The ids are used only to provide incrementality support. The id should be
 * unique within a FeedMessage. Consequent FeedMessages may contain
 * FeedEntities with the same id. In case of a DIFFERENTIAL update the new
 * FeedEntity with some id will replace the old FeedEntity with the same id
 * (or delete it - see is_deleted below).
 * The actual GTFS entities (e.g. stations, routes, trips) referenced by the
 * feed must be specified by explicit selectors (see EntitySelector below for
 * more info).
</pre> *
 *
 * `required string id = 1;`
 */
         val id:java.lang.String

/**
 * <pre>
 * The ids are used only to provide incrementality support. The id should be
 * unique within a FeedMessage. Consequent FeedMessages may contain
 * FeedEntities with the same id. In case of a DIFFERENTIAL update the new
 * FeedEntity with some id will replace the old FeedEntity with the same id
 * (or delete it - see is_deleted below).
 * The actual GTFS entities (e.g. stations, routes, trips) referenced by the
 * feed must be specified by explicit selectors (see EntitySelector below for
 * more info).
</pre> *
 *
 * `required string id = 1;`
 */
         val idBytes:com.google.protobuf.ByteString

/**
 * <pre>
 * Whether this entity is to be deleted. Relevant only for incremental
 * fetches.
</pre> *
 *
 * `optional bool is_deleted = 2 [default = false];`
 */
         val isDeleted:Boolean

/**
 * <pre>
 * Data about the entity itself. Exactly one of the following fields must be
 * present (unless the entity is being deleted).
</pre> *
 *
 * `optional .com.example.delhitransit.TripUpdate trip_update = 3;`
 */
         val tripUpdate:com.example.delhitransit.GtfsRealtime.TripUpdate

/**
 * <pre>
 * Data about the entity itself. Exactly one of the following fields must be
 * present (unless the entity is being deleted).
</pre> *
 *
 * `optional .com.example.delhitransit.TripUpdate trip_update = 3;`
 */
         val tripUpdateOrBuilder:com.example.delhitransit.GtfsRealtime.TripUpdateOrBuilder

/**
 * `optional .com.example.delhitransit.VehiclePosition vehicle = 4;`
 */
         val vehicle:com.example.delhitransit.GtfsRealtime.VehiclePosition

/**
 * `optional .com.example.delhitransit.VehiclePosition vehicle = 4;`
 */
         val vehicleOrBuilder:com.example.delhitransit.GtfsRealtime.VehiclePositionOrBuilder

/**
 * `optional .com.example.delhitransit.Alert alert = 5;`
 */
         val alert:com.example.delhitransit.GtfsRealtime.Alert

/**
 * `optional .com.example.delhitransit.Alert alert = 5;`
 */
         val alertOrBuilder:com.example.delhitransit.GtfsRealtime.AlertOrBuilder

/**
 * <pre>
 * The ids are used only to provide incrementality support. The id should be
 * unique within a FeedMessage. Consequent FeedMessages may contain
 * FeedEntities with the same id. In case of a DIFFERENTIAL update the new
 * FeedEntity with some id will replace the old FeedEntity with the same id
 * (or delete it - see is_deleted below).
 * The actual GTFS entities (e.g. stations, routes, trips) referenced by the
 * feed must be specified by explicit selectors (see EntitySelector below for
 * more info).
</pre> *
 *
 * `required string id = 1;`
 */
         fun hasId():Boolean

/**
 * <pre>
 * Whether this entity is to be deleted. Relevant only for incremental
 * fetches.
</pre> *
 *
 * `optional bool is_deleted = 2 [default = false];`
 */
         fun hasIsDeleted():Boolean

/**
 * <pre>
 * Data about the entity itself. Exactly one of the following fields must be
 * present (unless the entity is being deleted).
</pre> *
 *
 * `optional .com.example.delhitransit.TripUpdate trip_update = 3;`
 */
         fun hasTripUpdate():Boolean

/**
 * `optional .com.example.delhitransit.VehiclePosition vehicle = 4;`
 */
         fun hasVehicle():Boolean

/**
 * `optional .com.example.delhitransit.Alert alert = 5;`
 */
         fun hasAlert():Boolean
}

/**
 * <pre>
 * A definition (or update) of an entity in the transit feed.
</pre> *
 *
 *
 * Protobuf type `com.example.delhitransit.FeedEntity`
 */
     class FeedEntity:com.google.protobuf.GeneratedMessageV3.ExtendableMessage<FeedEntity>,
 // @@protoc_insertion_point(message_implements:com.example.delhitransit.FeedEntity)
            FeedEntityOrBuilder {

private var bitField0_:Int = 0
@Volatile private var id_:Any? = null

/**
 * <pre>
 * The ids are used only to provide incrementality support. The id should be
 * unique within a FeedMessage. Consequent FeedMessages may contain
 * FeedEntities with the same id. In case of a DIFFERENTIAL update the new
 * FeedEntity with some id will replace the old FeedEntity with the same id
 * (or delete it - see is_deleted below).
 * The actual GTFS entities (e.g. stations, routes, trips) referenced by the
 * feed must be specified by explicit selectors (see EntitySelector below for
 * more info).
</pre> *
 *
 * `required string id = 1;`
 */
        override val id:java.lang.String
get() {
val ref = id_
if (ref is java.lang.String)
{
return ref
}
else
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
id_ = s
}
return s
}
}

/**
 * <pre>
 * The ids are used only to provide incrementality support. The id should be
 * unique within a FeedMessage. Consequent FeedMessages may contain
 * FeedEntities with the same id. In case of a DIFFERENTIAL update the new
 * FeedEntity with some id will replace the old FeedEntity with the same id
 * (or delete it - see is_deleted below).
 * The actual GTFS entities (e.g. stations, routes, trips) referenced by the
 * feed must be specified by explicit selectors (see EntitySelector below for
 * more info).
</pre> *
 *
 * `required string id = 1;`
 */
        override val idBytes:com.google.protobuf.ByteString
get() {
val ref = id_
if (ref is java.lang.String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
id_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}
/**
 * <pre>
 * Whether this entity is to be deleted. Relevant only for incremental
 * fetches.
</pre> *
 *
 * `optional bool is_deleted = 2 [default = false];`
 */
        override var isDeleted:Boolean = false
private set
private var tripUpdate_:com.example.delhitransit.GtfsRealtime.TripUpdate? = null

/**
 * <pre>
 * Data about the entity itself. Exactly one of the following fields must be
 * present (unless the entity is being deleted).
</pre> *
 *
 * `optional .com.example.delhitransit.TripUpdate trip_update = 3;`
 */
        override val tripUpdate:com.example.delhitransit.GtfsRealtime.TripUpdate
get() =if (tripUpdate_ == null) com.example.delhitransit.GtfsRealtime.TripUpdate.defaultInstance else tripUpdate_

/**
 * <pre>
 * Data about the entity itself. Exactly one of the following fields must be
 * present (unless the entity is being deleted).
</pre> *
 *
 * `optional .com.example.delhitransit.TripUpdate trip_update = 3;`
 */
        override val tripUpdateOrBuilder:com.example.delhitransit.GtfsRealtime.TripUpdateOrBuilder
get() =if (tripUpdate_ == null) com.example.delhitransit.GtfsRealtime.TripUpdate.defaultInstance else tripUpdate_
private var vehicle_:com.example.delhitransit.GtfsRealtime.VehiclePosition? = null

/**
 * `optional .com.example.delhitransit.VehiclePosition vehicle = 4;`
 */
        override val vehicle:com.example.delhitransit.GtfsRealtime.VehiclePosition
get() =if (vehicle_ == null) com.example.delhitransit.GtfsRealtime.VehiclePosition.defaultInstance else vehicle_

/**
 * `optional .com.example.delhitransit.VehiclePosition vehicle = 4;`
 */
        override val vehicleOrBuilder:com.example.delhitransit.GtfsRealtime.VehiclePositionOrBuilder
get() =if (vehicle_ == null) com.example.delhitransit.GtfsRealtime.VehiclePosition.defaultInstance else vehicle_
private var alert_:com.example.delhitransit.GtfsRealtime.Alert? = null

/**
 * `optional .com.example.delhitransit.Alert alert = 5;`
 */
        override val alert:com.example.delhitransit.GtfsRealtime.Alert
get() =if (alert_ == null) com.example.delhitransit.GtfsRealtime.Alert.defaultInstance else alert_

/**
 * `optional .com.example.delhitransit.Alert alert = 5;`
 */
        override val alertOrBuilder:com.example.delhitransit.GtfsRealtime.AlertOrBuilder
get() =if (alert_ == null) com.example.delhitransit.GtfsRealtime.Alert.defaultInstance else alert_

private var memoizedIsInitialized:Byte = -1

 // Use FeedEntity.newBuilder() to construct.
        private constructor(builder:com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.example.delhitransit.GtfsRealtime.FeedEntity, *>) : super(builder) {}

private constructor() {
id_ = ""
}

 //        @java.lang.Override
 //        @SuppressWarnings({"unused"})
 //        protected java.lang.Object newInstance(
 //                UnusedPrivateParameter unused) {
 //            return new FeedEntity();
 //        }

        override fun getUnknownFields():com.google.protobuf.UnknownFieldSet {
return this.unknownFields
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
private constructor(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite?) : this() {
if (extensionRegistry == null)
{
throw java.lang.NullPointerException()
}
val mutable_bitField0_ = 0
val unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder()
try
{
var done = false
while (!done)
{
val tag = input.readTag()
when (tag) {
0 -> done = true
10 -> {
val bs = input.readBytes()
bitField0_ = bitField0_ or 0x00000001
id_ = bs
}
16 -> {
bitField0_ = bitField0_ or 0x00000002
isDeleted = input.readBool()
}
26 -> {
var subBuilder:com.example.delhitransit.GtfsRealtime.TripUpdate.Builder? = null
if (bitField0_ and 0x00000004 != 0)
{
subBuilder = tripUpdate_!!.toBuilder()
}
tripUpdate_ = input.readMessage(com.example.delhitransit.GtfsRealtime.TripUpdate.PARSER, extensionRegistry)
if (subBuilder != null)
{
subBuilder.mergeFrom(tripUpdate_)
tripUpdate_ = subBuilder.buildPartial()
}
bitField0_ = bitField0_ or 0x00000004
}
34 -> {
var subBuilder:com.example.delhitransit.GtfsRealtime.VehiclePosition.Builder? = null
if (bitField0_ and 0x00000008 != 0)
{
subBuilder = vehicle_!!.toBuilder()
}
vehicle_ = input.readMessage(com.example.delhitransit.GtfsRealtime.VehiclePosition.PARSER, extensionRegistry)
if (subBuilder != null)
{
subBuilder.mergeFrom(vehicle_)
vehicle_ = subBuilder.buildPartial()
}
bitField0_ = bitField0_ or 0x00000008
}
42 -> {
var subBuilder:com.example.delhitransit.GtfsRealtime.Alert.Builder? = null
if (bitField0_ and 0x00000010 != 0)
{
subBuilder = alert_!!.toBuilder()
}
alert_ = input.readMessage(com.example.delhitransit.GtfsRealtime.Alert.PARSER, extensionRegistry)
if (subBuilder != null)
{
subBuilder.mergeFrom(alert_)
alert_ = subBuilder.buildPartial()
}
bitField0_ = bitField0_ or 0x00000010
}
else -> {
if (!parseUnknownField(
input, unknownFields, extensionRegistry, tag))
{
done = true
}
}
}
}
}
catch (e:com.google.protobuf.InvalidProtocolBufferException) {
throw e.setUnfinishedMessage(this)
}
catch (e:java.io.IOException) {
throw com.google.protobuf.InvalidProtocolBufferException(
e).setUnfinishedMessage(this)
}
finally
{
this.unknownFields = unknownFields.build()
makeExtensionsImmutable()
}
}

override fun internalGetFieldAccessorTable():com.google.protobuf.GeneratedMessageV3.FieldAccessorTable {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_FeedEntity_fieldAccessorTable
.ensureFieldAccessorsInitialized(
com.example.delhitransit.GtfsRealtime.FeedEntity::class.java, com.example.delhitransit.GtfsRealtime.FeedEntity.Builder::class.java)
}

/**
 * <pre>
 * The ids are used only to provide incrementality support. The id should be
 * unique within a FeedMessage. Consequent FeedMessages may contain
 * FeedEntities with the same id. In case of a DIFFERENTIAL update the new
 * FeedEntity with some id will replace the old FeedEntity with the same id
 * (or delete it - see is_deleted below).
 * The actual GTFS entities (e.g. stations, routes, trips) referenced by the
 * feed must be specified by explicit selectors (see EntitySelector below for
 * more info).
</pre> *
 *
 * `required string id = 1;`
 */
        override fun hasId():Boolean {
return bitField0_ and 0x00000001 != 0
}

/**
 * <pre>
 * Whether this entity is to be deleted. Relevant only for incremental
 * fetches.
</pre> *
 *
 * `optional bool is_deleted = 2 [default = false];`
 */
        override fun hasIsDeleted():Boolean {
return bitField0_ and 0x00000002 != 0
}

/**
 * <pre>
 * Data about the entity itself. Exactly one of the following fields must be
 * present (unless the entity is being deleted).
</pre> *
 *
 * `optional .com.example.delhitransit.TripUpdate trip_update = 3;`
 */
        override fun hasTripUpdate():Boolean {
return bitField0_ and 0x00000004 != 0
}

/**
 * `optional .com.example.delhitransit.VehiclePosition vehicle = 4;`
 */
        override fun hasVehicle():Boolean {
return bitField0_ and 0x00000008 != 0
}

/**
 * `optional .com.example.delhitransit.Alert alert = 5;`
 */
        override fun hasAlert():Boolean {
return bitField0_ and 0x00000010 != 0
}

override fun isInitialized():Boolean {
val isInitialized = memoizedIsInitialized
if (isInitialized.toInt() == 1) return true
if (isInitialized.toInt() == 0) return false

if (!hasId())
{
memoizedIsInitialized = 0
return false
}
if (hasTripUpdate())
{
if (!tripUpdate.isInitialized)
{
memoizedIsInitialized = 0
return false
}
}
if (hasVehicle())
{
if (!vehicle.isInitialized)
{
memoizedIsInitialized = 0
return false
}
}
if (hasAlert())
{
if (!alert.isInitialized)
{
memoizedIsInitialized = 0
return false
}
}
if (!extensionsAreInitialized())
{
memoizedIsInitialized = 0
return false
}
memoizedIsInitialized = 1
return true
}

@Throws(java.io.IOException::class)
override fun writeTo(output:com.google.protobuf.CodedOutputStream) {
val extensionWriter = newExtensionWriter()
if (bitField0_ and 0x00000001 != 0)
{
com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_)
}
if (bitField0_ and 0x00000002 != 0)
{
output.writeBool(2, isDeleted)
}
if (bitField0_ and 0x00000004 != 0)
{
output.writeMessage(3, tripUpdate)
}
if (bitField0_ and 0x00000008 != 0)
{
output.writeMessage(4, vehicle)
}
if (bitField0_ and 0x00000010 != 0)
{
output.writeMessage(5, alert)
}
extensionWriter.writeUntil(2000, output)
unknownFields.writeTo(output)
}

override fun getSerializedSize():Int {
var size = memoizedSize
if (size != -1) return size

size = 0
if (bitField0_ and 0x00000001 != 0)
{
size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_!!)
}
if (bitField0_ and 0x00000002 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeBoolSize(2, isDeleted)
}
if (bitField0_ and 0x00000004 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeMessageSize(3, tripUpdate)
}
if (bitField0_ and 0x00000008 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeMessageSize(4, vehicle)
}
if (bitField0_ and 0x00000010 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeMessageSize(5, alert)
}
size += extensionsSerializedSize()
size += unknownFields.serializedSize
memoizedSize = size
return size
}

override fun equals(obj:Any?):Boolean {
if (obj === this)
{
return true
}
if (obj !is com.example.delhitransit.GtfsRealtime.FeedEntity)
{
return super.equals(obj)
}
val other = obj as com.example.delhitransit.GtfsRealtime.FeedEntity?

if (hasId() != other!!.hasId()) return false
if (hasId())
{
if (id != other.id)
return false
}
if (hasIsDeleted() != other.hasIsDeleted()) return false
if (hasIsDeleted())
{
if (isDeleted != other.isDeleted)
return false
}
if (hasTripUpdate() != other.hasTripUpdate()) return false
if (hasTripUpdate())
{
if (tripUpdate != other.tripUpdate)
return false
}
if (hasVehicle() != other.hasVehicle()) return false
if (hasVehicle())
{
if (vehicle != other.vehicle)
return false
}
if (hasAlert() != other.hasAlert()) return false
if (hasAlert())
{
if (alert != other.alert)
return false
}
if (unknownFields != other.unknownFields) return false
return if (extensionFields != other.extensionFields) false else true
}

override fun hashCode():Int {
if (memoizedHashCode != 0)
{
return memoizedHashCode
}
var hash = 41
hash = 19 * hash + descriptor.hashCode()
if (hasId())
{
hash = 37 * hash + ID_FIELD_NUMBER
hash = 53 * hash + id.hashCode()
}
if (hasIsDeleted())
{
hash = 37 * hash + IS_DELETED_FIELD_NUMBER
hash = 53 * hash + com.google.protobuf.Internal.hashBoolean(
isDeleted)
}
if (hasTripUpdate())
{
hash = 37 * hash + TRIP_UPDATE_FIELD_NUMBER
hash = 53 * hash + tripUpdate.hashCode()
}
if (hasVehicle())
{
hash = 37 * hash + VEHICLE_FIELD_NUMBER
hash = 53 * hash + vehicle.hashCode()
}
if (hasAlert())
{
hash = 37 * hash + ALERT_FIELD_NUMBER
hash = 53 * hash + alert.hashCode()
}
hash = AbstractMessage.hashFields(hash, extensionFields)
hash = 29 * hash + unknownFields.hashCode()
memoizedHashCode = hash
return hash
}

override fun newBuilderForType():Builder {
return newBuilder()
}

override fun toBuilder():Builder {
return if (this === defaultInstance)
Builder()
else
Builder().mergeFrom(this)
}

override fun newBuilderForType(
parent:com.google.protobuf.GeneratedMessageV3.BuilderParent):Builder {
return Builder(parent)
}

/**
 * <pre>
 * A definition (or update) of an entity in the transit feed.
</pre> *
 *
 *
 * Protobuf type `com.example.delhitransit.FeedEntity`
 */
         class Builder:com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.example.delhitransit.GtfsRealtime.FeedEntity, Builder>,
 // @@protoc_insertion_point(builder_implements:com.example.delhitransit.FeedEntity)
                com.example.delhitransit.GtfsRealtime.FeedEntityOrBuilder {

private var bitField0_:Int = 0

private var id_:Any? = ""

/**
 * <pre>
 * The ids are used only to provide incrementality support. The id should be
 * unique within a FeedMessage. Consequent FeedMessages may contain
 * FeedEntities with the same id. In case of a DIFFERENTIAL update the new
 * FeedEntity with some id will replace the old FeedEntity with the same id
 * (or delete it - see is_deleted below).
 * The actual GTFS entities (e.g. stations, routes, trips) referenced by the
 * feed must be specified by explicit selectors (see EntitySelector below for
 * more info).
</pre> *
 *
 * `required string id = 1;`
 */
            override val id:java.lang.String
get() {
val ref = id_
if (ref !is java.lang.String)
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
id_ = s
}
return s
}
else
{
return ref
}
}

/**
 * <pre>
 * The ids are used only to provide incrementality support. The id should be
 * unique within a FeedMessage. Consequent FeedMessages may contain
 * FeedEntities with the same id. In case of a DIFFERENTIAL update the new
 * FeedEntity with some id will replace the old FeedEntity with the same id
 * (or delete it - see is_deleted below).
 * The actual GTFS entities (e.g. stations, routes, trips) referenced by the
 * feed must be specified by explicit selectors (see EntitySelector below for
 * more info).
</pre> *
 *
 * `required string id = 1;`
 */
            override val idBytes:com.google.protobuf.ByteString
get() {
val ref = id_
if (ref is String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
id_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}

/**
 * <pre>
 * Whether this entity is to be deleted. Relevant only for incremental
 * fetches.
</pre> *
 *
 * `optional bool is_deleted = 2 [default = false];`
 */
            override var isDeleted:Boolean = false
private set

private var tripUpdate_:com.example.delhitransit.GtfsRealtime.TripUpdate? = null
private var tripUpdateBuilder_:com.google.protobuf.SingleFieldBuilderV3<com.example.delhitransit.GtfsRealtime.TripUpdate, com.example.delhitransit.GtfsRealtime.TripUpdate.Builder, com.example.delhitransit.GtfsRealtime.TripUpdateOrBuilder>? = null

/**
 * <pre>
 * Data about the entity itself. Exactly one of the following fields must be
 * present (unless the entity is being deleted).
</pre> *
 *
 * `optional .com.example.delhitransit.TripUpdate trip_update = 3;`
 */
            override val tripUpdate:com.example.delhitransit.GtfsRealtime.TripUpdate
get() =if (tripUpdateBuilder_ == null) {
            if (tripUpdate_ == null) com.example.delhitransit.GtfsRealtime.TripUpdate.defaultInstance else tripUpdate_
        } else {
            tripUpdateBuilder_!!.message
        }

/**
 * <pre>
 * Data about the entity itself. Exactly one of the following fields must be
 * present (unless the entity is being deleted).
</pre> *
 *
 * `optional .com.example.delhitransit.TripUpdate trip_update = 3;`
 */
             val tripUpdateBuilder:com.example.delhitransit.GtfsRealtime.TripUpdate.Builder
get() {
bitField0_ = bitField0_ or 0x00000004
onChanged()
return tripUpdateFieldBuilder.builder
}

/**
 * <pre>
 * Data about the entity itself. Exactly one of the following fields must be
 * present (unless the entity is being deleted).
</pre> *
 *
 * `optional .com.example.delhitransit.TripUpdate trip_update = 3;`
 */
            override val tripUpdateOrBuilder:com.example.delhitransit.GtfsRealtime.TripUpdateOrBuilder
get() =if (tripUpdateBuilder_ != null) {
            tripUpdateBuilder_!!.messageOrBuilder
        } else {
            if (tripUpdate_ == null)
                com.example.delhitransit.GtfsRealtime.TripUpdate.defaultInstance
            else
                tripUpdate_
        }

/**
 * <pre>
 * Data about the entity itself. Exactly one of the following fields must be
 * present (unless the entity is being deleted).
</pre> *
 *
 * `optional .com.example.delhitransit.TripUpdate trip_update = 3;`
 */
            private val tripUpdateFieldBuilder:com.google.protobuf.SingleFieldBuilderV3<com.example.delhitransit.GtfsRealtime.TripUpdate, com.example.delhitransit.GtfsRealtime.TripUpdate.Builder, com.example.delhitransit.GtfsRealtime.TripUpdateOrBuilder>
get() {
if (tripUpdateBuilder_ == null)
{
tripUpdateBuilder_ = com.google.protobuf.SingleFieldBuilderV3(
tripUpdate,
parentForChildren,
isClean)
tripUpdate_ = null
}
return tripUpdateBuilder_
}

private var vehicle_:com.example.delhitransit.GtfsRealtime.VehiclePosition? = null
private var vehicleBuilder_:com.google.protobuf.SingleFieldBuilderV3<com.example.delhitransit.GtfsRealtime.VehiclePosition, com.example.delhitransit.GtfsRealtime.VehiclePosition.Builder, com.example.delhitransit.GtfsRealtime.VehiclePositionOrBuilder>? = null

/**
 * `optional .com.example.delhitransit.VehiclePosition vehicle = 4;`
 */
            override val vehicle:com.example.delhitransit.GtfsRealtime.VehiclePosition
get() =if (vehicleBuilder_ == null) {
            if (vehicle_ == null) com.example.delhitransit.GtfsRealtime.VehiclePosition.defaultInstance else vehicle_
        } else {
            vehicleBuilder_!!.message
        }

/**
 * `optional .com.example.delhitransit.VehiclePosition vehicle = 4;`
 */
             val vehicleBuilder:com.example.delhitransit.GtfsRealtime.VehiclePosition.Builder
get() {
bitField0_ = bitField0_ or 0x00000008
onChanged()
return vehicleFieldBuilder.builder
}

/**
 * `optional .com.example.delhitransit.VehiclePosition vehicle = 4;`
 */
            override val vehicleOrBuilder:com.example.delhitransit.GtfsRealtime.VehiclePositionOrBuilder
get() =if (vehicleBuilder_ != null) {
            vehicleBuilder_!!.messageOrBuilder
        } else {
            if (vehicle_ == null)
                com.example.delhitransit.GtfsRealtime.VehiclePosition.defaultInstance
            else
                vehicle_
        }

/**
 * `optional .com.example.delhitransit.VehiclePosition vehicle = 4;`
 */
            private val vehicleFieldBuilder:com.google.protobuf.SingleFieldBuilderV3<com.example.delhitransit.GtfsRealtime.VehiclePosition, com.example.delhitransit.GtfsRealtime.VehiclePosition.Builder, com.example.delhitransit.GtfsRealtime.VehiclePositionOrBuilder>
get() {
if (vehicleBuilder_ == null)
{
vehicleBuilder_ = com.google.protobuf.SingleFieldBuilderV3(
vehicle,
parentForChildren,
isClean)
vehicle_ = null
}
return vehicleBuilder_
}

private var alert_:com.example.delhitransit.GtfsRealtime.Alert? = null
private var alertBuilder_:com.google.protobuf.SingleFieldBuilderV3<com.example.delhitransit.GtfsRealtime.Alert, com.example.delhitransit.GtfsRealtime.Alert.Builder, com.example.delhitransit.GtfsRealtime.AlertOrBuilder>? = null

/**
 * `optional .com.example.delhitransit.Alert alert = 5;`
 */
            override val alert:com.example.delhitransit.GtfsRealtime.Alert
get() =if (alertBuilder_ == null) {
            if (alert_ == null) com.example.delhitransit.GtfsRealtime.Alert.defaultInstance else alert_
        } else {
            alertBuilder_!!.message
        }

/**
 * `optional .com.example.delhitransit.Alert alert = 5;`
 */
             val alertBuilder:com.example.delhitransit.GtfsRealtime.Alert.Builder
get() {
bitField0_ = bitField0_ or 0x00000010
onChanged()
return alertFieldBuilder.builder
}

/**
 * `optional .com.example.delhitransit.Alert alert = 5;`
 */
            override val alertOrBuilder:com.example.delhitransit.GtfsRealtime.AlertOrBuilder
get() =if (alertBuilder_ != null) {
            alertBuilder_!!.messageOrBuilder
        } else {
            if (alert_ == null)
                com.example.delhitransit.GtfsRealtime.Alert.defaultInstance
            else
                alert_
        }

/**
 * `optional .com.example.delhitransit.Alert alert = 5;`
 */
            private val alertFieldBuilder:com.google.protobuf.SingleFieldBuilderV3<com.example.delhitransit.GtfsRealtime.Alert, com.example.delhitransit.GtfsRealtime.Alert.Builder, com.example.delhitransit.GtfsRealtime.AlertOrBuilder>
get() {
if (alertBuilder_ == null)
{
alertBuilder_ = com.google.protobuf.SingleFieldBuilderV3(
alert,
parentForChildren,
isClean)
alert_ = null
}
return alertBuilder_
}

override fun internalGetFieldAccessorTable():com.google.protobuf.GeneratedMessageV3.FieldAccessorTable {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_FeedEntity_fieldAccessorTable
.ensureFieldAccessorsInitialized(
com.example.delhitransit.GtfsRealtime.FeedEntity::class.java, com.example.delhitransit.GtfsRealtime.FeedEntity.Builder::class.java)
}

 // Construct using com.example.delhitransit.GtfsRealtime.FeedEntity.newBuilder()
            private constructor() {
maybeForceBuilderInitialization()
}

private constructor(
parent:com.google.protobuf.GeneratedMessageV3.BuilderParent) : super(parent) {
maybeForceBuilderInitialization()
}

private fun maybeForceBuilderInitialization() {
if (com.google.protobuf.GeneratedMessageV3
.alwaysUseFieldBuilders)
{
tripUpdateFieldBuilder
vehicleFieldBuilder
alertFieldBuilder
}
}

override fun clear():Builder {
super.clear()
id_ = ""
bitField0_ = bitField0_ and 0x00000001.inv()
isDeleted = false
bitField0_ = bitField0_ and 0x00000002.inv()
if (tripUpdateBuilder_ == null)
{
tripUpdate_ = null
}
else
{
tripUpdateBuilder_!!.clear()
}
bitField0_ = bitField0_ and 0x00000004.inv()
if (vehicleBuilder_ == null)
{
vehicle_ = null
}
else
{
vehicleBuilder_!!.clear()
}
bitField0_ = bitField0_ and 0x00000008.inv()
if (alertBuilder_ == null)
{
alert_ = null
}
else
{
alertBuilder_!!.clear()
}
bitField0_ = bitField0_ and 0x00000010.inv()
return this
}

override fun getDescriptorForType():com.google.protobuf.Descriptors.Descriptor {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_FeedEntity_descriptor
}

override fun getDefaultInstanceForType():com.example.delhitransit.GtfsRealtime.FeedEntity {
return com.example.delhitransit.GtfsRealtime.FeedEntity.defaultInstance
}

override fun build():com.example.delhitransit.GtfsRealtime.FeedEntity {
val result = buildPartial()
if (!result.isInitialized)
{
throw AbstractMessage.Builder.newUninitializedMessageException(result)
}
return result
}

override fun buildPartial():com.example.delhitransit.GtfsRealtime.FeedEntity {
val result = com.example.delhitransit.GtfsRealtime.FeedEntity(this)
val from_bitField0_ = bitField0_
var to_bitField0_ = 0
if (from_bitField0_ and 0x00000001 != 0)
{
to_bitField0_ = to_bitField0_ or 0x00000001
}
result.id_ = id_
if (from_bitField0_ and 0x00000002 != 0)
{
result.isDeleted = isDeleted
to_bitField0_ = to_bitField0_ or 0x00000002
}
if (from_bitField0_ and 0x00000004 != 0)
{
if (tripUpdateBuilder_ == null)
{
result.tripUpdate_ = tripUpdate_
}
else
{
result.tripUpdate_ = tripUpdateBuilder_!!.build()
}
to_bitField0_ = to_bitField0_ or 0x00000004
}
if (from_bitField0_ and 0x00000008 != 0)
{
if (vehicleBuilder_ == null)
{
result.vehicle_ = vehicle_
}
else
{
result.vehicle_ = vehicleBuilder_!!.build()
}
to_bitField0_ = to_bitField0_ or 0x00000008
}
if (from_bitField0_ and 0x00000010 != 0)
{
if (alertBuilder_ == null)
{
result.alert_ = alert_
}
else
{
result.alert_ = alertBuilder_!!.build()
}
to_bitField0_ = to_bitField0_ or 0x00000010
}
result.bitField0_ = to_bitField0_
onBuilt()
return result
}

override fun clone():Builder {
return super.clone()
}

override fun setField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
value:Any):Builder {
return super.setField(field, value)
}

override fun clearField(
field:com.google.protobuf.Descriptors.FieldDescriptor):Builder {
return super.clearField(field)
}

override fun clearOneof(
oneof:com.google.protobuf.Descriptors.OneofDescriptor):Builder {
return super.clearOneof(oneof)
}

override fun setRepeatedField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
index:Int, value:Any):Builder {
return super.setRepeatedField(field, index, value)
}

override fun addRepeatedField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
value:Any):Builder {
return super.addRepeatedField(field, value)
}

override fun <Type> setExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.FeedEntity, Type>,
value:Type):Builder {
return super.setExtension(extension, value)
}

override fun <Type> setExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.FeedEntity, List<Type>>,
index:Int, value:Type):Builder {
return super.setExtension(extension, index, value)
}

override fun <Type> addExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.FeedEntity, List<Type>>,
value:Type):Builder {
return super.addExtension(extension, value)
}

override fun <Type> clearExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.FeedEntity, *>):Builder {
return super.clearExtension<Any>(extension)
}

override fun mergeFrom(other:com.google.protobuf.Message):Builder {
if (other is com.example.delhitransit.GtfsRealtime.FeedEntity)
{
return mergeFrom(other)
}
else
{
super.mergeFrom(other)
return this
}
}

 fun mergeFrom(other:com.example.delhitransit.GtfsRealtime.FeedEntity):Builder {
if (other === com.example.delhitransit.GtfsRealtime.FeedEntity.defaultInstance)
return this
if (other.hasId())
{
bitField0_ = bitField0_ or 0x00000001
id_ = other.id_
onChanged()
}
if (other.hasIsDeleted())
{
setIsDeleted(other.isDeleted)
}
if (other.hasTripUpdate())
{
mergeTripUpdate(other.tripUpdate)
}
if (other.hasVehicle())
{
mergeVehicle(other.vehicle)
}
if (other.hasAlert())
{
mergeAlert(other.alert)
}
this.mergeExtensionFields(other)
this.mergeUnknownFields(other.unknownFields)
onChanged()
return this
}

override fun isInitialized():Boolean {
if (!hasId())
{
return false
}
if (hasTripUpdate())
{
if (!tripUpdate.isInitialized)
{
return false
}
}
if (hasVehicle())
{
if (!vehicle.isInitialized)
{
return false
}
}
if (hasAlert())
{
if (!alert.isInitialized)
{
return false
}
}
return if (!extensionsAreInitialized()) {
            false
        } else true
}

@Throws(java.io.IOException::class)
override fun mergeFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):Builder {
var parsedMessage:com.example.delhitransit.GtfsRealtime.FeedEntity? = null
try
{
parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry)
}
catch (e:com.google.protobuf.InvalidProtocolBufferException) {
parsedMessage = e.unfinishedMessage as com.example.delhitransit.GtfsRealtime.FeedEntity
throw e.unwrapIOException()
}
finally
{
if (parsedMessage != null)
{
mergeFrom(parsedMessage)
}
}
return this
}

/**
 * <pre>
 * The ids are used only to provide incrementality support. The id should be
 * unique within a FeedMessage. Consequent FeedMessages may contain
 * FeedEntities with the same id. In case of a DIFFERENTIAL update the new
 * FeedEntity with some id will replace the old FeedEntity with the same id
 * (or delete it - see is_deleted below).
 * The actual GTFS entities (e.g. stations, routes, trips) referenced by the
 * feed must be specified by explicit selectors (see EntitySelector below for
 * more info).
</pre> *
 *
 * `required string id = 1;`
 */
            override fun hasId():Boolean {
return bitField0_ and 0x00000001 != 0
}

/**
 * <pre>
 * The ids are used only to provide incrementality support. The id should be
 * unique within a FeedMessage. Consequent FeedMessages may contain
 * FeedEntities with the same id. In case of a DIFFERENTIAL update the new
 * FeedEntity with some id will replace the old FeedEntity with the same id
 * (or delete it - see is_deleted below).
 * The actual GTFS entities (e.g. stations, routes, trips) referenced by the
 * feed must be specified by explicit selectors (see EntitySelector below for
 * more info).
</pre> *
 *
 * `required string id = 1;`
 */
             fun setId(
value:java.lang.String?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000001
id_ = value
onChanged()
return this
}

/**
 * <pre>
 * The ids are used only to provide incrementality support. The id should be
 * unique within a FeedMessage. Consequent FeedMessages may contain
 * FeedEntities with the same id. In case of a DIFFERENTIAL update the new
 * FeedEntity with some id will replace the old FeedEntity with the same id
 * (or delete it - see is_deleted below).
 * The actual GTFS entities (e.g. stations, routes, trips) referenced by the
 * feed must be specified by explicit selectors (see EntitySelector below for
 * more info).
</pre> *
 *
 * `required string id = 1;`
 */
             fun clearId():Builder {
bitField0_ = bitField0_ and 0x00000001.inv()
id_ = defaultInstance.id
onChanged()
return this
}

/**
 * <pre>
 * The ids are used only to provide incrementality support. The id should be
 * unique within a FeedMessage. Consequent FeedMessages may contain
 * FeedEntities with the same id. In case of a DIFFERENTIAL update the new
 * FeedEntity with some id will replace the old FeedEntity with the same id
 * (or delete it - see is_deleted below).
 * The actual GTFS entities (e.g. stations, routes, trips) referenced by the
 * feed must be specified by explicit selectors (see EntitySelector below for
 * more info).
</pre> *
 *
 * `required string id = 1;`
 */
             fun setIdBytes(
value:com.google.protobuf.ByteString?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000001
id_ = value
onChanged()
return this
}

/**
 * <pre>
 * Whether this entity is to be deleted. Relevant only for incremental
 * fetches.
</pre> *
 *
 * `optional bool is_deleted = 2 [default = false];`
 */
            override fun hasIsDeleted():Boolean {
return bitField0_ and 0x00000002 != 0
}

/**
 * <pre>
 * Whether this entity is to be deleted. Relevant only for incremental
 * fetches.
</pre> *
 *
 * `optional bool is_deleted = 2 [default = false];`
 */
             fun setIsDeleted(value:Boolean):Builder {
bitField0_ = bitField0_ or 0x00000002
isDeleted = value
onChanged()
return this
}

/**
 * <pre>
 * Whether this entity is to be deleted. Relevant only for incremental
 * fetches.
</pre> *
 *
 * `optional bool is_deleted = 2 [default = false];`
 */
             fun clearIsDeleted():Builder {
bitField0_ = bitField0_ and 0x00000002.inv()
isDeleted = false
onChanged()
return this
}

/**
 * <pre>
 * Data about the entity itself. Exactly one of the following fields must be
 * present (unless the entity is being deleted).
</pre> *
 *
 * `optional .com.example.delhitransit.TripUpdate trip_update = 3;`
 */
            override fun hasTripUpdate():Boolean {
return bitField0_ and 0x00000004 != 0
}

/**
 * <pre>
 * Data about the entity itself. Exactly one of the following fields must be
 * present (unless the entity is being deleted).
</pre> *
 *
 * `optional .com.example.delhitransit.TripUpdate trip_update = 3;`
 */
             fun setTripUpdate(value:com.example.delhitransit.GtfsRealtime.TripUpdate?):Builder {
if (tripUpdateBuilder_ == null)
{
if (value == null)
{
throw NullPointerException()
}
tripUpdate_ = value
onChanged()
}
else
{
tripUpdateBuilder_!!.setMessage(value!!)
}
bitField0_ = bitField0_ or 0x00000004
return this
}

/**
 * <pre>
 * Data about the entity itself. Exactly one of the following fields must be
 * present (unless the entity is being deleted).
</pre> *
 *
 * `optional .com.example.delhitransit.TripUpdate trip_update = 3;`
 */
             fun setTripUpdate(
builderForValue:com.example.delhitransit.GtfsRealtime.TripUpdate.Builder):Builder {
if (tripUpdateBuilder_ == null)
{
tripUpdate_ = builderForValue.build()
onChanged()
}
else
{
tripUpdateBuilder_!!.setMessage(builderForValue.build())
}
bitField0_ = bitField0_ or 0x00000004
return this
}

/**
 * <pre>
 * Data about the entity itself. Exactly one of the following fields must be
 * present (unless the entity is being deleted).
</pre> *
 *
 * `optional .com.example.delhitransit.TripUpdate trip_update = 3;`
 */
             fun mergeTripUpdate(value:com.example.delhitransit.GtfsRealtime.TripUpdate):Builder {
if (tripUpdateBuilder_ == null)
{
if (bitField0_ and 0x00000004 != 0 &&
tripUpdate_ != null &&
tripUpdate_ !== com.example.delhitransit.GtfsRealtime.TripUpdate.defaultInstance)
{
tripUpdate_ = com.example.delhitransit.GtfsRealtime.TripUpdate.newBuilder(tripUpdate_).mergeFrom(value).buildPartial()
}
else
{
tripUpdate_ = value
}
onChanged()
}
else
{
tripUpdateBuilder_!!.mergeFrom(value)
}
bitField0_ = bitField0_ or 0x00000004
return this
}

/**
 * <pre>
 * Data about the entity itself. Exactly one of the following fields must be
 * present (unless the entity is being deleted).
</pre> *
 *
 * `optional .com.example.delhitransit.TripUpdate trip_update = 3;`
 */
             fun clearTripUpdate():Builder {
if (tripUpdateBuilder_ == null)
{
tripUpdate_ = null
onChanged()
}
else
{
tripUpdateBuilder_!!.clear()
}
bitField0_ = bitField0_ and 0x00000004.inv()
return this
}

/**
 * `optional .com.example.delhitransit.VehiclePosition vehicle = 4;`
 */
            override fun hasVehicle():Boolean {
return bitField0_ and 0x00000008 != 0
}

/**
 * `optional .com.example.delhitransit.VehiclePosition vehicle = 4;`
 */
             fun setVehicle(value:com.example.delhitransit.GtfsRealtime.VehiclePosition?):Builder {
if (vehicleBuilder_ == null)
{
if (value == null)
{
throw NullPointerException()
}
vehicle_ = value
onChanged()
}
else
{
vehicleBuilder_!!.setMessage(value!!)
}
bitField0_ = bitField0_ or 0x00000008
return this
}

/**
 * `optional .com.example.delhitransit.VehiclePosition vehicle = 4;`
 */
             fun setVehicle(
builderForValue:com.example.delhitransit.GtfsRealtime.VehiclePosition.Builder):Builder {
if (vehicleBuilder_ == null)
{
vehicle_ = builderForValue.build()
onChanged()
}
else
{
vehicleBuilder_!!.setMessage(builderForValue.build())
}
bitField0_ = bitField0_ or 0x00000008
return this
}

/**
 * `optional .com.example.delhitransit.VehiclePosition vehicle = 4;`
 */
             fun mergeVehicle(value:com.example.delhitransit.GtfsRealtime.VehiclePosition):Builder {
if (vehicleBuilder_ == null)
{
if (bitField0_ and 0x00000008 != 0 &&
vehicle_ != null &&
vehicle_ !== com.example.delhitransit.GtfsRealtime.VehiclePosition.defaultInstance)
{
vehicle_ = com.example.delhitransit.GtfsRealtime.VehiclePosition.newBuilder(vehicle_).mergeFrom(value).buildPartial()
}
else
{
vehicle_ = value
}
onChanged()
}
else
{
vehicleBuilder_!!.mergeFrom(value)
}
bitField0_ = bitField0_ or 0x00000008
return this
}

/**
 * `optional .com.example.delhitransit.VehiclePosition vehicle = 4;`
 */
             fun clearVehicle():Builder {
if (vehicleBuilder_ == null)
{
vehicle_ = null
onChanged()
}
else
{
vehicleBuilder_!!.clear()
}
bitField0_ = bitField0_ and 0x00000008.inv()
return this
}

/**
 * `optional .com.example.delhitransit.Alert alert = 5;`
 */
            override fun hasAlert():Boolean {
return bitField0_ and 0x00000010 != 0
}

/**
 * `optional .com.example.delhitransit.Alert alert = 5;`
 */
             fun setAlert(value:com.example.delhitransit.GtfsRealtime.Alert?):Builder {
if (alertBuilder_ == null)
{
if (value == null)
{
throw NullPointerException()
}
alert_ = value
onChanged()
}
else
{
alertBuilder_!!.setMessage(value!!)
}
bitField0_ = bitField0_ or 0x00000010
return this
}

/**
 * `optional .com.example.delhitransit.Alert alert = 5;`
 */
             fun setAlert(
builderForValue:com.example.delhitransit.GtfsRealtime.Alert.Builder):Builder {
if (alertBuilder_ == null)
{
alert_ = builderForValue.build()
onChanged()
}
else
{
alertBuilder_!!.setMessage(builderForValue.build())
}
bitField0_ = bitField0_ or 0x00000010
return this
}

/**
 * `optional .com.example.delhitransit.Alert alert = 5;`
 */
             fun mergeAlert(value:com.example.delhitransit.GtfsRealtime.Alert):Builder {
if (alertBuilder_ == null)
{
if (bitField0_ and 0x00000010 != 0 &&
alert_ != null &&
alert_ !== com.example.delhitransit.GtfsRealtime.Alert.defaultInstance)
{
alert_ = com.example.delhitransit.GtfsRealtime.Alert.newBuilder(alert_).mergeFrom(value).buildPartial()
}
else
{
alert_ = value
}
onChanged()
}
else
{
alertBuilder_!!.mergeFrom(value)
}
bitField0_ = bitField0_ or 0x00000010
return this
}

/**
 * `optional .com.example.delhitransit.Alert alert = 5;`
 */
             fun clearAlert():Builder {
if (alertBuilder_ == null)
{
alert_ = null
onChanged()
}
else
{
alertBuilder_!!.clear()
}
bitField0_ = bitField0_ and 0x00000010.inv()
return this
}

override fun setUnknownFields(
unknownFields:com.google.protobuf.UnknownFieldSet):Builder {
return super.setUnknownFields(unknownFields)
}

override fun mergeUnknownFields(
unknownFields:com.google.protobuf.UnknownFieldSet):Builder {
return super.mergeUnknownFields(unknownFields)
}

companion object {
 val descriptor:com.google.protobuf.Descriptors.Descriptor
get() =com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_FeedEntity_descriptor
}


 // @@protoc_insertion_point(builder_scope:com.example.delhitransit.FeedEntity)
        }

override fun getParserForType():com.google.protobuf.Parser<FeedEntity> {
return PARSER
}

override fun getDefaultInstanceForType():com.example.delhitransit.GtfsRealtime.FeedEntity {
return defaultInstance
}

companion object {
private val serialVersionUID = 0L

 val descriptor:com.google.protobuf.Descriptors.Descriptor
get() =com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_FeedEntity_descriptor
 val ID_FIELD_NUMBER = 1

 val IS_DELETED_FIELD_NUMBER = 2

 val TRIP_UPDATE_FIELD_NUMBER = 3

 val VEHICLE_FIELD_NUMBER = 4

 val ALERT_FIELD_NUMBER = 5

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:java.nio.ByteBuffer):com.example.delhitransit.GtfsRealtime.FeedEntity {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:java.nio.ByteBuffer,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.FeedEntity {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:com.google.protobuf.ByteString):com.example.delhitransit.GtfsRealtime.FeedEntity {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:com.google.protobuf.ByteString,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.FeedEntity {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(data:ByteArray):com.example.delhitransit.GtfsRealtime.FeedEntity {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:ByteArray,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.FeedEntity {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseFrom(input:java.io.InputStream):com.example.delhitransit.GtfsRealtime.FeedEntity {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:java.io.InputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.FeedEntity {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseDelimitedFrom(input:java.io.InputStream):com.example.delhitransit.GtfsRealtime.FeedEntity {
return com.google.protobuf.GeneratedMessageV3
.parseDelimitedWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseDelimitedFrom(
input:java.io.InputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.FeedEntity {
return com.google.protobuf.GeneratedMessageV3
.parseDelimitedWithIOException(PARSER, input, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:com.google.protobuf.CodedInputStream):com.example.delhitransit.GtfsRealtime.FeedEntity {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.FeedEntity {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input, extensionRegistry)
}

 fun newBuilder():Builder {
return defaultInstance.toBuilder()
}

 fun newBuilder(prototype:com.example.delhitransit.GtfsRealtime.FeedEntity):Builder {
return defaultInstance.toBuilder().mergeFrom(prototype)
}

 // @@protoc_insertion_point(class_scope:com.example.delhitransit.FeedEntity)
         val defaultInstance:com.example.delhitransit.GtfsRealtime.FeedEntity

init{
defaultInstance = com.example.delhitransit.GtfsRealtime.FeedEntity()
}

@Deprecated("")
 val PARSER:com.google.protobuf.Parser<FeedEntity> = object:com.google.protobuf.AbstractParser<FeedEntity>() {
@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
override fun parsePartialFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):FeedEntity {
return FeedEntity(input, extensionRegistry)
}
}

 fun parser():com.google.protobuf.Parser<FeedEntity> {
return PARSER
}
}

}

 interface TripUpdateOrBuilder:
 // @@protoc_insertion_point(interface_extends:com.example.delhitransit.TripUpdate)
            com.google.protobuf.GeneratedMessageV3.ExtendableMessageOrBuilder<TripUpdate> {

/**
 * <pre>
 * The Trip that this message applies to. There can be at most one
 * TripUpdate entity for each actual trip instance.
 * If there is none, that means there is no prediction information available.
 * It does *not* mean that the trip is progressing according to schedule.
</pre> *
 *
 * `required .com.example.delhitransit.TripDescriptor trip = 1;`
 */
         val trip:com.example.delhitransit.GtfsRealtime.TripDescriptor

/**
 * <pre>
 * The Trip that this message applies to. There can be at most one
 * TripUpdate entity for each actual trip instance.
 * If there is none, that means there is no prediction information available.
 * It does *not* mean that the trip is progressing according to schedule.
</pre> *
 *
 * `required .com.example.delhitransit.TripDescriptor trip = 1;`
 */
         val tripOrBuilder:com.example.delhitransit.GtfsRealtime.TripDescriptorOrBuilder

/**
 * <pre>
 * Additional information on the vehicle that is serving this trip.
</pre> *
 *
 * `optional .com.example.delhitransit.VehicleDescriptor vehicle = 3;`
 */
         val vehicle:com.example.delhitransit.GtfsRealtime.VehicleDescriptor

/**
 * <pre>
 * Additional information on the vehicle that is serving this trip.
</pre> *
 *
 * `optional .com.example.delhitransit.VehicleDescriptor vehicle = 3;`
 */
         val vehicleOrBuilder:com.example.delhitransit.GtfsRealtime.VehicleDescriptorOrBuilder

/**
 * <pre>
 * Updates to StopTimes for the trip (both future, i.e., predictions, and in
 * some cases, past ones, i.e., those that already happened).
 * The updates must be sorted by stop_sequence, and apply for all the
 * following stops of the trip up to the next specified one.
 * Example 1:
 * For a trip with 20 stops, a StopTimeUpdate with arrival delay and departure
 * delay of 0 for stop_sequence of the current stop means that the trip is
 * exactly on time.
 * Example 2:
 * For the same trip instance, 3 StopTimeUpdates are provided:
 * - delay of 5 min for stop_sequence 3
 * - delay of 1 min for stop_sequence 8
 * - delay of unspecified duration for stop_sequence 10
 * This will be interpreted as:
 * - stop_sequences 3,4,5,6,7 have delay of 5 min.
 * - stop_sequences 8,9 have delay of 1 min.
 * - stop_sequences 10,... have unknown delay.
</pre> *
 *
 * `repeated .com.example.delhitransit.TripUpdate.StopTimeUpdate stop_time_update = 2;`
 */
         val stopTimeUpdateList:List<com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate>

/**
 * <pre>
 * Updates to StopTimes for the trip (both future, i.e., predictions, and in
 * some cases, past ones, i.e., those that already happened).
 * The updates must be sorted by stop_sequence, and apply for all the
 * following stops of the trip up to the next specified one.
 * Example 1:
 * For a trip with 20 stops, a StopTimeUpdate with arrival delay and departure
 * delay of 0 for stop_sequence of the current stop means that the trip is
 * exactly on time.
 * Example 2:
 * For the same trip instance, 3 StopTimeUpdates are provided:
 * - delay of 5 min for stop_sequence 3
 * - delay of 1 min for stop_sequence 8
 * - delay of unspecified duration for stop_sequence 10
 * This will be interpreted as:
 * - stop_sequences 3,4,5,6,7 have delay of 5 min.
 * - stop_sequences 8,9 have delay of 1 min.
 * - stop_sequences 10,... have unknown delay.
</pre> *
 *
 * `repeated .com.example.delhitransit.TripUpdate.StopTimeUpdate stop_time_update = 2;`
 */
         val stopTimeUpdateCount:Int

/**
 * <pre>
 * Updates to StopTimes for the trip (both future, i.e., predictions, and in
 * some cases, past ones, i.e., those that already happened).
 * The updates must be sorted by stop_sequence, and apply for all the
 * following stops of the trip up to the next specified one.
 * Example 1:
 * For a trip with 20 stops, a StopTimeUpdate with arrival delay and departure
 * delay of 0 for stop_sequence of the current stop means that the trip is
 * exactly on time.
 * Example 2:
 * For the same trip instance, 3 StopTimeUpdates are provided:
 * - delay of 5 min for stop_sequence 3
 * - delay of 1 min for stop_sequence 8
 * - delay of unspecified duration for stop_sequence 10
 * This will be interpreted as:
 * - stop_sequences 3,4,5,6,7 have delay of 5 min.
 * - stop_sequences 8,9 have delay of 1 min.
 * - stop_sequences 10,... have unknown delay.
</pre> *
 *
 * `repeated .com.example.delhitransit.TripUpdate.StopTimeUpdate stop_time_update = 2;`
 */
         val stopTimeUpdateOrBuilderList:List< com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdateOrBuilder>

/**
 * <pre>
 * Moment at which the vehicle's real-time progress was measured. In POSIX
 * time (i.e., the number of seconds since January 1st 1970 00:00:00 UTC).
</pre> *
 *
 * `optional uint64 timestamp = 4;`
 */
         val timestamp:Long

/**
 * <pre>
 * The current schedule deviation for the trip.  Delay should only be
 * specified when the prediction is given relative to some existing schedule
 * in GTFS.
 * Delay (in seconds) can be positive (meaning that the vehicle is late) or
 * negative (meaning that the vehicle is ahead of schedule). Delay of 0
 * means that the vehicle is exactly on time.
 * Delay information in StopTimeUpdates take precedent of trip-level delay
 * information, such that trip-level delay is only propagated until the next
 * stop along the trip with a StopTimeUpdate delay value specified.
 * Feed providers are strongly encouraged to provide a TripUpdate.timestamp
 * value indicating when the delay value was last updated, in order to
 * evaluate the freshness of the data.
 * NOTE: This field is still experimental, and subject to change. It may be
 * formally adopted in the future.
</pre> *
 *
 * `optional int32 delay = 5;`
 */
         val delay:Int

/**
 * <pre>
 * The Trip that this message applies to. There can be at most one
 * TripUpdate entity for each actual trip instance.
 * If there is none, that means there is no prediction information available.
 * It does *not* mean that the trip is progressing according to schedule.
</pre> *
 *
 * `required .com.example.delhitransit.TripDescriptor trip = 1;`
 */
         fun hasTrip():Boolean

/**
 * <pre>
 * Additional information on the vehicle that is serving this trip.
</pre> *
 *
 * `optional .com.example.delhitransit.VehicleDescriptor vehicle = 3;`
 */
         fun hasVehicle():Boolean

/**
 * <pre>
 * Updates to StopTimes for the trip (both future, i.e., predictions, and in
 * some cases, past ones, i.e., those that already happened).
 * The updates must be sorted by stop_sequence, and apply for all the
 * following stops of the trip up to the next specified one.
 * Example 1:
 * For a trip with 20 stops, a StopTimeUpdate with arrival delay and departure
 * delay of 0 for stop_sequence of the current stop means that the trip is
 * exactly on time.
 * Example 2:
 * For the same trip instance, 3 StopTimeUpdates are provided:
 * - delay of 5 min for stop_sequence 3
 * - delay of 1 min for stop_sequence 8
 * - delay of unspecified duration for stop_sequence 10
 * This will be interpreted as:
 * - stop_sequences 3,4,5,6,7 have delay of 5 min.
 * - stop_sequences 8,9 have delay of 1 min.
 * - stop_sequences 10,... have unknown delay.
</pre> *
 *
 * `repeated .com.example.delhitransit.TripUpdate.StopTimeUpdate stop_time_update = 2;`
 */
         fun getStopTimeUpdate(index:Int):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate

/**
 * <pre>
 * Updates to StopTimes for the trip (both future, i.e., predictions, and in
 * some cases, past ones, i.e., those that already happened).
 * The updates must be sorted by stop_sequence, and apply for all the
 * following stops of the trip up to the next specified one.
 * Example 1:
 * For a trip with 20 stops, a StopTimeUpdate with arrival delay and departure
 * delay of 0 for stop_sequence of the current stop means that the trip is
 * exactly on time.
 * Example 2:
 * For the same trip instance, 3 StopTimeUpdates are provided:
 * - delay of 5 min for stop_sequence 3
 * - delay of 1 min for stop_sequence 8
 * - delay of unspecified duration for stop_sequence 10
 * This will be interpreted as:
 * - stop_sequences 3,4,5,6,7 have delay of 5 min.
 * - stop_sequences 8,9 have delay of 1 min.
 * - stop_sequences 10,... have unknown delay.
</pre> *
 *
 * `repeated .com.example.delhitransit.TripUpdate.StopTimeUpdate stop_time_update = 2;`
 */
         fun getStopTimeUpdateOrBuilder(
index:Int):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdateOrBuilder

/**
 * <pre>
 * Moment at which the vehicle's real-time progress was measured. In POSIX
 * time (i.e., the number of seconds since January 1st 1970 00:00:00 UTC).
</pre> *
 *
 * `optional uint64 timestamp = 4;`
 */
         fun hasTimestamp():Boolean

/**
 * <pre>
 * The current schedule deviation for the trip.  Delay should only be
 * specified when the prediction is given relative to some existing schedule
 * in GTFS.
 * Delay (in seconds) can be positive (meaning that the vehicle is late) or
 * negative (meaning that the vehicle is ahead of schedule). Delay of 0
 * means that the vehicle is exactly on time.
 * Delay information in StopTimeUpdates take precedent of trip-level delay
 * information, such that trip-level delay is only propagated until the next
 * stop along the trip with a StopTimeUpdate delay value specified.
 * Feed providers are strongly encouraged to provide a TripUpdate.timestamp
 * value indicating when the delay value was last updated, in order to
 * evaluate the freshness of the data.
 * NOTE: This field is still experimental, and subject to change. It may be
 * formally adopted in the future.
</pre> *
 *
 * `optional int32 delay = 5;`
 */
         fun hasDelay():Boolean
}

/**
 * <pre>
 * Realtime update of the progress of a vehicle along a trip.
 * Depending on the value of ScheduleRelationship, a TripUpdate can specify:
 * - A trip that proceeds along the schedule.
 * - A trip that proceeds along a route but has no fixed schedule.
 * - A trip that have been added or removed with regard to schedule.
 * The updates can be for future, predicted arrival/departure events, or for
 * past events that already occurred.
 * Normally, updates should get more precise and more certain (see
 * uncertainty below) as the events gets closer to current time.
 * Even if that is not possible, the information for past events should be
 * precise and certain. In particular, if an update points to time in the past
 * but its update's uncertainty is not 0, the client should conclude that the
 * update is a (wrong) prediction and that the trip has not completed yet.
 * Note that the update can describe a trip that is already completed.
 * To this end, it is enough to provide an update for the last stop of the trip.
 * If the time of that is in the past, the client will conclude from that that
 * the whole trip is in the past (it is possible, although inconsequential, to
 * also provide updates for preceding stops).
 * This option is most relevant for a trip that has completed ahead of schedule,
 * but according to the schedule, the trip is still proceeding at the current
 * time. Removing the updates for this trip could make the client assume
 * that the trip is still proceeding.
 * Note that the feed provider is allowed, but not required, to purge past
 * updates - this is one case where this would be practically useful.
</pre> *
 *
 *
 * Protobuf type `com.example.delhitransit.TripUpdate`
 */
     class TripUpdate:com.google.protobuf.GeneratedMessageV3.ExtendableMessage<TripUpdate>,
 // @@protoc_insertion_point(message_implements:com.example.delhitransit.TripUpdate)
            TripUpdateOrBuilder {

private var bitField0_:Int = 0
private var trip_:com.example.delhitransit.GtfsRealtime.TripDescriptor? = null

/**
 * <pre>
 * The Trip that this message applies to. There can be at most one
 * TripUpdate entity for each actual trip instance.
 * If there is none, that means there is no prediction information available.
 * It does *not* mean that the trip is progressing according to schedule.
</pre> *
 *
 * `required .com.example.delhitransit.TripDescriptor trip = 1;`
 */
        override val trip:com.example.delhitransit.GtfsRealtime.TripDescriptor
get() =if (trip_ == null) com.example.delhitransit.GtfsRealtime.TripDescriptor.defaultInstance else trip_

/**
 * <pre>
 * The Trip that this message applies to. There can be at most one
 * TripUpdate entity for each actual trip instance.
 * If there is none, that means there is no prediction information available.
 * It does *not* mean that the trip is progressing according to schedule.
</pre> *
 *
 * `required .com.example.delhitransit.TripDescriptor trip = 1;`
 */
        override val tripOrBuilder:com.example.delhitransit.GtfsRealtime.TripDescriptorOrBuilder
get() =if (trip_ == null) com.example.delhitransit.GtfsRealtime.TripDescriptor.defaultInstance else trip_
private var vehicle_:com.example.delhitransit.GtfsRealtime.VehicleDescriptor? = null

/**
 * <pre>
 * Additional information on the vehicle that is serving this trip.
</pre> *
 *
 * `optional .com.example.delhitransit.VehicleDescriptor vehicle = 3;`
 */
        override val vehicle:com.example.delhitransit.GtfsRealtime.VehicleDescriptor
get() =if (vehicle_ == null) com.example.delhitransit.GtfsRealtime.VehicleDescriptor.defaultInstance else vehicle_

/**
 * <pre>
 * Additional information on the vehicle that is serving this trip.
</pre> *
 *
 * `optional .com.example.delhitransit.VehicleDescriptor vehicle = 3;`
 */
        override val vehicleOrBuilder:com.example.delhitransit.GtfsRealtime.VehicleDescriptorOrBuilder
get() =if (vehicle_ == null) com.example.delhitransit.GtfsRealtime.VehicleDescriptor.defaultInstance else vehicle_
private var stopTimeUpdate_:MutableList<com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate>? = null

/**
 * <pre>
 * Updates to StopTimes for the trip (both future, i.e., predictions, and in
 * some cases, past ones, i.e., those that already happened).
 * The updates must be sorted by stop_sequence, and apply for all the
 * following stops of the trip up to the next specified one.
 * Example 1:
 * For a trip with 20 stops, a StopTimeUpdate with arrival delay and departure
 * delay of 0 for stop_sequence of the current stop means that the trip is
 * exactly on time.
 * Example 2:
 * For the same trip instance, 3 StopTimeUpdates are provided:
 * - delay of 5 min for stop_sequence 3
 * - delay of 1 min for stop_sequence 8
 * - delay of unspecified duration for stop_sequence 10
 * This will be interpreted as:
 * - stop_sequences 3,4,5,6,7 have delay of 5 min.
 * - stop_sequences 8,9 have delay of 1 min.
 * - stop_sequences 10,... have unknown delay.
</pre> *
 *
 * `repeated .com.example.delhitransit.TripUpdate.StopTimeUpdate stop_time_update = 2;`
 */
        override val stopTimeUpdateList:List<com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate>?
get() =stopTimeUpdate_

/**
 * <pre>
 * Updates to StopTimes for the trip (both future, i.e., predictions, and in
 * some cases, past ones, i.e., those that already happened).
 * The updates must be sorted by stop_sequence, and apply for all the
 * following stops of the trip up to the next specified one.
 * Example 1:
 * For a trip with 20 stops, a StopTimeUpdate with arrival delay and departure
 * delay of 0 for stop_sequence of the current stop means that the trip is
 * exactly on time.
 * Example 2:
 * For the same trip instance, 3 StopTimeUpdates are provided:
 * - delay of 5 min for stop_sequence 3
 * - delay of 1 min for stop_sequence 8
 * - delay of unspecified duration for stop_sequence 10
 * This will be interpreted as:
 * - stop_sequences 3,4,5,6,7 have delay of 5 min.
 * - stop_sequences 8,9 have delay of 1 min.
 * - stop_sequences 10,... have unknown delay.
</pre> *
 *
 * `repeated .com.example.delhitransit.TripUpdate.StopTimeUpdate stop_time_update = 2;`
 */
        override val stopTimeUpdateOrBuilderList:List< com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdateOrBuilder>?
get() =stopTimeUpdate_

/**
 * <pre>
 * Updates to StopTimes for the trip (both future, i.e., predictions, and in
 * some cases, past ones, i.e., those that already happened).
 * The updates must be sorted by stop_sequence, and apply for all the
 * following stops of the trip up to the next specified one.
 * Example 1:
 * For a trip with 20 stops, a StopTimeUpdate with arrival delay and departure
 * delay of 0 for stop_sequence of the current stop means that the trip is
 * exactly on time.
 * Example 2:
 * For the same trip instance, 3 StopTimeUpdates are provided:
 * - delay of 5 min for stop_sequence 3
 * - delay of 1 min for stop_sequence 8
 * - delay of unspecified duration for stop_sequence 10
 * This will be interpreted as:
 * - stop_sequences 3,4,5,6,7 have delay of 5 min.
 * - stop_sequences 8,9 have delay of 1 min.
 * - stop_sequences 10,... have unknown delay.
</pre> *
 *
 * `repeated .com.example.delhitransit.TripUpdate.StopTimeUpdate stop_time_update = 2;`
 */
        override val stopTimeUpdateCount:Int
get() =stopTimeUpdate_!!.size
/**
 * <pre>
 * Moment at which the vehicle's real-time progress was measured. In POSIX
 * time (i.e., the number of seconds since January 1st 1970 00:00:00 UTC).
</pre> *
 *
 * `optional uint64 timestamp = 4;`
 */
        override var timestamp:Long = 0
private set
/**
 * <pre>
 * The current schedule deviation for the trip.  Delay should only be
 * specified when the prediction is given relative to some existing schedule
 * in GTFS.
 * Delay (in seconds) can be positive (meaning that the vehicle is late) or
 * negative (meaning that the vehicle is ahead of schedule). Delay of 0
 * means that the vehicle is exactly on time.
 * Delay information in StopTimeUpdates take precedent of trip-level delay
 * information, such that trip-level delay is only propagated until the next
 * stop along the trip with a StopTimeUpdate delay value specified.
 * Feed providers are strongly encouraged to provide a TripUpdate.timestamp
 * value indicating when the delay value was last updated, in order to
 * evaluate the freshness of the data.
 * NOTE: This field is still experimental, and subject to change. It may be
 * formally adopted in the future.
</pre> *
 *
 * `optional int32 delay = 5;`
 */
        override var delay:Int = 0
private set

private var memoizedIsInitialized:Byte = -1

 // Use TripUpdate.newBuilder() to construct.
        private constructor(builder:com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.example.delhitransit.GtfsRealtime.TripUpdate, *>) : super(builder) {}

private constructor() {
stopTimeUpdate_ = emptyList<StopTimeUpdate>()
}

 //        @java.lang.Override
 //        @SuppressWarnings({"unused"})
 //        protected java.lang.Object newInstance(
 //                UnusedPrivateParameter unused) {
 //            return new TripUpdate();
 //        }

        override fun getUnknownFields():com.google.protobuf.UnknownFieldSet {
return this.unknownFields
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
private constructor(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite?) : this() {
if (extensionRegistry == null)
{
throw java.lang.NullPointerException()
}
var mutable_bitField0_ = 0
val unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder()
try
{
var done = false
while (!done)
{
val tag = input.readTag()
when (tag) {
0 -> done = true
10 -> {
var subBuilder:com.example.delhitransit.GtfsRealtime.TripDescriptor.Builder? = null
if (bitField0_ and 0x00000001 != 0)
{
subBuilder = trip_!!.toBuilder()
}
trip_ = input.readMessage(com.example.delhitransit.GtfsRealtime.TripDescriptor.PARSER, extensionRegistry)
if (subBuilder != null)
{
subBuilder.mergeFrom(trip_)
trip_ = subBuilder.buildPartial()
}
bitField0_ = bitField0_ or 0x00000001
}
18 -> {
if (mutable_bitField0_ and 0x00000004 == 0)
{
stopTimeUpdate_ = java.util.ArrayList()
mutable_bitField0_ = mutable_bitField0_ or 0x00000004
}
stopTimeUpdate_!!.add(
input.readMessage(com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate.PARSER, extensionRegistry))
}
26 -> {
var subBuilder:com.example.delhitransit.GtfsRealtime.VehicleDescriptor.Builder? = null
if (bitField0_ and 0x00000002 != 0)
{
subBuilder = vehicle_!!.toBuilder()
}
vehicle_ = input.readMessage(com.example.delhitransit.GtfsRealtime.VehicleDescriptor.PARSER, extensionRegistry)
if (subBuilder != null)
{
subBuilder.mergeFrom(vehicle_)
vehicle_ = subBuilder.buildPartial()
}
bitField0_ = bitField0_ or 0x00000002
}
32 -> {
bitField0_ = bitField0_ or 0x00000004
timestamp = input.readUInt64()
}
40 -> {
bitField0_ = bitField0_ or 0x00000008
delay = input.readInt32()
}
else -> {
if (!parseUnknownField(
input, unknownFields, extensionRegistry, tag))
{
done = true
}
}
}
}
}
catch (e:com.google.protobuf.InvalidProtocolBufferException) {
throw e.setUnfinishedMessage(this)
}
catch (e:java.io.IOException) {
throw com.google.protobuf.InvalidProtocolBufferException(
e).setUnfinishedMessage(this)
}
finally
{
if (mutable_bitField0_ and 0x00000004 != 0)
{
stopTimeUpdate_ = java.util.Collections.unmodifiableList(stopTimeUpdate_!!)
}
this.unknownFields = unknownFields.build()
makeExtensionsImmutable()
}
}

override fun internalGetFieldAccessorTable():com.google.protobuf.GeneratedMessageV3.FieldAccessorTable {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TripUpdate_fieldAccessorTable
.ensureFieldAccessorsInitialized(
com.example.delhitransit.GtfsRealtime.TripUpdate::class.java, com.example.delhitransit.GtfsRealtime.TripUpdate.Builder::class.java)
}

 interface StopTimeEventOrBuilder:
 // @@protoc_insertion_point(interface_extends:com.example.delhitransit.TripUpdate.StopTimeEvent)
                com.google.protobuf.GeneratedMessageV3.ExtendableMessageOrBuilder<StopTimeEvent> {

/**
 * <pre>
 * Delay (in seconds) can be positive (meaning that the vehicle is late) or
 * negative (meaning that the vehicle is ahead of schedule). Delay of 0
 * means that the vehicle is exactly on time.
</pre> *
 *
 * `optional int32 delay = 1;`
 */
             val delay:Int

/**
 * <pre>
 * Event as absolute time.
 * In Unix time (i.e., number of seconds since January 1st 1970 00:00:00
 * UTC).
</pre> *
 *
 * `optional int64 time = 2;`
 */
             val time:Long

/**
 * <pre>
 * If uncertainty is omitted, it is interpreted as unknown.
 * If the prediction is unknown or too uncertain, the delay (or time) field
 * should be empty. In such case, the uncertainty field is ignored.
 * To specify a completely certain prediction, set its uncertainty to 0.
</pre> *
 *
 * `optional int32 uncertainty = 3;`
 */
             val uncertainty:Int

/**
 * <pre>
 * Delay (in seconds) can be positive (meaning that the vehicle is late) or
 * negative (meaning that the vehicle is ahead of schedule). Delay of 0
 * means that the vehicle is exactly on time.
</pre> *
 *
 * `optional int32 delay = 1;`
 */
             fun hasDelay():Boolean

/**
 * <pre>
 * Event as absolute time.
 * In Unix time (i.e., number of seconds since January 1st 1970 00:00:00
 * UTC).
</pre> *
 *
 * `optional int64 time = 2;`
 */
             fun hasTime():Boolean

/**
 * <pre>
 * If uncertainty is omitted, it is interpreted as unknown.
 * If the prediction is unknown or too uncertain, the delay (or time) field
 * should be empty. In such case, the uncertainty field is ignored.
 * To specify a completely certain prediction, set its uncertainty to 0.
</pre> *
 *
 * `optional int32 uncertainty = 3;`
 */
             fun hasUncertainty():Boolean
}

/**
 * <pre>
 * Timing information for a single predicted event (either arrival or
 * departure).
 * Timing consists of delay and/or estimated time, and uncertainty.
 * - delay should be used when the prediction is given relative to some
 * existing schedule in GTFS.
 * - time should be given whether there is a predicted schedule or not. If
 * both time and delay are specified, time will take precedence
 * (although normally, time, if given for a scheduled trip, should be
 * equal to scheduled time in GTFS + delay).
 * Uncertainty applies equally to both time and delay.
 * The uncertainty roughly specifies the expected error in true delay (but
 * note, we don't yet define its precise statistical meaning). It's possible
 * for the uncertainty to be 0, for example for trains that are driven under
 * computer timing control.
</pre> *
 *
 *
 * Protobuf type `com.example.delhitransit.TripUpdate.StopTimeEvent`
 */
         class StopTimeEvent:com.google.protobuf.GeneratedMessageV3.ExtendableMessage<StopTimeEvent>,
 //                 @@protoc_insertion_point(message_implements:com.example.delhitransit.TripUpdate.StopTimeEvent)
                StopTimeEventOrBuilder {

private var bitField0_:Int = 0
/**
 * <pre>
 * Delay (in seconds) can be positive (meaning that the vehicle is late) or
 * negative (meaning that the vehicle is ahead of schedule). Delay of 0
 * means that the vehicle is exactly on time.
</pre> *
 *
 * `optional int32 delay = 1;`
 */
            override var delay:Int = 0
private set
/**
 * <pre>
 * Event as absolute time.
 * In Unix time (i.e., number of seconds since January 1st 1970 00:00:00
 * UTC).
</pre> *
 *
 * `optional int64 time = 2;`
 */
            override var time:Long = 0
private set
/**
 * <pre>
 * If uncertainty is omitted, it is interpreted as unknown.
 * If the prediction is unknown or too uncertain, the delay (or time) field
 * should be empty. In such case, the uncertainty field is ignored.
 * To specify a completely certain prediction, set its uncertainty to 0.
</pre> *
 *
 * `optional int32 uncertainty = 3;`
 */
            override var uncertainty:Int = 0
private set

private var memoizedIsInitialized:Byte = -1

 // Use StopTimeEvent.newBuilder() to construct.
            private constructor(builder:com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent, *>) : super(builder) {}

private constructor() {}

 //            @java.lang.Override
 //            @SuppressWarnings({"unused"})
 //            protected java.lang.Object newInstance(
 //                    UnusedPrivateParameter unused) {
 //                return new StopTimeEvent();
 //            }

            override fun getUnknownFields():com.google.protobuf.UnknownFieldSet {
return this.unknownFields
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
private constructor(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite?) : this() {
if (extensionRegistry == null)
{
throw java.lang.NullPointerException()
}
val mutable_bitField0_ = 0
val unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder()
try
{
var done = false
while (!done)
{
val tag = input.readTag()
when (tag) {
0 -> done = true
8 -> {
bitField0_ = bitField0_ or 0x00000001
delay = input.readInt32()
}
16 -> {
bitField0_ = bitField0_ or 0x00000002
time = input.readInt64()
}
24 -> {
bitField0_ = bitField0_ or 0x00000004
uncertainty = input.readInt32()
}
else -> {
if (!parseUnknownField(
input, unknownFields, extensionRegistry, tag))
{
done = true
}
}
}
}
}
catch (e:com.google.protobuf.InvalidProtocolBufferException) {
throw e.setUnfinishedMessage(this)
}
catch (e:java.io.IOException) {
throw com.google.protobuf.InvalidProtocolBufferException(
e).setUnfinishedMessage(this)
}
finally
{
this.unknownFields = unknownFields.build()
makeExtensionsImmutable()
}
}

override fun internalGetFieldAccessorTable():com.google.protobuf.GeneratedMessageV3.FieldAccessorTable {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TripUpdate_StopTimeEvent_fieldAccessorTable
.ensureFieldAccessorsInitialized(
com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent::class.java, com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent.Builder::class.java)
}

/**
 * <pre>
 * Delay (in seconds) can be positive (meaning that the vehicle is late) or
 * negative (meaning that the vehicle is ahead of schedule). Delay of 0
 * means that the vehicle is exactly on time.
</pre> *
 *
 * `optional int32 delay = 1;`
 */
            override fun hasDelay():Boolean {
return bitField0_ and 0x00000001 != 0
}

/**
 * <pre>
 * Event as absolute time.
 * In Unix time (i.e., number of seconds since January 1st 1970 00:00:00
 * UTC).
</pre> *
 *
 * `optional int64 time = 2;`
 */
            override fun hasTime():Boolean {
return bitField0_ and 0x00000002 != 0
}

/**
 * <pre>
 * If uncertainty is omitted, it is interpreted as unknown.
 * If the prediction is unknown or too uncertain, the delay (or time) field
 * should be empty. In such case, the uncertainty field is ignored.
 * To specify a completely certain prediction, set its uncertainty to 0.
</pre> *
 *
 * `optional int32 uncertainty = 3;`
 */
            override fun hasUncertainty():Boolean {
return bitField0_ and 0x00000004 != 0
}

override fun isInitialized():Boolean {
val isInitialized = memoizedIsInitialized
if (isInitialized.toInt() == 1) return true
if (isInitialized.toInt() == 0) return false

if (!extensionsAreInitialized())
{
memoizedIsInitialized = 0
return false
}
memoizedIsInitialized = 1
return true
}

@Throws(java.io.IOException::class)
override fun writeTo(output:com.google.protobuf.CodedOutputStream) {
val extensionWriter = newExtensionWriter()
if (bitField0_ and 0x00000001 != 0)
{
output.writeInt32(1, delay)
}
if (bitField0_ and 0x00000002 != 0)
{
output.writeInt64(2, time)
}
if (bitField0_ and 0x00000004 != 0)
{
output.writeInt32(3, uncertainty)
}
extensionWriter.writeUntil(2000, output)
unknownFields.writeTo(output)
}

override fun getSerializedSize():Int {
var size = memoizedSize
if (size != -1) return size

size = 0
if (bitField0_ and 0x00000001 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeInt32Size(1, delay)
}
if (bitField0_ and 0x00000002 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeInt64Size(2, time)
}
if (bitField0_ and 0x00000004 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeInt32Size(3, uncertainty)
}
size += extensionsSerializedSize()
size += unknownFields.serializedSize
memoizedSize = size
return size
}

override fun equals(obj:Any?):Boolean {
if (obj === this)
{
return true
}
if (obj !is com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent)
{
return super.equals(obj)
}
val other = obj as com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent?

if (hasDelay() != other!!.hasDelay()) return false
if (hasDelay())
{
if (delay != other.delay)
return false
}
if (hasTime() != other.hasTime()) return false
if (hasTime())
{
if (time != other.time)
return false
}
if (hasUncertainty() != other.hasUncertainty()) return false
if (hasUncertainty())
{
if (uncertainty != other.uncertainty)
return false
}
if (unknownFields != other.unknownFields) return false
return if (extensionFields != other.extensionFields) false else true
}

override fun hashCode():Int {
if (memoizedHashCode != 0)
{
return memoizedHashCode
}
var hash = 41
hash = 19 * hash + descriptor.hashCode()
if (hasDelay())
{
hash = 37 * hash + DELAY_FIELD_NUMBER
hash = 53 * hash + delay
}
if (hasTime())
{
hash = 37 * hash + TIME_FIELD_NUMBER
hash = 53 * hash + com.google.protobuf.Internal.hashLong(
time)
}
if (hasUncertainty())
{
hash = 37 * hash + UNCERTAINTY_FIELD_NUMBER
hash = 53 * hash + uncertainty
}
hash = AbstractMessage.hashFields(hash, extensionFields)
hash = 29 * hash + unknownFields.hashCode()
memoizedHashCode = hash
return hash
}

override fun newBuilderForType():Builder {
return newBuilder()
}

override fun toBuilder():Builder {
return if (this === defaultInstance)
Builder()
else
Builder().mergeFrom(this)
}

override fun newBuilderForType(
parent:com.google.protobuf.GeneratedMessageV3.BuilderParent):Builder {
return Builder(parent)
}

/**
 * <pre>
 * Timing information for a single predicted event (either arrival or
 * departure).
 * Timing consists of delay and/or estimated time, and uncertainty.
 * - delay should be used when the prediction is given relative to some
 * existing schedule in GTFS.
 * - time should be given whether there is a predicted schedule or not. If
 * both time and delay are specified, time will take precedence
 * (although normally, time, if given for a scheduled trip, should be
 * equal to scheduled time in GTFS + delay).
 * Uncertainty applies equally to both time and delay.
 * The uncertainty roughly specifies the expected error in true delay (but
 * note, we don't yet define its precise statistical meaning). It's possible
 * for the uncertainty to be 0, for example for trains that are driven under
 * computer timing control.
</pre> *
 *
 *
 * Protobuf type `com.example.delhitransit.TripUpdate.StopTimeEvent`
 */
             class Builder:com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent, Builder>,
 // @@protoc_insertion_point(builder_implements:com.example.delhitransit.TripUpdate.StopTimeEvent)
                    com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEventOrBuilder {

private var bitField0_:Int = 0

/**
 * <pre>
 * Delay (in seconds) can be positive (meaning that the vehicle is late) or
 * negative (meaning that the vehicle is ahead of schedule). Delay of 0
 * means that the vehicle is exactly on time.
</pre> *
 *
 * `optional int32 delay = 1;`
 */
                override var delay:Int = 0
private set

/**
 * <pre>
 * Event as absolute time.
 * In Unix time (i.e., number of seconds since January 1st 1970 00:00:00
 * UTC).
</pre> *
 *
 * `optional int64 time = 2;`
 */
                override var time:Long = 0
private set

/**
 * <pre>
 * If uncertainty is omitted, it is interpreted as unknown.
 * If the prediction is unknown or too uncertain, the delay (or time) field
 * should be empty. In such case, the uncertainty field is ignored.
 * To specify a completely certain prediction, set its uncertainty to 0.
</pre> *
 *
 * `optional int32 uncertainty = 3;`
 */
                override var uncertainty:Int = 0
private set

override fun internalGetFieldAccessorTable():com.google.protobuf.GeneratedMessageV3.FieldAccessorTable {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TripUpdate_StopTimeEvent_fieldAccessorTable
.ensureFieldAccessorsInitialized(
com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent::class.java, com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent.Builder::class.java)
}

 // Construct using com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent.newBuilder()
                private constructor() {
maybeForceBuilderInitialization()
}

private constructor(
parent:com.google.protobuf.GeneratedMessageV3.BuilderParent) : super(parent) {
maybeForceBuilderInitialization()
}

private fun maybeForceBuilderInitialization() {
if (com.google.protobuf.GeneratedMessageV3
.alwaysUseFieldBuilders)
{}
}

override fun clear():Builder {
super.clear()
delay = 0
bitField0_ = bitField0_ and 0x00000001.inv()
time = 0L
bitField0_ = bitField0_ and 0x00000002.inv()
uncertainty = 0
bitField0_ = bitField0_ and 0x00000004.inv()
return this
}

override fun getDescriptorForType():com.google.protobuf.Descriptors.Descriptor {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TripUpdate_StopTimeEvent_descriptor
}

override fun getDefaultInstanceForType():com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent {
return com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent.defaultInstance
}

override fun build():com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent {
val result = buildPartial()
if (!result.isInitialized)
{
throw AbstractMessage.Builder.newUninitializedMessageException(result)
}
return result
}

override fun buildPartial():com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent {
val result = com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent(this)
val from_bitField0_ = bitField0_
var to_bitField0_ = 0
if (from_bitField0_ and 0x00000001 != 0)
{
result.delay = delay
to_bitField0_ = to_bitField0_ or 0x00000001
}
if (from_bitField0_ and 0x00000002 != 0)
{
result.time = time
to_bitField0_ = to_bitField0_ or 0x00000002
}
if (from_bitField0_ and 0x00000004 != 0)
{
result.uncertainty = uncertainty
to_bitField0_ = to_bitField0_ or 0x00000004
}
result.bitField0_ = to_bitField0_
onBuilt()
return result
}

override fun clone():Builder {
return super.clone()
}

override fun setField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
value:Any):Builder {
return super.setField(field, value)
}

override fun clearField(
field:com.google.protobuf.Descriptors.FieldDescriptor):Builder {
return super.clearField(field)
}

override fun clearOneof(
oneof:com.google.protobuf.Descriptors.OneofDescriptor):Builder {
return super.clearOneof(oneof)
}

override fun setRepeatedField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
index:Int, value:Any):Builder {
return super.setRepeatedField(field, index, value)
}

override fun addRepeatedField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
value:Any):Builder {
return super.addRepeatedField(field, value)
}

override fun <Type> setExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent, Type>,
value:Type):Builder {
return super.setExtension(extension, value)
}

override fun <Type> setExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent, List<Type>>,
index:Int, value:Type):Builder {
return super.setExtension(extension, index, value)
}

override fun <Type> addExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent, List<Type>>,
value:Type):Builder {
return super.addExtension(extension, value)
}

override fun <Type> clearExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent, *>):Builder {
return super.clearExtension<Any>(extension)
}

override fun mergeFrom(other:com.google.protobuf.Message):Builder {
if (other is com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent)
{
return mergeFrom(other)
}
else
{
super.mergeFrom(other)
return this
}
}

 fun mergeFrom(other:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent?):Builder {
if (other === com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent.defaultInstance)
return this
if (other!!.hasDelay())
{
setDelay(other.delay)
}
if (other.hasTime())
{
setTime(other.time)
}
if (other.hasUncertainty())
{
setUncertainty(other.uncertainty)
}
this.mergeExtensionFields(other)
this.mergeUnknownFields(other.unknownFields)
onChanged()
return this
}

override fun isInitialized():Boolean {
return if (!extensionsAreInitialized()) {
            false
        } else true
}

@Throws(java.io.IOException::class)
override fun mergeFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):Builder {
var parsedMessage:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent? = null
try
{
parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry)
}
catch (e:com.google.protobuf.InvalidProtocolBufferException) {
parsedMessage = e.unfinishedMessage as com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent
throw e.unwrapIOException()
}
finally
{
if (parsedMessage != null)
{
mergeFrom(parsedMessage)
}
}
return this
}

/**
 * <pre>
 * Delay (in seconds) can be positive (meaning that the vehicle is late) or
 * negative (meaning that the vehicle is ahead of schedule). Delay of 0
 * means that the vehicle is exactly on time.
</pre> *
 *
 * `optional int32 delay = 1;`
 */
                override fun hasDelay():Boolean {
return bitField0_ and 0x00000001 != 0
}

/**
 * <pre>
 * Delay (in seconds) can be positive (meaning that the vehicle is late) or
 * negative (meaning that the vehicle is ahead of schedule). Delay of 0
 * means that the vehicle is exactly on time.
</pre> *
 *
 * `optional int32 delay = 1;`
 */
                 fun setDelay(value:Int):Builder {
bitField0_ = bitField0_ or 0x00000001
delay = value
onChanged()
return this
}

/**
 * <pre>
 * Delay (in seconds) can be positive (meaning that the vehicle is late) or
 * negative (meaning that the vehicle is ahead of schedule). Delay of 0
 * means that the vehicle is exactly on time.
</pre> *
 *
 * `optional int32 delay = 1;`
 */
                 fun clearDelay():Builder {
bitField0_ = bitField0_ and 0x00000001.inv()
delay = 0
onChanged()
return this
}

/**
 * <pre>
 * Event as absolute time.
 * In Unix time (i.e., number of seconds since January 1st 1970 00:00:00
 * UTC).
</pre> *
 *
 * `optional int64 time = 2;`
 */
                override fun hasTime():Boolean {
return bitField0_ and 0x00000002 != 0
}

/**
 * <pre>
 * Event as absolute time.
 * In Unix time (i.e., number of seconds since January 1st 1970 00:00:00
 * UTC).
</pre> *
 *
 * `optional int64 time = 2;`
 */
                 fun setTime(value:Long):Builder {
bitField0_ = bitField0_ or 0x00000002
time = value
onChanged()
return this
}

/**
 * <pre>
 * Event as absolute time.
 * In Unix time (i.e., number of seconds since January 1st 1970 00:00:00
 * UTC).
</pre> *
 *
 * `optional int64 time = 2;`
 */
                 fun clearTime():Builder {
bitField0_ = bitField0_ and 0x00000002.inv()
time = 0L
onChanged()
return this
}

/**
 * <pre>
 * If uncertainty is omitted, it is interpreted as unknown.
 * If the prediction is unknown or too uncertain, the delay (or time) field
 * should be empty. In such case, the uncertainty field is ignored.
 * To specify a completely certain prediction, set its uncertainty to 0.
</pre> *
 *
 * `optional int32 uncertainty = 3;`
 */
                override fun hasUncertainty():Boolean {
return bitField0_ and 0x00000004 != 0
}

/**
 * <pre>
 * If uncertainty is omitted, it is interpreted as unknown.
 * If the prediction is unknown or too uncertain, the delay (or time) field
 * should be empty. In such case, the uncertainty field is ignored.
 * To specify a completely certain prediction, set its uncertainty to 0.
</pre> *
 *
 * `optional int32 uncertainty = 3;`
 */
                 fun setUncertainty(value:Int):Builder {
bitField0_ = bitField0_ or 0x00000004
uncertainty = value
onChanged()
return this
}

/**
 * <pre>
 * If uncertainty is omitted, it is interpreted as unknown.
 * If the prediction is unknown or too uncertain, the delay (or time) field
 * should be empty. In such case, the uncertainty field is ignored.
 * To specify a completely certain prediction, set its uncertainty to 0.
</pre> *
 *
 * `optional int32 uncertainty = 3;`
 */
                 fun clearUncertainty():Builder {
bitField0_ = bitField0_ and 0x00000004.inv()
uncertainty = 0
onChanged()
return this
}

override fun setUnknownFields(
unknownFields:com.google.protobuf.UnknownFieldSet):Builder {
return super.setUnknownFields(unknownFields)
}

override fun mergeUnknownFields(
unknownFields:com.google.protobuf.UnknownFieldSet):Builder {
return super.mergeUnknownFields(unknownFields)
}

companion object {
 val descriptor:com.google.protobuf.Descriptors.Descriptor
get() =com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TripUpdate_StopTimeEvent_descriptor
}


 // @@protoc_insertion_point(builder_scope:com.example.delhitransit.TripUpdate.StopTimeEvent)
            }

override fun getParserForType():com.google.protobuf.Parser<StopTimeEvent> {
return PARSER
}

override fun getDefaultInstanceForType():com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent {
return defaultInstance
}

companion object {
private val serialVersionUID = 0L

 val descriptor:com.google.protobuf.Descriptors.Descriptor
get() =com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TripUpdate_StopTimeEvent_descriptor
 val DELAY_FIELD_NUMBER = 1

 val TIME_FIELD_NUMBER = 2

 val UNCERTAINTY_FIELD_NUMBER = 3

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:java.nio.ByteBuffer):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:java.nio.ByteBuffer,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:com.google.protobuf.ByteString):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:com.google.protobuf.ByteString,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(data:ByteArray):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:ByteArray,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseFrom(input:java.io.InputStream):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:java.io.InputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseDelimitedFrom(input:java.io.InputStream):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent {
return com.google.protobuf.GeneratedMessageV3
.parseDelimitedWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseDelimitedFrom(
input:java.io.InputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent {
return com.google.protobuf.GeneratedMessageV3
.parseDelimitedWithIOException(PARSER, input, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:com.google.protobuf.CodedInputStream):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input, extensionRegistry)
}

 fun newBuilder():Builder {
return defaultInstance.toBuilder()
}

 fun newBuilder(prototype:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent):Builder {
return defaultInstance.toBuilder().mergeFrom(prototype)
}

 // @@protoc_insertion_point(class_scope:com.example.delhitransit.TripUpdate.StopTimeEvent)
             val defaultInstance:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent

init{
defaultInstance = com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent()
}

@Deprecated("")
 val PARSER:com.google.protobuf.Parser<StopTimeEvent> = object:com.google.protobuf.AbstractParser<StopTimeEvent>() {
@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
override fun parsePartialFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):StopTimeEvent {
return StopTimeEvent(input, extensionRegistry)
}
}

 fun parser():com.google.protobuf.Parser<StopTimeEvent> {
return PARSER
}
}

}

 interface StopTimeUpdateOrBuilder:
 // @@protoc_insertion_point(interface_extends:com.example.delhitransit.TripUpdate.StopTimeUpdate)
                com.google.protobuf.GeneratedMessageV3.ExtendableMessageOrBuilder<StopTimeUpdate> {

/**
 * <pre>
 * Must be the same as in stop_times.txt in the corresponding GTFS feed.
</pre> *
 *
 * `optional uint32 stop_sequence = 1;`
 */
             val stopSequence:Int

/**
 * <pre>
 * Must be the same as in stops.txt in the corresponding GTFS feed.
</pre> *
 *
 * `optional string stop_id = 4;`
 */
             val stopId:java.lang.String

/**
 * <pre>
 * Must be the same as in stops.txt in the corresponding GTFS feed.
</pre> *
 *
 * `optional string stop_id = 4;`
 */
             val stopIdBytes:com.google.protobuf.ByteString

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeEvent arrival = 2;`
 */
             val arrival:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeEvent arrival = 2;`
 */
             val arrivalOrBuilder:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEventOrBuilder

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeEvent departure = 3;`
 */
             val departure:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeEvent departure = 3;`
 */
             val departureOrBuilder:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEventOrBuilder

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeUpdate.ScheduleRelationship schedule_relationship = 5 [default = SCHEDULED];`
 */
             val scheduleRelationship:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate.ScheduleRelationship

/**
 * <pre>
 * Must be the same as in stop_times.txt in the corresponding GTFS feed.
</pre> *
 *
 * `optional uint32 stop_sequence = 1;`
 */
             fun hasStopSequence():Boolean

/**
 * <pre>
 * Must be the same as in stops.txt in the corresponding GTFS feed.
</pre> *
 *
 * `optional string stop_id = 4;`
 */
             fun hasStopId():Boolean

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeEvent arrival = 2;`
 */
             fun hasArrival():Boolean

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeEvent departure = 3;`
 */
             fun hasDeparture():Boolean

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeUpdate.ScheduleRelationship schedule_relationship = 5 [default = SCHEDULED];`
 */
             fun hasScheduleRelationship():Boolean
}

/**
 * <pre>
 * Realtime update for arrival and/or departure events for a given stop on a
 * trip. Updates can be supplied for both past and future events.
 * The producer is allowed, although not required, to drop past events.
</pre> *
 *
 *
 * Protobuf type `com.example.delhitransit.TripUpdate.StopTimeUpdate`
 */
         class StopTimeUpdate:com.google.protobuf.GeneratedMessageV3.ExtendableMessage<StopTimeUpdate>,
 // @@protoc_insertion_point(message_implements:com.example.delhitransit.TripUpdate.StopTimeUpdate)
                StopTimeUpdateOrBuilder {

private var bitField0_:Int = 0
/**
 * <pre>
 * Must be the same as in stop_times.txt in the corresponding GTFS feed.
</pre> *
 *
 * `optional uint32 stop_sequence = 1;`
 */
            override var stopSequence:Int = 0
private set
@Volatile private var stopId_:Any? = null

/**
 * <pre>
 * Must be the same as in stops.txt in the corresponding GTFS feed.
</pre> *
 *
 * `optional string stop_id = 4;`
 */
            override val stopId:java.lang.String
get() {
val ref = stopId_
if (ref is java.lang.String)
{
return ref
}
else
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
stopId_ = s
}
return s
}
}

/**
 * <pre>
 * Must be the same as in stops.txt in the corresponding GTFS feed.
</pre> *
 *
 * `optional string stop_id = 4;`
 */
            override val stopIdBytes:com.google.protobuf.ByteString
get() {
val ref = stopId_
if (ref is java.lang.String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
stopId_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}
private var arrival_:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent? = null

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeEvent arrival = 2;`
 */
            override val arrival:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent
get() =if (arrival_ == null) com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent.defaultInstance else arrival_

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeEvent arrival = 2;`
 */
            override val arrivalOrBuilder:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEventOrBuilder
get() =if (arrival_ == null) com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent.defaultInstance else arrival_
private var departure_:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent? = null

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeEvent departure = 3;`
 */
            override val departure:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent
get() =if (departure_ == null) com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent.defaultInstance else departure_

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeEvent departure = 3;`
 */
            override val departureOrBuilder:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEventOrBuilder
get() =if (departure_ == null) com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent.defaultInstance else departure_
private var scheduleRelationship_:Int = 0

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeUpdate.ScheduleRelationship schedule_relationship = 5 [default = SCHEDULED];`
 */
            override val scheduleRelationship:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate.ScheduleRelationship
get() {
val result = com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate.ScheduleRelationship.valueOf(scheduleRelationship_)
return result
                ?: com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate.ScheduleRelationship.SCHEDULED
}

private var memoizedIsInitialized:Byte = -1

 // Use StopTimeUpdate.newBuilder() to construct.
            private constructor(builder:com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate, *>) : super(builder) {}

private constructor() {
stopId_ = ""
scheduleRelationship_ = 0
}

 //            @java.lang.Override
 //            @SuppressWarnings({"unused"})
 //            protected java.lang.Object newInstance(
 //                    UnusedPrivateParameter unused) {
 //                return new StopTimeUpdate();
 //            }

            override fun getUnknownFields():com.google.protobuf.UnknownFieldSet {
return this.unknownFields
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
private constructor(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite?) : this() {
if (extensionRegistry == null)
{
throw java.lang.NullPointerException()
}
val mutable_bitField0_ = 0
val unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder()
try
{
var done = false
while (!done)
{
val tag = input.readTag()
when (tag) {
0 -> done = true
8 -> {
bitField0_ = bitField0_ or 0x00000001
stopSequence = input.readUInt32()
}
18 -> {
var subBuilder:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent.Builder? = null
if (bitField0_ and 0x00000004 != 0)
{
subBuilder = arrival_!!.toBuilder()
}
arrival_ = input.readMessage(com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent.PARSER, extensionRegistry)
if (subBuilder != null)
{
subBuilder.mergeFrom(arrival_)
arrival_ = subBuilder.buildPartial()
}
bitField0_ = bitField0_ or 0x00000004
}
26 -> {
var subBuilder:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent.Builder? = null
if (bitField0_ and 0x00000008 != 0)
{
subBuilder = departure_!!.toBuilder()
}
departure_ = input.readMessage(com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent.PARSER, extensionRegistry)
if (subBuilder != null)
{
subBuilder.mergeFrom(departure_)
departure_ = subBuilder.buildPartial()
}
bitField0_ = bitField0_ or 0x00000008
}
34 -> {
val bs = input.readBytes()
bitField0_ = bitField0_ or 0x00000002
stopId_ = bs
}
40 -> {
val rawValue = input.readEnum()
val value = com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate.ScheduleRelationship.valueOf(rawValue)
if (value == null)
{
unknownFields.mergeVarintField(5, rawValue)
}
else
{
bitField0_ = bitField0_ or 0x00000010
scheduleRelationship_ = rawValue
}
}
else -> {
if (!parseUnknownField(
input, unknownFields, extensionRegistry, tag))
{
done = true
}
}
}
}
}
catch (e:com.google.protobuf.InvalidProtocolBufferException) {
throw e.setUnfinishedMessage(this)
}
catch (e:java.io.IOException) {
throw com.google.protobuf.InvalidProtocolBufferException(
e).setUnfinishedMessage(this)
}
finally
{
this.unknownFields = unknownFields.build()
makeExtensionsImmutable()
}
}

override fun internalGetFieldAccessorTable():com.google.protobuf.GeneratedMessageV3.FieldAccessorTable {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TripUpdate_StopTimeUpdate_fieldAccessorTable
.ensureFieldAccessorsInitialized(
com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate::class.java, com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate.Builder::class.java)
}

/**
 * <pre>
 * The relation between this StopTime and the static schedule.
</pre> *
 *
 *
 * Protobuf enum `com.example.delhitransit.TripUpdate.StopTimeUpdate.ScheduleRelationship`
 */
             enum class ScheduleRelationship private constructor(private val value:Int):com.google.protobuf.ProtocolMessageEnum {
/**
 * <pre>
 * The vehicle is proceeding in accordance with its static schedule of
 * stops, although not necessarily according to the times of the schedule.
 * At least one of arrival and departure must be provided. If the schedule
 * for this stop contains both arrival and departure times then so must
 * this update.
</pre> *
 *
 * `SCHEDULED = 0;`
 */
                SCHEDULED(0),
/**
 * <pre>
 * The stop is skipped, i.e., the vehicle will not stop at this stop.
 * Arrival and departure are optional.
</pre> *
 *
 * `SKIPPED = 1;`
 */
                SKIPPED(1),
/**
 * <pre>
 * No data is given for this stop. The main intention for this value is to
 * give the predictions only for part of a trip, i.e., if the last update
 * for a trip has a NO_DATA specifier, then StopTimes for the rest of the
 * stops in the trip are considered to be unspecified as well.
 * Neither arrival nor departure should be supplied.
</pre> *
 *
 * `NO_DATA = 2;`
 */
                NO_DATA(2);


override fun getNumber():Int {
return value
}

override fun getValueDescriptor():com.google.protobuf.Descriptors.EnumValueDescriptor {
return descriptor.values[ordinal]
}

override fun getDescriptorForType():com.google.protobuf.Descriptors.EnumDescriptor {
return descriptor
}

companion object {

/**
 * <pre>
 * The vehicle is proceeding in accordance with its static schedule of
 * stops, although not necessarily according to the times of the schedule.
 * At least one of arrival and departure must be provided. If the schedule
 * for this stop contains both arrival and departure times then so must
 * this update.
</pre> *
 *
 * `SCHEDULED = 0;`
 */
                 val SCHEDULED_VALUE = 0
/**
 * <pre>
 * The stop is skipped, i.e., the vehicle will not stop at this stop.
 * Arrival and departure are optional.
</pre> *
 *
 * `SKIPPED = 1;`
 */
                 val SKIPPED_VALUE = 1
/**
 * <pre>
 * No data is given for this stop. The main intention for this value is to
 * give the predictions only for part of a trip, i.e., if the last update
 * for a trip has a NO_DATA specifier, then StopTimes for the rest of the
 * stops in the trip are considered to be unspecified as well.
 * Neither arrival nor departure should be supplied.
</pre> *
 *
 * `NO_DATA = 2;`
 */
                 val NO_DATA_VALUE = 2


                @Deprecated("Use {@link #forNumber(int)} instead.")
 fun valueOf(value:Int):ScheduleRelationship? {
return forNumber(value)
}

 fun forNumber(value:Int):ScheduleRelationship? {
when (value) {
0 -> return SCHEDULED
1 -> return SKIPPED
2 -> return NO_DATA
else -> return null
}
}

 fun internalGetValueMap():com.google.protobuf.Internal.EnumLiteMap<ScheduleRelationship> {
return internalValueMap
}

private val internalValueMap = Internal.EnumLiteMap<ScheduleRelationship> { number -> ScheduleRelationship.forNumber(number) }

 val descriptor:com.google.protobuf.Descriptors.EnumDescriptor
get() =com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate.descriptor.enumTypes[0]

private val VALUES = values()

 fun valueOf(
desc:com.google.protobuf.Descriptors.EnumValueDescriptor):ScheduleRelationship {
require(desc.type == descriptor) { "EnumValueDescriptor is not for this type." }
return VALUES[desc.index]
}
}

 // @@protoc_insertion_point(enum_scope:com.example.delhitransit.TripUpdate.StopTimeUpdate.ScheduleRelationship)
            }

/**
 * <pre>
 * Must be the same as in stop_times.txt in the corresponding GTFS feed.
</pre> *
 *
 * `optional uint32 stop_sequence = 1;`
 */
            override fun hasStopSequence():Boolean {
return bitField0_ and 0x00000001 != 0
}

/**
 * <pre>
 * Must be the same as in stops.txt in the corresponding GTFS feed.
</pre> *
 *
 * `optional string stop_id = 4;`
 */
            override fun hasStopId():Boolean {
return bitField0_ and 0x00000002 != 0
}

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeEvent arrival = 2;`
 */
            override fun hasArrival():Boolean {
return bitField0_ and 0x00000004 != 0
}

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeEvent departure = 3;`
 */
            override fun hasDeparture():Boolean {
return bitField0_ and 0x00000008 != 0
}

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeUpdate.ScheduleRelationship schedule_relationship = 5 [default = SCHEDULED];`
 */
            override fun hasScheduleRelationship():Boolean {
return bitField0_ and 0x00000010 != 0
}

override fun isInitialized():Boolean {
val isInitialized = memoizedIsInitialized
if (isInitialized.toInt() == 1) return true
if (isInitialized.toInt() == 0) return false

if (hasArrival())
{
if (!arrival.isInitialized)
{
memoizedIsInitialized = 0
return false
}
}
if (hasDeparture())
{
if (!departure.isInitialized)
{
memoizedIsInitialized = 0
return false
}
}
if (!extensionsAreInitialized())
{
memoizedIsInitialized = 0
return false
}
memoizedIsInitialized = 1
return true
}

@Throws(java.io.IOException::class)
override fun writeTo(output:com.google.protobuf.CodedOutputStream) {
val extensionWriter = newExtensionWriter()
if (bitField0_ and 0x00000001 != 0)
{
output.writeUInt32(1, stopSequence)
}
if (bitField0_ and 0x00000004 != 0)
{
output.writeMessage(2, arrival)
}
if (bitField0_ and 0x00000008 != 0)
{
output.writeMessage(3, departure)
}
if (bitField0_ and 0x00000002 != 0)
{
com.google.protobuf.GeneratedMessageV3.writeString(output, 4, stopId_)
}
if (bitField0_ and 0x00000010 != 0)
{
output.writeEnum(5, scheduleRelationship_)
}
extensionWriter.writeUntil(2000, output)
unknownFields.writeTo(output)
}

override fun getSerializedSize():Int {
var size = memoizedSize
if (size != -1) return size

size = 0
if (bitField0_ and 0x00000001 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeUInt32Size(1, stopSequence)
}
if (bitField0_ and 0x00000004 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeMessageSize(2, arrival)
}
if (bitField0_ and 0x00000008 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeMessageSize(3, departure)
}
if (bitField0_ and 0x00000002 != 0)
{
size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, stopId_!!)
}
if (bitField0_ and 0x00000010 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeEnumSize(5, scheduleRelationship_)
}
size += extensionsSerializedSize()
size += unknownFields.serializedSize
memoizedSize = size
return size
}

override fun equals(obj:Any?):Boolean {
if (obj === this)
{
return true
}
if (obj !is com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate)
{
return super.equals(obj)
}
val other = obj as com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate?

if (hasStopSequence() != other!!.hasStopSequence()) return false
if (hasStopSequence())
{
if (stopSequence != other.stopSequence)
return false
}
if (hasStopId() != other.hasStopId()) return false
if (hasStopId())
{
if (stopId != other.stopId)
return false
}
if (hasArrival() != other.hasArrival()) return false
if (hasArrival())
{
if (arrival != other.arrival)
return false
}
if (hasDeparture() != other.hasDeparture()) return false
if (hasDeparture())
{
if (departure != other.departure)
return false
}
if (hasScheduleRelationship() != other.hasScheduleRelationship()) return false
if (hasScheduleRelationship())
{
if (scheduleRelationship_ != other.scheduleRelationship_) return false
}
if (unknownFields != other.unknownFields) return false
return if (extensionFields != other.extensionFields) false else true
}

override fun hashCode():Int {
if (memoizedHashCode != 0)
{
return memoizedHashCode
}
var hash = 41
hash = 19 * hash + descriptor.hashCode()
if (hasStopSequence())
{
hash = 37 * hash + STOP_SEQUENCE_FIELD_NUMBER
hash = 53 * hash + stopSequence
}
if (hasStopId())
{
hash = 37 * hash + STOP_ID_FIELD_NUMBER
hash = 53 * hash + stopId.hashCode()
}
if (hasArrival())
{
hash = 37 * hash + ARRIVAL_FIELD_NUMBER
hash = 53 * hash + arrival.hashCode()
}
if (hasDeparture())
{
hash = 37 * hash + DEPARTURE_FIELD_NUMBER
hash = 53 * hash + departure.hashCode()
}
if (hasScheduleRelationship())
{
hash = 37 * hash + SCHEDULE_RELATIONSHIP_FIELD_NUMBER
hash = 53 * hash + scheduleRelationship_
}
hash = AbstractMessage.hashFields(hash, extensionFields)
hash = 29 * hash + unknownFields.hashCode()
memoizedHashCode = hash
return hash
}

override fun newBuilderForType():Builder {
return newBuilder()
}

override fun toBuilder():Builder {
return if (this === defaultInstance)
Builder()
else
Builder().mergeFrom(this)
}

override fun newBuilderForType(
parent:com.google.protobuf.GeneratedMessageV3.BuilderParent):Builder {
return Builder(parent)
}

/**
 * <pre>
 * Realtime update for arrival and/or departure events for a given stop on a
 * trip. Updates can be supplied for both past and future events.
 * The producer is allowed, although not required, to drop past events.
</pre> *
 *
 *
 * Protobuf type `com.example.delhitransit.TripUpdate.StopTimeUpdate`
 */
             class Builder:com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate, Builder>,
 // @@protoc_insertion_point(builder_implements:com.example.delhitransit.TripUpdate.StopTimeUpdate)
                    com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdateOrBuilder {

private var bitField0_:Int = 0

/**
 * <pre>
 * Must be the same as in stop_times.txt in the corresponding GTFS feed.
</pre> *
 *
 * `optional uint32 stop_sequence = 1;`
 */
                override var stopSequence:Int = 0
private set

private var stopId_:Any? = ""

/**
 * <pre>
 * Must be the same as in stops.txt in the corresponding GTFS feed.
</pre> *
 *
 * `optional string stop_id = 4;`
 */
                override val stopId:java.lang.String
get() {
val ref = stopId_
if (ref !is java.lang.String)
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
stopId_ = s
}
return s
}
else
{
return ref
}
}

/**
 * <pre>
 * Must be the same as in stops.txt in the corresponding GTFS feed.
</pre> *
 *
 * `optional string stop_id = 4;`
 */
                override val stopIdBytes:com.google.protobuf.ByteString
get() {
val ref = stopId_
if (ref is String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
stopId_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}

private var arrival_:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent? = null
private var arrivalBuilder_:com.google.protobuf.SingleFieldBuilderV3<com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent, com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent.Builder, com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEventOrBuilder>? = null

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeEvent arrival = 2;`
 */
                override val arrival:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent
get() =if (arrivalBuilder_ == null) {
            if (arrival_ == null) com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent.defaultInstance else arrival_
        } else {
            arrivalBuilder_!!.message
        }

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeEvent arrival = 2;`
 */
                 val arrivalBuilder:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent.Builder
get() {
bitField0_ = bitField0_ or 0x00000004
onChanged()
return arrivalFieldBuilder.builder
}

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeEvent arrival = 2;`
 */
                override val arrivalOrBuilder:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEventOrBuilder
get() =if (arrivalBuilder_ != null) {
            arrivalBuilder_!!.messageOrBuilder
        } else {
            if (arrival_ == null)
                com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent.defaultInstance
            else
                arrival_
        }

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeEvent arrival = 2;`
 */
                private val arrivalFieldBuilder:com.google.protobuf.SingleFieldBuilderV3<com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent, com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent.Builder, com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEventOrBuilder>
get() {
if (arrivalBuilder_ == null)
{
arrivalBuilder_ = com.google.protobuf.SingleFieldBuilderV3(
arrival,
parentForChildren,
isClean)
arrival_ = null
}
return arrivalBuilder_
}

private var departure_:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent? = null
private var departureBuilder_:com.google.protobuf.SingleFieldBuilderV3<com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent, com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent.Builder, com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEventOrBuilder>? = null

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeEvent departure = 3;`
 */
                override val departure:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent
get() =if (departureBuilder_ == null) {
            if (departure_ == null) com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent.defaultInstance else departure_
        } else {
            departureBuilder_!!.message
        }

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeEvent departure = 3;`
 */
                 val departureBuilder:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent.Builder
get() {
bitField0_ = bitField0_ or 0x00000008
onChanged()
return departureFieldBuilder.builder
}

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeEvent departure = 3;`
 */
                override val departureOrBuilder:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEventOrBuilder
get() =if (departureBuilder_ != null) {
            departureBuilder_!!.messageOrBuilder
        } else {
            if (departure_ == null)
                com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent.defaultInstance
            else
                departure_
        }

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeEvent departure = 3;`
 */
                private val departureFieldBuilder:com.google.protobuf.SingleFieldBuilderV3<com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent, com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent.Builder, com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEventOrBuilder>
get() {
if (departureBuilder_ == null)
{
departureBuilder_ = com.google.protobuf.SingleFieldBuilderV3(
departure,
parentForChildren,
isClean)
departure_ = null
}
return departureBuilder_
}

private var scheduleRelationship_ = 0

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeUpdate.ScheduleRelationship schedule_relationship = 5 [default = SCHEDULED];`
 */
                override val scheduleRelationship:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate.ScheduleRelationship
get() {
val result = com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate.ScheduleRelationship.valueOf(scheduleRelationship_)
return result
                ?: com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate.ScheduleRelationship.SCHEDULED
}

override fun internalGetFieldAccessorTable():com.google.protobuf.GeneratedMessageV3.FieldAccessorTable {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TripUpdate_StopTimeUpdate_fieldAccessorTable
.ensureFieldAccessorsInitialized(
com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate::class.java, com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate.Builder::class.java)
}

 // Construct using com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate.newBuilder()
                private constructor() {
maybeForceBuilderInitialization()
}

private constructor(
parent:com.google.protobuf.GeneratedMessageV3.BuilderParent) : super(parent) {
maybeForceBuilderInitialization()
}

private fun maybeForceBuilderInitialization() {
if (com.google.protobuf.GeneratedMessageV3
.alwaysUseFieldBuilders)
{
arrivalFieldBuilder
departureFieldBuilder
}
}

override fun clear():Builder {
super.clear()
stopSequence = 0
bitField0_ = bitField0_ and 0x00000001.inv()
stopId_ = ""
bitField0_ = bitField0_ and 0x00000002.inv()
if (arrivalBuilder_ == null)
{
arrival_ = null
}
else
{
arrivalBuilder_!!.clear()
}
bitField0_ = bitField0_ and 0x00000004.inv()
if (departureBuilder_ == null)
{
departure_ = null
}
else
{
departureBuilder_!!.clear()
}
bitField0_ = bitField0_ and 0x00000008.inv()
scheduleRelationship_ = 0
bitField0_ = bitField0_ and 0x00000010.inv()
return this
}

override fun getDescriptorForType():com.google.protobuf.Descriptors.Descriptor {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TripUpdate_StopTimeUpdate_descriptor
}

override fun getDefaultInstanceForType():com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate {
return com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate.defaultInstance
}

override fun build():com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate {
val result = buildPartial()
if (!result.isInitialized)
{
throw AbstractMessage.Builder.newUninitializedMessageException(result)
}
return result
}

override fun buildPartial():com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate {
val result = com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate(this)
val from_bitField0_ = bitField0_
var to_bitField0_ = 0
if (from_bitField0_ and 0x00000001 != 0)
{
result.stopSequence = stopSequence
to_bitField0_ = to_bitField0_ or 0x00000001
}
if (from_bitField0_ and 0x00000002 != 0)
{
to_bitField0_ = to_bitField0_ or 0x00000002
}
result.stopId_ = stopId_
if (from_bitField0_ and 0x00000004 != 0)
{
if (arrivalBuilder_ == null)
{
result.arrival_ = arrival_
}
else
{
result.arrival_ = arrivalBuilder_!!.build()
}
to_bitField0_ = to_bitField0_ or 0x00000004
}
if (from_bitField0_ and 0x00000008 != 0)
{
if (departureBuilder_ == null)
{
result.departure_ = departure_
}
else
{
result.departure_ = departureBuilder_!!.build()
}
to_bitField0_ = to_bitField0_ or 0x00000008
}
if (from_bitField0_ and 0x00000010 != 0)
{
to_bitField0_ = to_bitField0_ or 0x00000010
}
result.scheduleRelationship_ = scheduleRelationship_
result.bitField0_ = to_bitField0_
onBuilt()
return result
}

override fun clone():Builder {
return super.clone()
}

override fun setField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
value:Any):Builder {
return super.setField(field, value)
}

override fun clearField(
field:com.google.protobuf.Descriptors.FieldDescriptor):Builder {
return super.clearField(field)
}

override fun clearOneof(
oneof:com.google.protobuf.Descriptors.OneofDescriptor):Builder {
return super.clearOneof(oneof)
}

override fun setRepeatedField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
index:Int, value:Any):Builder {
return super.setRepeatedField(field, index, value)
}

override fun addRepeatedField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
value:Any):Builder {
return super.addRepeatedField(field, value)
}

override fun <Type> setExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate, Type>,
value:Type):Builder {
return super.setExtension(extension, value)
}

override fun <Type> setExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate, List<Type>>,
index:Int, value:Type):Builder {
return super.setExtension(extension, index, value)
}

override fun <Type> addExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate, List<Type>>,
value:Type):Builder {
return super.addExtension(extension, value)
}

override fun <Type> clearExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate, *>):Builder {
return super.clearExtension<Any>(extension)
}

override fun mergeFrom(other:com.google.protobuf.Message):Builder {
if (other is com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate)
{
return mergeFrom(other)
}
else
{
super.mergeFrom(other)
return this
}
}

 fun mergeFrom(other:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate):Builder {
if (other === com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate.defaultInstance)
return this
if (other.hasStopSequence())
{
setStopSequence(other.stopSequence)
}
if (other.hasStopId())
{
bitField0_ = bitField0_ or 0x00000002
stopId_ = other.stopId_
onChanged()
}
if (other.hasArrival())
{
mergeArrival(other.arrival)
}
if (other.hasDeparture())
{
mergeDeparture(other.departure)
}
if (other.hasScheduleRelationship())
{
setScheduleRelationship(other.scheduleRelationship)
}
this.mergeExtensionFields(other)
this.mergeUnknownFields(other.unknownFields)
onChanged()
return this
}

override fun isInitialized():Boolean {
if (hasArrival())
{
if (!arrival.isInitialized)
{
return false
}
}
if (hasDeparture())
{
if (!departure.isInitialized)
{
return false
}
}
return if (!extensionsAreInitialized()) {
            false
        } else true
}

@Throws(java.io.IOException::class)
override fun mergeFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):Builder {
var parsedMessage:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate? = null
try
{
parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry)
}
catch (e:com.google.protobuf.InvalidProtocolBufferException) {
parsedMessage = e.unfinishedMessage as com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate
throw e.unwrapIOException()
}
finally
{
if (parsedMessage != null)
{
mergeFrom(parsedMessage)
}
}
return this
}

/**
 * <pre>
 * Must be the same as in stop_times.txt in the corresponding GTFS feed.
</pre> *
 *
 * `optional uint32 stop_sequence = 1;`
 */
                override fun hasStopSequence():Boolean {
return bitField0_ and 0x00000001 != 0
}

/**
 * <pre>
 * Must be the same as in stop_times.txt in the corresponding GTFS feed.
</pre> *
 *
 * `optional uint32 stop_sequence = 1;`
 */
                 fun setStopSequence(value:Int):Builder {
bitField0_ = bitField0_ or 0x00000001
stopSequence = value
onChanged()
return this
}

/**
 * <pre>
 * Must be the same as in stop_times.txt in the corresponding GTFS feed.
</pre> *
 *
 * `optional uint32 stop_sequence = 1;`
 */
                 fun clearStopSequence():Builder {
bitField0_ = bitField0_ and 0x00000001.inv()
stopSequence = 0
onChanged()
return this
}

/**
 * <pre>
 * Must be the same as in stops.txt in the corresponding GTFS feed.
</pre> *
 *
 * `optional string stop_id = 4;`
 */
                override fun hasStopId():Boolean {
return bitField0_ and 0x00000002 != 0
}

/**
 * <pre>
 * Must be the same as in stops.txt in the corresponding GTFS feed.
</pre> *
 *
 * `optional string stop_id = 4;`
 */
                 fun setStopId(
value:java.lang.String?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000002
stopId_ = value
onChanged()
return this
}

/**
 * <pre>
 * Must be the same as in stops.txt in the corresponding GTFS feed.
</pre> *
 *
 * `optional string stop_id = 4;`
 */
                 fun clearStopId():Builder {
bitField0_ = bitField0_ and 0x00000002.inv()
stopId_ = defaultInstance.stopId
onChanged()
return this
}

/**
 * <pre>
 * Must be the same as in stops.txt in the corresponding GTFS feed.
</pre> *
 *
 * `optional string stop_id = 4;`
 */
                 fun setStopIdBytes(
value:com.google.protobuf.ByteString?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000002
stopId_ = value
onChanged()
return this
}

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeEvent arrival = 2;`
 */
                override fun hasArrival():Boolean {
return bitField0_ and 0x00000004 != 0
}

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeEvent arrival = 2;`
 */
                 fun setArrival(value:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent?):Builder {
if (arrivalBuilder_ == null)
{
if (value == null)
{
throw NullPointerException()
}
arrival_ = value
onChanged()
}
else
{
arrivalBuilder_!!.setMessage(value!!)
}
bitField0_ = bitField0_ or 0x00000004
return this
}

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeEvent arrival = 2;`
 */
                 fun setArrival(
builderForValue:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent.Builder):Builder {
if (arrivalBuilder_ == null)
{
arrival_ = builderForValue.build()
onChanged()
}
else
{
arrivalBuilder_!!.setMessage(builderForValue.build())
}
bitField0_ = bitField0_ or 0x00000004
return this
}

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeEvent arrival = 2;`
 */
                 fun mergeArrival(value:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent):Builder {
if (arrivalBuilder_ == null)
{
if (bitField0_ and 0x00000004 != 0 &&
arrival_ != null &&
arrival_ !== com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent.defaultInstance)
{
arrival_ = com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent.newBuilder(arrival_).mergeFrom(value).buildPartial()
}
else
{
arrival_ = value
}
onChanged()
}
else
{
arrivalBuilder_!!.mergeFrom(value)
}
bitField0_ = bitField0_ or 0x00000004
return this
}

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeEvent arrival = 2;`
 */
                 fun clearArrival():Builder {
if (arrivalBuilder_ == null)
{
arrival_ = null
onChanged()
}
else
{
arrivalBuilder_!!.clear()
}
bitField0_ = bitField0_ and 0x00000004.inv()
return this
}

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeEvent departure = 3;`
 */
                override fun hasDeparture():Boolean {
return bitField0_ and 0x00000008 != 0
}

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeEvent departure = 3;`
 */
                 fun setDeparture(value:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent?):Builder {
if (departureBuilder_ == null)
{
if (value == null)
{
throw NullPointerException()
}
departure_ = value
onChanged()
}
else
{
departureBuilder_!!.setMessage(value!!)
}
bitField0_ = bitField0_ or 0x00000008
return this
}

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeEvent departure = 3;`
 */
                 fun setDeparture(
builderForValue:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent.Builder):Builder {
if (departureBuilder_ == null)
{
departure_ = builderForValue.build()
onChanged()
}
else
{
departureBuilder_!!.setMessage(builderForValue.build())
}
bitField0_ = bitField0_ or 0x00000008
return this
}

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeEvent departure = 3;`
 */
                 fun mergeDeparture(value:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent):Builder {
if (departureBuilder_ == null)
{
if (bitField0_ and 0x00000008 != 0 &&
departure_ != null &&
departure_ !== com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent.defaultInstance)
{
departure_ = com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeEvent.newBuilder(departure_).mergeFrom(value).buildPartial()
}
else
{
departure_ = value
}
onChanged()
}
else
{
departureBuilder_!!.mergeFrom(value)
}
bitField0_ = bitField0_ or 0x00000008
return this
}

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeEvent departure = 3;`
 */
                 fun clearDeparture():Builder {
if (departureBuilder_ == null)
{
departure_ = null
onChanged()
}
else
{
departureBuilder_!!.clear()
}
bitField0_ = bitField0_ and 0x00000008.inv()
return this
}

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeUpdate.ScheduleRelationship schedule_relationship = 5 [default = SCHEDULED];`
 */
                override fun hasScheduleRelationship():Boolean {
return bitField0_ and 0x00000010 != 0
}

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeUpdate.ScheduleRelationship schedule_relationship = 5 [default = SCHEDULED];`
 */
                 fun setScheduleRelationship(value:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate.ScheduleRelationship?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000010
scheduleRelationship_ = value.number
onChanged()
return this
}

/**
 * `optional .com.example.delhitransit.TripUpdate.StopTimeUpdate.ScheduleRelationship schedule_relationship = 5 [default = SCHEDULED];`
 */
                 fun clearScheduleRelationship():Builder {
bitField0_ = bitField0_ and 0x00000010.inv()
scheduleRelationship_ = 0
onChanged()
return this
}

override fun setUnknownFields(
unknownFields:com.google.protobuf.UnknownFieldSet):Builder {
return super.setUnknownFields(unknownFields)
}

override fun mergeUnknownFields(
unknownFields:com.google.protobuf.UnknownFieldSet):Builder {
return super.mergeUnknownFields(unknownFields)
}

companion object {
 val descriptor:com.google.protobuf.Descriptors.Descriptor
get() =com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TripUpdate_StopTimeUpdate_descriptor
}


 // @@protoc_insertion_point(builder_scope:com.example.delhitransit.TripUpdate.StopTimeUpdate)
            }

override fun getParserForType():com.google.protobuf.Parser<StopTimeUpdate> {
return PARSER
}

override fun getDefaultInstanceForType():com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate {
return defaultInstance
}

companion object {
private val serialVersionUID = 0L

 val descriptor:com.google.protobuf.Descriptors.Descriptor
get() =com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TripUpdate_StopTimeUpdate_descriptor
 val STOP_SEQUENCE_FIELD_NUMBER = 1

 val STOP_ID_FIELD_NUMBER = 4

 val ARRIVAL_FIELD_NUMBER = 2

 val DEPARTURE_FIELD_NUMBER = 3

 val SCHEDULE_RELATIONSHIP_FIELD_NUMBER = 5

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:java.nio.ByteBuffer):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:java.nio.ByteBuffer,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:com.google.protobuf.ByteString):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:com.google.protobuf.ByteString,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(data:ByteArray):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:ByteArray,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseFrom(input:java.io.InputStream):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:java.io.InputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseDelimitedFrom(input:java.io.InputStream):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate {
return com.google.protobuf.GeneratedMessageV3
.parseDelimitedWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseDelimitedFrom(
input:java.io.InputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate {
return com.google.protobuf.GeneratedMessageV3
.parseDelimitedWithIOException(PARSER, input, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:com.google.protobuf.CodedInputStream):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input, extensionRegistry)
}

 fun newBuilder():Builder {
return defaultInstance.toBuilder()
}

 fun newBuilder(prototype:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate):Builder {
return defaultInstance.toBuilder().mergeFrom(prototype)
}

 // @@protoc_insertion_point(class_scope:com.example.delhitransit.TripUpdate.StopTimeUpdate)
             val defaultInstance:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate

init{
defaultInstance = com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate()
}

@Deprecated("")
 val PARSER:com.google.protobuf.Parser<StopTimeUpdate> = object:com.google.protobuf.AbstractParser<StopTimeUpdate>() {
@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
override fun parsePartialFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):StopTimeUpdate {
return StopTimeUpdate(input, extensionRegistry)
}
}

 fun parser():com.google.protobuf.Parser<StopTimeUpdate> {
return PARSER
}
}

}

/**
 * <pre>
 * The Trip that this message applies to. There can be at most one
 * TripUpdate entity for each actual trip instance.
 * If there is none, that means there is no prediction information available.
 * It does *not* mean that the trip is progressing according to schedule.
</pre> *
 *
 * `required .com.example.delhitransit.TripDescriptor trip = 1;`
 */
        override fun hasTrip():Boolean {
return bitField0_ and 0x00000001 != 0
}

/**
 * <pre>
 * Additional information on the vehicle that is serving this trip.
</pre> *
 *
 * `optional .com.example.delhitransit.VehicleDescriptor vehicle = 3;`
 */
        override fun hasVehicle():Boolean {
return bitField0_ and 0x00000002 != 0
}

/**
 * <pre>
 * Updates to StopTimes for the trip (both future, i.e., predictions, and in
 * some cases, past ones, i.e., those that already happened).
 * The updates must be sorted by stop_sequence, and apply for all the
 * following stops of the trip up to the next specified one.
 * Example 1:
 * For a trip with 20 stops, a StopTimeUpdate with arrival delay and departure
 * delay of 0 for stop_sequence of the current stop means that the trip is
 * exactly on time.
 * Example 2:
 * For the same trip instance, 3 StopTimeUpdates are provided:
 * - delay of 5 min for stop_sequence 3
 * - delay of 1 min for stop_sequence 8
 * - delay of unspecified duration for stop_sequence 10
 * This will be interpreted as:
 * - stop_sequences 3,4,5,6,7 have delay of 5 min.
 * - stop_sequences 8,9 have delay of 1 min.
 * - stop_sequences 10,... have unknown delay.
</pre> *
 *
 * `repeated .com.example.delhitransit.TripUpdate.StopTimeUpdate stop_time_update = 2;`
 */
        override fun getStopTimeUpdate(index:Int):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate {
return stopTimeUpdate_!![index]
}

/**
 * <pre>
 * Updates to StopTimes for the trip (both future, i.e., predictions, and in
 * some cases, past ones, i.e., those that already happened).
 * The updates must be sorted by stop_sequence, and apply for all the
 * following stops of the trip up to the next specified one.
 * Example 1:
 * For a trip with 20 stops, a StopTimeUpdate with arrival delay and departure
 * delay of 0 for stop_sequence of the current stop means that the trip is
 * exactly on time.
 * Example 2:
 * For the same trip instance, 3 StopTimeUpdates are provided:
 * - delay of 5 min for stop_sequence 3
 * - delay of 1 min for stop_sequence 8
 * - delay of unspecified duration for stop_sequence 10
 * This will be interpreted as:
 * - stop_sequences 3,4,5,6,7 have delay of 5 min.
 * - stop_sequences 8,9 have delay of 1 min.
 * - stop_sequences 10,... have unknown delay.
</pre> *
 *
 * `repeated .com.example.delhitransit.TripUpdate.StopTimeUpdate stop_time_update = 2;`
 */
        override fun getStopTimeUpdateOrBuilder(
index:Int):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdateOrBuilder {
return stopTimeUpdate_!![index]
}

/**
 * <pre>
 * Moment at which the vehicle's real-time progress was measured. In POSIX
 * time (i.e., the number of seconds since January 1st 1970 00:00:00 UTC).
</pre> *
 *
 * `optional uint64 timestamp = 4;`
 */
        override fun hasTimestamp():Boolean {
return bitField0_ and 0x00000004 != 0
}

/**
 * <pre>
 * The current schedule deviation for the trip.  Delay should only be
 * specified when the prediction is given relative to some existing schedule
 * in GTFS.
 * Delay (in seconds) can be positive (meaning that the vehicle is late) or
 * negative (meaning that the vehicle is ahead of schedule). Delay of 0
 * means that the vehicle is exactly on time.
 * Delay information in StopTimeUpdates take precedent of trip-level delay
 * information, such that trip-level delay is only propagated until the next
 * stop along the trip with a StopTimeUpdate delay value specified.
 * Feed providers are strongly encouraged to provide a TripUpdate.timestamp
 * value indicating when the delay value was last updated, in order to
 * evaluate the freshness of the data.
 * NOTE: This field is still experimental, and subject to change. It may be
 * formally adopted in the future.
</pre> *
 *
 * `optional int32 delay = 5;`
 */
        override fun hasDelay():Boolean {
return bitField0_ and 0x00000008 != 0
}

override fun isInitialized():Boolean {
val isInitialized = memoizedIsInitialized
if (isInitialized.toInt() == 1) return true
if (isInitialized.toInt() == 0) return false

if (!hasTrip())
{
memoizedIsInitialized = 0
return false
}
if (!trip.isInitialized)
{
memoizedIsInitialized = 0
return false
}
if (hasVehicle())
{
if (!vehicle.isInitialized)
{
memoizedIsInitialized = 0
return false
}
}
for (i in 0 until stopTimeUpdateCount)
{
if (!getStopTimeUpdate(i).isInitialized)
{
memoizedIsInitialized = 0
return false
}
}
if (!extensionsAreInitialized())
{
memoizedIsInitialized = 0
return false
}
memoizedIsInitialized = 1
return true
}

@Throws(java.io.IOException::class)
override fun writeTo(output:com.google.protobuf.CodedOutputStream) {
val extensionWriter = newExtensionWriter()
if (bitField0_ and 0x00000001 != 0)
{
output.writeMessage(1, trip)
}
for (i in stopTimeUpdate_!!.indices)
{
output.writeMessage(2, stopTimeUpdate_!![i])
}
if (bitField0_ and 0x00000002 != 0)
{
output.writeMessage(3, vehicle)
}
if (bitField0_ and 0x00000004 != 0)
{
output.writeUInt64(4, timestamp)
}
if (bitField0_ and 0x00000008 != 0)
{
output.writeInt32(5, delay)
}
extensionWriter.writeUntil(2000, output)
unknownFields.writeTo(output)
}

override fun getSerializedSize():Int {
var size = memoizedSize
if (size != -1) return size

size = 0
if (bitField0_ and 0x00000001 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeMessageSize(1, trip)
}
for (i in stopTimeUpdate_!!.indices)
{
size += com.google.protobuf.CodedOutputStream
.computeMessageSize(2, stopTimeUpdate_!![i])
}
if (bitField0_ and 0x00000002 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeMessageSize(3, vehicle)
}
if (bitField0_ and 0x00000004 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeUInt64Size(4, timestamp)
}
if (bitField0_ and 0x00000008 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeInt32Size(5, delay)
}
size += extensionsSerializedSize()
size += unknownFields.serializedSize
memoizedSize = size
return size
}

override fun equals(obj:Any?):Boolean {
if (obj === this)
{
return true
}
if (obj !is com.example.delhitransit.GtfsRealtime.TripUpdate)
{
return super.equals(obj)
}
val other = obj as com.example.delhitransit.GtfsRealtime.TripUpdate?

if (hasTrip() != other!!.hasTrip()) return false
if (hasTrip())
{
if (trip != other.trip)
return false
}
if (hasVehicle() != other.hasVehicle()) return false
if (hasVehicle())
{
if (vehicle != other.vehicle)
return false
}
if (stopTimeUpdateList != other.stopTimeUpdateList)
return false
if (hasTimestamp() != other.hasTimestamp()) return false
if (hasTimestamp())
{
if (timestamp != other.timestamp)
return false
}
if (hasDelay() != other.hasDelay()) return false
if (hasDelay())
{
if (delay != other.delay)
return false
}
if (unknownFields != other.unknownFields) return false
return if (extensionFields != other.extensionFields) false else true
}

override fun hashCode():Int {
if (memoizedHashCode != 0)
{
return memoizedHashCode
}
var hash = 41
hash = 19 * hash + descriptor.hashCode()
if (hasTrip())
{
hash = 37 * hash + TRIP_FIELD_NUMBER
hash = 53 * hash + trip.hashCode()
}
if (hasVehicle())
{
hash = 37 * hash + VEHICLE_FIELD_NUMBER
hash = 53 * hash + vehicle.hashCode()
}
if (stopTimeUpdateCount > 0)
{
hash = 37 * hash + STOP_TIME_UPDATE_FIELD_NUMBER
hash = 53 * hash + stopTimeUpdateList!!.hashCode()
}
if (hasTimestamp())
{
hash = 37 * hash + TIMESTAMP_FIELD_NUMBER
hash = 53 * hash + com.google.protobuf.Internal.hashLong(
timestamp)
}
if (hasDelay())
{
hash = 37 * hash + DELAY_FIELD_NUMBER
hash = 53 * hash + delay
}
hash = AbstractMessage.hashFields(hash, extensionFields)
hash = 29 * hash + unknownFields.hashCode()
memoizedHashCode = hash
return hash
}

override fun newBuilderForType():Builder {
return newBuilder()
}

override fun toBuilder():Builder {
return if (this === defaultInstance)
Builder()
else
Builder().mergeFrom(this)
}

override fun newBuilderForType(
parent:com.google.protobuf.GeneratedMessageV3.BuilderParent):Builder {
return Builder(parent)
}

/**
 * <pre>
 * Realtime update of the progress of a vehicle along a trip.
 * Depending on the value of ScheduleRelationship, a TripUpdate can specify:
 * - A trip that proceeds along the schedule.
 * - A trip that proceeds along a route but has no fixed schedule.
 * - A trip that have been added or removed with regard to schedule.
 * The updates can be for future, predicted arrival/departure events, or for
 * past events that already occurred.
 * Normally, updates should get more precise and more certain (see
 * uncertainty below) as the events gets closer to current time.
 * Even if that is not possible, the information for past events should be
 * precise and certain. In particular, if an update points to time in the past
 * but its update's uncertainty is not 0, the client should conclude that the
 * update is a (wrong) prediction and that the trip has not completed yet.
 * Note that the update can describe a trip that is already completed.
 * To this end, it is enough to provide an update for the last stop of the trip.
 * If the time of that is in the past, the client will conclude from that that
 * the whole trip is in the past (it is possible, although inconsequential, to
 * also provide updates for preceding stops).
 * This option is most relevant for a trip that has completed ahead of schedule,
 * but according to the schedule, the trip is still proceeding at the current
 * time. Removing the updates for this trip could make the client assume
 * that the trip is still proceeding.
 * Note that the feed provider is allowed, but not required, to purge past
 * updates - this is one case where this would be practically useful.
</pre> *
 *
 *
 * Protobuf type `com.example.delhitransit.TripUpdate`
 */
         class Builder:com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.example.delhitransit.GtfsRealtime.TripUpdate, Builder>,
 // @@protoc_insertion_point(builder_implements:com.example.delhitransit.TripUpdate)
                com.example.delhitransit.GtfsRealtime.TripUpdateOrBuilder {

private var bitField0_:Int = 0

private var trip_:com.example.delhitransit.GtfsRealtime.TripDescriptor? = null
private var tripBuilder_:com.google.protobuf.SingleFieldBuilderV3<com.example.delhitransit.GtfsRealtime.TripDescriptor, com.example.delhitransit.GtfsRealtime.TripDescriptor.Builder, com.example.delhitransit.GtfsRealtime.TripDescriptorOrBuilder>? = null

/**
 * <pre>
 * The Trip that this message applies to. There can be at most one
 * TripUpdate entity for each actual trip instance.
 * If there is none, that means there is no prediction information available.
 * It does *not* mean that the trip is progressing according to schedule.
</pre> *
 *
 * `required .com.example.delhitransit.TripDescriptor trip = 1;`
 */
            override val trip:com.example.delhitransit.GtfsRealtime.TripDescriptor
get() =if (tripBuilder_ == null) {
            if (trip_ == null) com.example.delhitransit.GtfsRealtime.TripDescriptor.defaultInstance else trip_
        } else {
            tripBuilder_!!.message
        }

/**
 * <pre>
 * The Trip that this message applies to. There can be at most one
 * TripUpdate entity for each actual trip instance.
 * If there is none, that means there is no prediction information available.
 * It does *not* mean that the trip is progressing according to schedule.
</pre> *
 *
 * `required .com.example.delhitransit.TripDescriptor trip = 1;`
 */
             val tripBuilder:com.example.delhitransit.GtfsRealtime.TripDescriptor.Builder
get() {
bitField0_ = bitField0_ or 0x00000001
onChanged()
return tripFieldBuilder.builder
}

/**
 * <pre>
 * The Trip that this message applies to. There can be at most one
 * TripUpdate entity for each actual trip instance.
 * If there is none, that means there is no prediction information available.
 * It does *not* mean that the trip is progressing according to schedule.
</pre> *
 *
 * `required .com.example.delhitransit.TripDescriptor trip = 1;`
 */
            override val tripOrBuilder:com.example.delhitransit.GtfsRealtime.TripDescriptorOrBuilder
get() =if (tripBuilder_ != null) {
            tripBuilder_!!.messageOrBuilder
        } else {
            if (trip_ == null)
                com.example.delhitransit.GtfsRealtime.TripDescriptor.defaultInstance
            else
                trip_
        }

/**
 * <pre>
 * The Trip that this message applies to. There can be at most one
 * TripUpdate entity for each actual trip instance.
 * If there is none, that means there is no prediction information available.
 * It does *not* mean that the trip is progressing according to schedule.
</pre> *
 *
 * `required .com.example.delhitransit.TripDescriptor trip = 1;`
 */
            private val tripFieldBuilder:com.google.protobuf.SingleFieldBuilderV3<com.example.delhitransit.GtfsRealtime.TripDescriptor, com.example.delhitransit.GtfsRealtime.TripDescriptor.Builder, com.example.delhitransit.GtfsRealtime.TripDescriptorOrBuilder>
get() {
if (tripBuilder_ == null)
{
tripBuilder_ = com.google.protobuf.SingleFieldBuilderV3(
trip,
parentForChildren,
isClean)
trip_ = null
}
return tripBuilder_
}

private var vehicle_:com.example.delhitransit.GtfsRealtime.VehicleDescriptor? = null
private var vehicleBuilder_:com.google.protobuf.SingleFieldBuilderV3<com.example.delhitransit.GtfsRealtime.VehicleDescriptor, com.example.delhitransit.GtfsRealtime.VehicleDescriptor.Builder, com.example.delhitransit.GtfsRealtime.VehicleDescriptorOrBuilder>? = null

/**
 * <pre>
 * Additional information on the vehicle that is serving this trip.
</pre> *
 *
 * `optional .com.example.delhitransit.VehicleDescriptor vehicle = 3;`
 */
            override val vehicle:com.example.delhitransit.GtfsRealtime.VehicleDescriptor
get() =if (vehicleBuilder_ == null) {
            if (vehicle_ == null) com.example.delhitransit.GtfsRealtime.VehicleDescriptor.defaultInstance else vehicle_
        } else {
            vehicleBuilder_!!.message
        }

/**
 * <pre>
 * Additional information on the vehicle that is serving this trip.
</pre> *
 *
 * `optional .com.example.delhitransit.VehicleDescriptor vehicle = 3;`
 */
             val vehicleBuilder:com.example.delhitransit.GtfsRealtime.VehicleDescriptor.Builder
get() {
bitField0_ = bitField0_ or 0x00000002
onChanged()
return vehicleFieldBuilder.builder
}

/**
 * <pre>
 * Additional information on the vehicle that is serving this trip.
</pre> *
 *
 * `optional .com.example.delhitransit.VehicleDescriptor vehicle = 3;`
 */
            override val vehicleOrBuilder:com.example.delhitransit.GtfsRealtime.VehicleDescriptorOrBuilder
get() =if (vehicleBuilder_ != null) {
            vehicleBuilder_!!.messageOrBuilder
        } else {
            if (vehicle_ == null)
                com.example.delhitransit.GtfsRealtime.VehicleDescriptor.defaultInstance
            else
                vehicle_
        }

/**
 * <pre>
 * Additional information on the vehicle that is serving this trip.
</pre> *
 *
 * `optional .com.example.delhitransit.VehicleDescriptor vehicle = 3;`
 */
            private val vehicleFieldBuilder:com.google.protobuf.SingleFieldBuilderV3<com.example.delhitransit.GtfsRealtime.VehicleDescriptor, com.example.delhitransit.GtfsRealtime.VehicleDescriptor.Builder, com.example.delhitransit.GtfsRealtime.VehicleDescriptorOrBuilder>
get() {
if (vehicleBuilder_ == null)
{
vehicleBuilder_ = com.google.protobuf.SingleFieldBuilderV3(
vehicle,
parentForChildren,
isClean)
vehicle_ = null
}
return vehicleBuilder_
}

private var stopTimeUpdate_:MutableList<com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate>? = emptyList<com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate>()

private var stopTimeUpdateBuilder_:com.google.protobuf.RepeatedFieldBuilderV3<com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate, com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate.Builder, com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdateOrBuilder>? = null

/**
 * <pre>
 * Updates to StopTimes for the trip (both future, i.e., predictions, and in
 * some cases, past ones, i.e., those that already happened).
 * The updates must be sorted by stop_sequence, and apply for all the
 * following stops of the trip up to the next specified one.
 * Example 1:
 * For a trip with 20 stops, a StopTimeUpdate with arrival delay and departure
 * delay of 0 for stop_sequence of the current stop means that the trip is
 * exactly on time.
 * Example 2:
 * For the same trip instance, 3 StopTimeUpdates are provided:
 * - delay of 5 min for stop_sequence 3
 * - delay of 1 min for stop_sequence 8
 * - delay of unspecified duration for stop_sequence 10
 * This will be interpreted as:
 * - stop_sequences 3,4,5,6,7 have delay of 5 min.
 * - stop_sequences 8,9 have delay of 1 min.
 * - stop_sequences 10,... have unknown delay.
</pre> *
 *
 * `repeated .com.example.delhitransit.TripUpdate.StopTimeUpdate stop_time_update = 2;`
 */
            override val stopTimeUpdateList:List<com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate>
get() =if (stopTimeUpdateBuilder_ == null) {
            java.util.Collections.unmodifiableList(stopTimeUpdate_!!)
        } else {
            stopTimeUpdateBuilder_!!.messageList
        }

/**
 * <pre>
 * Updates to StopTimes for the trip (both future, i.e., predictions, and in
 * some cases, past ones, i.e., those that already happened).
 * The updates must be sorted by stop_sequence, and apply for all the
 * following stops of the trip up to the next specified one.
 * Example 1:
 * For a trip with 20 stops, a StopTimeUpdate with arrival delay and departure
 * delay of 0 for stop_sequence of the current stop means that the trip is
 * exactly on time.
 * Example 2:
 * For the same trip instance, 3 StopTimeUpdates are provided:
 * - delay of 5 min for stop_sequence 3
 * - delay of 1 min for stop_sequence 8
 * - delay of unspecified duration for stop_sequence 10
 * This will be interpreted as:
 * - stop_sequences 3,4,5,6,7 have delay of 5 min.
 * - stop_sequences 8,9 have delay of 1 min.
 * - stop_sequences 10,... have unknown delay.
</pre> *
 *
 * `repeated .com.example.delhitransit.TripUpdate.StopTimeUpdate stop_time_update = 2;`
 */
            override val stopTimeUpdateCount:Int
get() =if (stopTimeUpdateBuilder_ == null) {
            stopTimeUpdate_!!.size
        } else {
            stopTimeUpdateBuilder_!!.count
        }

/**
 * <pre>
 * Updates to StopTimes for the trip (both future, i.e., predictions, and in
 * some cases, past ones, i.e., those that already happened).
 * The updates must be sorted by stop_sequence, and apply for all the
 * following stops of the trip up to the next specified one.
 * Example 1:
 * For a trip with 20 stops, a StopTimeUpdate with arrival delay and departure
 * delay of 0 for stop_sequence of the current stop means that the trip is
 * exactly on time.
 * Example 2:
 * For the same trip instance, 3 StopTimeUpdates are provided:
 * - delay of 5 min for stop_sequence 3
 * - delay of 1 min for stop_sequence 8
 * - delay of unspecified duration for stop_sequence 10
 * This will be interpreted as:
 * - stop_sequences 3,4,5,6,7 have delay of 5 min.
 * - stop_sequences 8,9 have delay of 1 min.
 * - stop_sequences 10,... have unknown delay.
</pre> *
 *
 * `repeated .com.example.delhitransit.TripUpdate.StopTimeUpdate stop_time_update = 2;`
 */
            override val stopTimeUpdateOrBuilderList:List< com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdateOrBuilder>
get() =if (stopTimeUpdateBuilder_ != null) {
            stopTimeUpdateBuilder_!!.messageOrBuilderList
        } else {
            java.util.Collections.unmodifiableList(stopTimeUpdate_!!)
        }

/**
 * <pre>
 * Updates to StopTimes for the trip (both future, i.e., predictions, and in
 * some cases, past ones, i.e., those that already happened).
 * The updates must be sorted by stop_sequence, and apply for all the
 * following stops of the trip up to the next specified one.
 * Example 1:
 * For a trip with 20 stops, a StopTimeUpdate with arrival delay and departure
 * delay of 0 for stop_sequence of the current stop means that the trip is
 * exactly on time.
 * Example 2:
 * For the same trip instance, 3 StopTimeUpdates are provided:
 * - delay of 5 min for stop_sequence 3
 * - delay of 1 min for stop_sequence 8
 * - delay of unspecified duration for stop_sequence 10
 * This will be interpreted as:
 * - stop_sequences 3,4,5,6,7 have delay of 5 min.
 * - stop_sequences 8,9 have delay of 1 min.
 * - stop_sequences 10,... have unknown delay.
</pre> *
 *
 * `repeated .com.example.delhitransit.TripUpdate.StopTimeUpdate stop_time_update = 2;`
 */
             val stopTimeUpdateBuilderList:List<com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate.Builder>
get() =stopTimeUpdateFieldBuilder.builderList

private val stopTimeUpdateFieldBuilder:com.google.protobuf.RepeatedFieldBuilderV3<com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate, com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate.Builder, com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdateOrBuilder>
get() {
if (stopTimeUpdateBuilder_ == null)
{
stopTimeUpdateBuilder_ = com.google.protobuf.RepeatedFieldBuilderV3(
stopTimeUpdate_,
bitField0_ and 0x00000004 != 0,
parentForChildren,
isClean)
stopTimeUpdate_ = null
}
return stopTimeUpdateBuilder_
}

/**
 * <pre>
 * Moment at which the vehicle's real-time progress was measured. In POSIX
 * time (i.e., the number of seconds since January 1st 1970 00:00:00 UTC).
</pre> *
 *
 * `optional uint64 timestamp = 4;`
 */
            override var timestamp:Long = 0
private set

/**
 * <pre>
 * The current schedule deviation for the trip.  Delay should only be
 * specified when the prediction is given relative to some existing schedule
 * in GTFS.
 * Delay (in seconds) can be positive (meaning that the vehicle is late) or
 * negative (meaning that the vehicle is ahead of schedule). Delay of 0
 * means that the vehicle is exactly on time.
 * Delay information in StopTimeUpdates take precedent of trip-level delay
 * information, such that trip-level delay is only propagated until the next
 * stop along the trip with a StopTimeUpdate delay value specified.
 * Feed providers are strongly encouraged to provide a TripUpdate.timestamp
 * value indicating when the delay value was last updated, in order to
 * evaluate the freshness of the data.
 * NOTE: This field is still experimental, and subject to change. It may be
 * formally adopted in the future.
</pre> *
 *
 * `optional int32 delay = 5;`
 */
            override var delay:Int = 0
private set

override fun internalGetFieldAccessorTable():com.google.protobuf.GeneratedMessageV3.FieldAccessorTable {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TripUpdate_fieldAccessorTable
.ensureFieldAccessorsInitialized(
com.example.delhitransit.GtfsRealtime.TripUpdate::class.java, com.example.delhitransit.GtfsRealtime.TripUpdate.Builder::class.java)
}

 // Construct using com.example.delhitransit.GtfsRealtime.TripUpdate.newBuilder()
            private constructor() {
maybeForceBuilderInitialization()
}

private constructor(
parent:com.google.protobuf.GeneratedMessageV3.BuilderParent) : super(parent) {
maybeForceBuilderInitialization()
}

private fun maybeForceBuilderInitialization() {
if (com.google.protobuf.GeneratedMessageV3
.alwaysUseFieldBuilders)
{
tripFieldBuilder
vehicleFieldBuilder
stopTimeUpdateFieldBuilder
}
}

override fun clear():Builder {
super.clear()
if (tripBuilder_ == null)
{
trip_ = null
}
else
{
tripBuilder_!!.clear()
}
bitField0_ = bitField0_ and 0x00000001.inv()
if (vehicleBuilder_ == null)
{
vehicle_ = null
}
else
{
vehicleBuilder_!!.clear()
}
bitField0_ = bitField0_ and 0x00000002.inv()
if (stopTimeUpdateBuilder_ == null)
{
stopTimeUpdate_ = emptyList<StopTimeUpdate>()
bitField0_ = bitField0_ and 0x00000004.inv()
}
else
{
stopTimeUpdateBuilder_!!.clear()
}
timestamp = 0L
bitField0_ = bitField0_ and 0x00000008.inv()
delay = 0
bitField0_ = bitField0_ and 0x00000010.inv()
return this
}

override fun getDescriptorForType():com.google.protobuf.Descriptors.Descriptor {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TripUpdate_descriptor
}

override fun getDefaultInstanceForType():com.example.delhitransit.GtfsRealtime.TripUpdate {
return com.example.delhitransit.GtfsRealtime.TripUpdate.defaultInstance
}

override fun build():com.example.delhitransit.GtfsRealtime.TripUpdate {
val result = buildPartial()
if (!result.isInitialized)
{
throw AbstractMessage.Builder.newUninitializedMessageException(result)
}
return result
}

override fun buildPartial():com.example.delhitransit.GtfsRealtime.TripUpdate {
val result = com.example.delhitransit.GtfsRealtime.TripUpdate(this)
val from_bitField0_ = bitField0_
var to_bitField0_ = 0
if (from_bitField0_ and 0x00000001 != 0)
{
if (tripBuilder_ == null)
{
result.trip_ = trip_
}
else
{
result.trip_ = tripBuilder_!!.build()
}
to_bitField0_ = to_bitField0_ or 0x00000001
}
if (from_bitField0_ and 0x00000002 != 0)
{
if (vehicleBuilder_ == null)
{
result.vehicle_ = vehicle_
}
else
{
result.vehicle_ = vehicleBuilder_!!.build()
}
to_bitField0_ = to_bitField0_ or 0x00000002
}
if (stopTimeUpdateBuilder_ == null)
{
if (bitField0_ and 0x00000004 != 0)
{
stopTimeUpdate_ = java.util.Collections.unmodifiableList(stopTimeUpdate_!!)
bitField0_ = bitField0_ and 0x00000004.inv()
}
result.stopTimeUpdate_ = stopTimeUpdate_
}
else
{
result.stopTimeUpdate_ = stopTimeUpdateBuilder_!!.build()
}
if (from_bitField0_ and 0x00000008 != 0)
{
result.timestamp = timestamp
to_bitField0_ = to_bitField0_ or 0x00000004
}
if (from_bitField0_ and 0x00000010 != 0)
{
result.delay = delay
to_bitField0_ = to_bitField0_ or 0x00000008
}
result.bitField0_ = to_bitField0_
onBuilt()
return result
}

override fun clone():Builder {
return super.clone()
}

override fun setField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
value:Any):Builder {
return super.setField(field, value)
}

override fun clearField(
field:com.google.protobuf.Descriptors.FieldDescriptor):Builder {
return super.clearField(field)
}

override fun clearOneof(
oneof:com.google.protobuf.Descriptors.OneofDescriptor):Builder {
return super.clearOneof(oneof)
}

override fun setRepeatedField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
index:Int, value:Any):Builder {
return super.setRepeatedField(field, index, value)
}

override fun addRepeatedField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
value:Any):Builder {
return super.addRepeatedField(field, value)
}

override fun <Type> setExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.TripUpdate, Type>,
value:Type):Builder {
return super.setExtension(extension, value)
}

override fun <Type> setExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.TripUpdate, List<Type>>,
index:Int, value:Type):Builder {
return super.setExtension(extension, index, value)
}

override fun <Type> addExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.TripUpdate, List<Type>>,
value:Type):Builder {
return super.addExtension(extension, value)
}

override fun <Type> clearExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.TripUpdate, *>):Builder {
return super.clearExtension<Any>(extension)
}

override fun mergeFrom(other:com.google.protobuf.Message):Builder {
if (other is com.example.delhitransit.GtfsRealtime.TripUpdate)
{
return mergeFrom(other)
}
else
{
super.mergeFrom(other)
return this
}
}

 fun mergeFrom(other:com.example.delhitransit.GtfsRealtime.TripUpdate?):Builder {
if (other === com.example.delhitransit.GtfsRealtime.TripUpdate.defaultInstance)
return this
if (other!!.hasTrip())
{
mergeTrip(other.trip)
}
if (other.hasVehicle())
{
mergeVehicle(other.vehicle)
}
if (stopTimeUpdateBuilder_ == null)
{
if (!other.stopTimeUpdate_!!.isEmpty())
{
if (stopTimeUpdate_!!.isEmpty())
{
stopTimeUpdate_ = other.stopTimeUpdate_
bitField0_ = bitField0_ and 0x00000004.inv()
}
else
{
ensureStopTimeUpdateIsMutable()
stopTimeUpdate_!!.addAll(other.stopTimeUpdate_!!)
}
onChanged()
}
}
else
{
if (!other.stopTimeUpdate_!!.isEmpty())
{
if (stopTimeUpdateBuilder_!!.isEmpty)
{
stopTimeUpdateBuilder_!!.dispose()
stopTimeUpdateBuilder_ = null
stopTimeUpdate_ = other.stopTimeUpdate_
bitField0_ = bitField0_ and 0x00000004.inv()
stopTimeUpdateBuilder_ = if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders)
stopTimeUpdateFieldBuilder
else
null
}
else
{
stopTimeUpdateBuilder_!!.addAllMessages(other.stopTimeUpdate_!!)
}
}
}
if (other.hasTimestamp())
{
setTimestamp(other.timestamp)
}
if (other.hasDelay())
{
setDelay(other.delay)
}
this.mergeExtensionFields(other)
this.mergeUnknownFields(other.unknownFields)
onChanged()
return this
}

override fun isInitialized():Boolean {
if (!hasTrip())
{
return false
}
if (!trip.isInitialized)
{
return false
}
if (hasVehicle())
{
if (!vehicle.isInitialized)
{
return false
}
}
for (i in 0 until stopTimeUpdateCount)
{
if (!getStopTimeUpdate(i).isInitialized)
{
return false
}
}
return if (!extensionsAreInitialized()) {
            false
        } else true
}

@Throws(java.io.IOException::class)
override fun mergeFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):Builder {
var parsedMessage:com.example.delhitransit.GtfsRealtime.TripUpdate? = null
try
{
parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry)
}
catch (e:com.google.protobuf.InvalidProtocolBufferException) {
parsedMessage = e.unfinishedMessage as com.example.delhitransit.GtfsRealtime.TripUpdate
throw e.unwrapIOException()
}
finally
{
if (parsedMessage != null)
{
mergeFrom(parsedMessage)
}
}
return this
}

/**
 * <pre>
 * The Trip that this message applies to. There can be at most one
 * TripUpdate entity for each actual trip instance.
 * If there is none, that means there is no prediction information available.
 * It does *not* mean that the trip is progressing according to schedule.
</pre> *
 *
 * `required .com.example.delhitransit.TripDescriptor trip = 1;`
 */
            override fun hasTrip():Boolean {
return bitField0_ and 0x00000001 != 0
}

/**
 * <pre>
 * The Trip that this message applies to. There can be at most one
 * TripUpdate entity for each actual trip instance.
 * If there is none, that means there is no prediction information available.
 * It does *not* mean that the trip is progressing according to schedule.
</pre> *
 *
 * `required .com.example.delhitransit.TripDescriptor trip = 1;`
 */
             fun setTrip(value:com.example.delhitransit.GtfsRealtime.TripDescriptor?):Builder {
if (tripBuilder_ == null)
{
if (value == null)
{
throw NullPointerException()
}
trip_ = value
onChanged()
}
else
{
tripBuilder_!!.setMessage(value!!)
}
bitField0_ = bitField0_ or 0x00000001
return this
}

/**
 * <pre>
 * The Trip that this message applies to. There can be at most one
 * TripUpdate entity for each actual trip instance.
 * If there is none, that means there is no prediction information available.
 * It does *not* mean that the trip is progressing according to schedule.
</pre> *
 *
 * `required .com.example.delhitransit.TripDescriptor trip = 1;`
 */
             fun setTrip(
builderForValue:com.example.delhitransit.GtfsRealtime.TripDescriptor.Builder):Builder {
if (tripBuilder_ == null)
{
trip_ = builderForValue.build()
onChanged()
}
else
{
tripBuilder_!!.setMessage(builderForValue.build())
}
bitField0_ = bitField0_ or 0x00000001
return this
}

/**
 * <pre>
 * The Trip that this message applies to. There can be at most one
 * TripUpdate entity for each actual trip instance.
 * If there is none, that means there is no prediction information available.
 * It does *not* mean that the trip is progressing according to schedule.
</pre> *
 *
 * `required .com.example.delhitransit.TripDescriptor trip = 1;`
 */
             fun mergeTrip(value:com.example.delhitransit.GtfsRealtime.TripDescriptor):Builder {
if (tripBuilder_ == null)
{
if (bitField0_ and 0x00000001 != 0 &&
trip_ != null &&
trip_ !== com.example.delhitransit.GtfsRealtime.TripDescriptor.defaultInstance)
{
trip_ = com.example.delhitransit.GtfsRealtime.TripDescriptor.newBuilder(trip_).mergeFrom(value).buildPartial()
}
else
{
trip_ = value
}
onChanged()
}
else
{
tripBuilder_!!.mergeFrom(value)
}
bitField0_ = bitField0_ or 0x00000001
return this
}

/**
 * <pre>
 * The Trip that this message applies to. There can be at most one
 * TripUpdate entity for each actual trip instance.
 * If there is none, that means there is no prediction information available.
 * It does *not* mean that the trip is progressing according to schedule.
</pre> *
 *
 * `required .com.example.delhitransit.TripDescriptor trip = 1;`
 */
             fun clearTrip():Builder {
if (tripBuilder_ == null)
{
trip_ = null
onChanged()
}
else
{
tripBuilder_!!.clear()
}
bitField0_ = bitField0_ and 0x00000001.inv()
return this
}

/**
 * <pre>
 * Additional information on the vehicle that is serving this trip.
</pre> *
 *
 * `optional .com.example.delhitransit.VehicleDescriptor vehicle = 3;`
 */
            override fun hasVehicle():Boolean {
return bitField0_ and 0x00000002 != 0
}

/**
 * <pre>
 * Additional information on the vehicle that is serving this trip.
</pre> *
 *
 * `optional .com.example.delhitransit.VehicleDescriptor vehicle = 3;`
 */
             fun setVehicle(value:com.example.delhitransit.GtfsRealtime.VehicleDescriptor?):Builder {
if (vehicleBuilder_ == null)
{
if (value == null)
{
throw NullPointerException()
}
vehicle_ = value
onChanged()
}
else
{
vehicleBuilder_!!.setMessage(value!!)
}
bitField0_ = bitField0_ or 0x00000002
return this
}

/**
 * <pre>
 * Additional information on the vehicle that is serving this trip.
</pre> *
 *
 * `optional .com.example.delhitransit.VehicleDescriptor vehicle = 3;`
 */
             fun setVehicle(
builderForValue:com.example.delhitransit.GtfsRealtime.VehicleDescriptor.Builder):Builder {
if (vehicleBuilder_ == null)
{
vehicle_ = builderForValue.build()
onChanged()
}
else
{
vehicleBuilder_!!.setMessage(builderForValue.build())
}
bitField0_ = bitField0_ or 0x00000002
return this
}

/**
 * <pre>
 * Additional information on the vehicle that is serving this trip.
</pre> *
 *
 * `optional .com.example.delhitransit.VehicleDescriptor vehicle = 3;`
 */
             fun mergeVehicle(value:com.example.delhitransit.GtfsRealtime.VehicleDescriptor):Builder {
if (vehicleBuilder_ == null)
{
if (bitField0_ and 0x00000002 != 0 &&
vehicle_ != null &&
vehicle_ !== com.example.delhitransit.GtfsRealtime.VehicleDescriptor.defaultInstance)
{
vehicle_ = com.example.delhitransit.GtfsRealtime.VehicleDescriptor.newBuilder(vehicle_).mergeFrom(value).buildPartial()
}
else
{
vehicle_ = value
}
onChanged()
}
else
{
vehicleBuilder_!!.mergeFrom(value)
}
bitField0_ = bitField0_ or 0x00000002
return this
}

/**
 * <pre>
 * Additional information on the vehicle that is serving this trip.
</pre> *
 *
 * `optional .com.example.delhitransit.VehicleDescriptor vehicle = 3;`
 */
             fun clearVehicle():Builder {
if (vehicleBuilder_ == null)
{
vehicle_ = null
onChanged()
}
else
{
vehicleBuilder_!!.clear()
}
bitField0_ = bitField0_ and 0x00000002.inv()
return this
}

private fun ensureStopTimeUpdateIsMutable() {
if (bitField0_ and 0x00000004 == 0)
{
stopTimeUpdate_ = java.util.ArrayList(stopTimeUpdate_!!)
bitField0_ = bitField0_ or 0x00000004
}
}

/**
 * <pre>
 * Updates to StopTimes for the trip (both future, i.e., predictions, and in
 * some cases, past ones, i.e., those that already happened).
 * The updates must be sorted by stop_sequence, and apply for all the
 * following stops of the trip up to the next specified one.
 * Example 1:
 * For a trip with 20 stops, a StopTimeUpdate with arrival delay and departure
 * delay of 0 for stop_sequence of the current stop means that the trip is
 * exactly on time.
 * Example 2:
 * For the same trip instance, 3 StopTimeUpdates are provided:
 * - delay of 5 min for stop_sequence 3
 * - delay of 1 min for stop_sequence 8
 * - delay of unspecified duration for stop_sequence 10
 * This will be interpreted as:
 * - stop_sequences 3,4,5,6,7 have delay of 5 min.
 * - stop_sequences 8,9 have delay of 1 min.
 * - stop_sequences 10,... have unknown delay.
</pre> *
 *
 * `repeated .com.example.delhitransit.TripUpdate.StopTimeUpdate stop_time_update = 2;`
 */
            override fun getStopTimeUpdate(index:Int):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate {
return if (stopTimeUpdateBuilder_ == null) {
            stopTimeUpdate_!![index]
        } else {
            stopTimeUpdateBuilder_!!.getMessage(index)
        }
}

/**
 * <pre>
 * Updates to StopTimes for the trip (both future, i.e., predictions, and in
 * some cases, past ones, i.e., those that already happened).
 * The updates must be sorted by stop_sequence, and apply for all the
 * following stops of the trip up to the next specified one.
 * Example 1:
 * For a trip with 20 stops, a StopTimeUpdate with arrival delay and departure
 * delay of 0 for stop_sequence of the current stop means that the trip is
 * exactly on time.
 * Example 2:
 * For the same trip instance, 3 StopTimeUpdates are provided:
 * - delay of 5 min for stop_sequence 3
 * - delay of 1 min for stop_sequence 8
 * - delay of unspecified duration for stop_sequence 10
 * This will be interpreted as:
 * - stop_sequences 3,4,5,6,7 have delay of 5 min.
 * - stop_sequences 8,9 have delay of 1 min.
 * - stop_sequences 10,... have unknown delay.
</pre> *
 *
 * `repeated .com.example.delhitransit.TripUpdate.StopTimeUpdate stop_time_update = 2;`
 */
             fun setStopTimeUpdate(
index:Int, value:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate?):Builder {
if (stopTimeUpdateBuilder_ == null)
{
if (value == null)
{
throw NullPointerException()
}
ensureStopTimeUpdateIsMutable()
stopTimeUpdate_!![index] = value
onChanged()
}
else
{
stopTimeUpdateBuilder_!!.setMessage(index, value!!)
}
return this
}

/**
 * <pre>
 * Updates to StopTimes for the trip (both future, i.e., predictions, and in
 * some cases, past ones, i.e., those that already happened).
 * The updates must be sorted by stop_sequence, and apply for all the
 * following stops of the trip up to the next specified one.
 * Example 1:
 * For a trip with 20 stops, a StopTimeUpdate with arrival delay and departure
 * delay of 0 for stop_sequence of the current stop means that the trip is
 * exactly on time.
 * Example 2:
 * For the same trip instance, 3 StopTimeUpdates are provided:
 * - delay of 5 min for stop_sequence 3
 * - delay of 1 min for stop_sequence 8
 * - delay of unspecified duration for stop_sequence 10
 * This will be interpreted as:
 * - stop_sequences 3,4,5,6,7 have delay of 5 min.
 * - stop_sequences 8,9 have delay of 1 min.
 * - stop_sequences 10,... have unknown delay.
</pre> *
 *
 * `repeated .com.example.delhitransit.TripUpdate.StopTimeUpdate stop_time_update = 2;`
 */
             fun setStopTimeUpdate(
index:Int, builderForValue:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate.Builder):Builder {
if (stopTimeUpdateBuilder_ == null)
{
ensureStopTimeUpdateIsMutable()
stopTimeUpdate_!![index] = builderForValue.build()
onChanged()
}
else
{
stopTimeUpdateBuilder_!!.setMessage(index, builderForValue.build())
}
return this
}

/**
 * <pre>
 * Updates to StopTimes for the trip (both future, i.e., predictions, and in
 * some cases, past ones, i.e., those that already happened).
 * The updates must be sorted by stop_sequence, and apply for all the
 * following stops of the trip up to the next specified one.
 * Example 1:
 * For a trip with 20 stops, a StopTimeUpdate with arrival delay and departure
 * delay of 0 for stop_sequence of the current stop means that the trip is
 * exactly on time.
 * Example 2:
 * For the same trip instance, 3 StopTimeUpdates are provided:
 * - delay of 5 min for stop_sequence 3
 * - delay of 1 min for stop_sequence 8
 * - delay of unspecified duration for stop_sequence 10
 * This will be interpreted as:
 * - stop_sequences 3,4,5,6,7 have delay of 5 min.
 * - stop_sequences 8,9 have delay of 1 min.
 * - stop_sequences 10,... have unknown delay.
</pre> *
 *
 * `repeated .com.example.delhitransit.TripUpdate.StopTimeUpdate stop_time_update = 2;`
 */
             fun addStopTimeUpdate(value:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate?):Builder {
if (stopTimeUpdateBuilder_ == null)
{
if (value == null)
{
throw NullPointerException()
}
ensureStopTimeUpdateIsMutable()
stopTimeUpdate_!!.add(value)
onChanged()
}
else
{
stopTimeUpdateBuilder_!!.addMessage(value!!)
}
return this
}

/**
 * <pre>
 * Updates to StopTimes for the trip (both future, i.e., predictions, and in
 * some cases, past ones, i.e., those that already happened).
 * The updates must be sorted by stop_sequence, and apply for all the
 * following stops of the trip up to the next specified one.
 * Example 1:
 * For a trip with 20 stops, a StopTimeUpdate with arrival delay and departure
 * delay of 0 for stop_sequence of the current stop means that the trip is
 * exactly on time.
 * Example 2:
 * For the same trip instance, 3 StopTimeUpdates are provided:
 * - delay of 5 min for stop_sequence 3
 * - delay of 1 min for stop_sequence 8
 * - delay of unspecified duration for stop_sequence 10
 * This will be interpreted as:
 * - stop_sequences 3,4,5,6,7 have delay of 5 min.
 * - stop_sequences 8,9 have delay of 1 min.
 * - stop_sequences 10,... have unknown delay.
</pre> *
 *
 * `repeated .com.example.delhitransit.TripUpdate.StopTimeUpdate stop_time_update = 2;`
 */
             fun addStopTimeUpdate(
index:Int, value:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate?):Builder {
if (stopTimeUpdateBuilder_ == null)
{
if (value == null)
{
throw NullPointerException()
}
ensureStopTimeUpdateIsMutable()
stopTimeUpdate_!!.add(index, value)
onChanged()
}
else
{
stopTimeUpdateBuilder_!!.addMessage(index, value!!)
}
return this
}

/**
 * <pre>
 * Updates to StopTimes for the trip (both future, i.e., predictions, and in
 * some cases, past ones, i.e., those that already happened).
 * The updates must be sorted by stop_sequence, and apply for all the
 * following stops of the trip up to the next specified one.
 * Example 1:
 * For a trip with 20 stops, a StopTimeUpdate with arrival delay and departure
 * delay of 0 for stop_sequence of the current stop means that the trip is
 * exactly on time.
 * Example 2:
 * For the same trip instance, 3 StopTimeUpdates are provided:
 * - delay of 5 min for stop_sequence 3
 * - delay of 1 min for stop_sequence 8
 * - delay of unspecified duration for stop_sequence 10
 * This will be interpreted as:
 * - stop_sequences 3,4,5,6,7 have delay of 5 min.
 * - stop_sequences 8,9 have delay of 1 min.
 * - stop_sequences 10,... have unknown delay.
</pre> *
 *
 * `repeated .com.example.delhitransit.TripUpdate.StopTimeUpdate stop_time_update = 2;`
 */
             fun addStopTimeUpdate(
builderForValue:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate.Builder):Builder {
if (stopTimeUpdateBuilder_ == null)
{
ensureStopTimeUpdateIsMutable()
stopTimeUpdate_!!.add(builderForValue.build())
onChanged()
}
else
{
stopTimeUpdateBuilder_!!.addMessage(builderForValue.build())
}
return this
}

/**
 * <pre>
 * Updates to StopTimes for the trip (both future, i.e., predictions, and in
 * some cases, past ones, i.e., those that already happened).
 * The updates must be sorted by stop_sequence, and apply for all the
 * following stops of the trip up to the next specified one.
 * Example 1:
 * For a trip with 20 stops, a StopTimeUpdate with arrival delay and departure
 * delay of 0 for stop_sequence of the current stop means that the trip is
 * exactly on time.
 * Example 2:
 * For the same trip instance, 3 StopTimeUpdates are provided:
 * - delay of 5 min for stop_sequence 3
 * - delay of 1 min for stop_sequence 8
 * - delay of unspecified duration for stop_sequence 10
 * This will be interpreted as:
 * - stop_sequences 3,4,5,6,7 have delay of 5 min.
 * - stop_sequences 8,9 have delay of 1 min.
 * - stop_sequences 10,... have unknown delay.
</pre> *
 *
 * `repeated .com.example.delhitransit.TripUpdate.StopTimeUpdate stop_time_update = 2;`
 */
             fun addStopTimeUpdate(
index:Int, builderForValue:com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate.Builder):Builder {
if (stopTimeUpdateBuilder_ == null)
{
ensureStopTimeUpdateIsMutable()
stopTimeUpdate_!!.add(index, builderForValue.build())
onChanged()
}
else
{
stopTimeUpdateBuilder_!!.addMessage(index, builderForValue.build())
}
return this
}

/**
 * <pre>
 * Updates to StopTimes for the trip (both future, i.e., predictions, and in
 * some cases, past ones, i.e., those that already happened).
 * The updates must be sorted by stop_sequence, and apply for all the
 * following stops of the trip up to the next specified one.
 * Example 1:
 * For a trip with 20 stops, a StopTimeUpdate with arrival delay and departure
 * delay of 0 for stop_sequence of the current stop means that the trip is
 * exactly on time.
 * Example 2:
 * For the same trip instance, 3 StopTimeUpdates are provided:
 * - delay of 5 min for stop_sequence 3
 * - delay of 1 min for stop_sequence 8
 * - delay of unspecified duration for stop_sequence 10
 * This will be interpreted as:
 * - stop_sequences 3,4,5,6,7 have delay of 5 min.
 * - stop_sequences 8,9 have delay of 1 min.
 * - stop_sequences 10,... have unknown delay.
</pre> *
 *
 * `repeated .com.example.delhitransit.TripUpdate.StopTimeUpdate stop_time_update = 2;`
 */
             fun addAllStopTimeUpdate(
values:Iterable< com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate>):Builder {
if (stopTimeUpdateBuilder_ == null)
{
ensureStopTimeUpdateIsMutable()
com.google.protobuf.AbstractMessageLite.Builder.addAll(
values, stopTimeUpdate_!!)
onChanged()
}
else
{
stopTimeUpdateBuilder_!!.addAllMessages(values)
}
return this
}

/**
 * <pre>
 * Updates to StopTimes for the trip (both future, i.e., predictions, and in
 * some cases, past ones, i.e., those that already happened).
 * The updates must be sorted by stop_sequence, and apply for all the
 * following stops of the trip up to the next specified one.
 * Example 1:
 * For a trip with 20 stops, a StopTimeUpdate with arrival delay and departure
 * delay of 0 for stop_sequence of the current stop means that the trip is
 * exactly on time.
 * Example 2:
 * For the same trip instance, 3 StopTimeUpdates are provided:
 * - delay of 5 min for stop_sequence 3
 * - delay of 1 min for stop_sequence 8
 * - delay of unspecified duration for stop_sequence 10
 * This will be interpreted as:
 * - stop_sequences 3,4,5,6,7 have delay of 5 min.
 * - stop_sequences 8,9 have delay of 1 min.
 * - stop_sequences 10,... have unknown delay.
</pre> *
 *
 * `repeated .com.example.delhitransit.TripUpdate.StopTimeUpdate stop_time_update = 2;`
 */
             fun clearStopTimeUpdate():Builder {
if (stopTimeUpdateBuilder_ == null)
{
stopTimeUpdate_ = emptyList<StopTimeUpdate>()
bitField0_ = bitField0_ and 0x00000004.inv()
onChanged()
}
else
{
stopTimeUpdateBuilder_!!.clear()
}
return this
}

/**
 * <pre>
 * Updates to StopTimes for the trip (both future, i.e., predictions, and in
 * some cases, past ones, i.e., those that already happened).
 * The updates must be sorted by stop_sequence, and apply for all the
 * following stops of the trip up to the next specified one.
 * Example 1:
 * For a trip with 20 stops, a StopTimeUpdate with arrival delay and departure
 * delay of 0 for stop_sequence of the current stop means that the trip is
 * exactly on time.
 * Example 2:
 * For the same trip instance, 3 StopTimeUpdates are provided:
 * - delay of 5 min for stop_sequence 3
 * - delay of 1 min for stop_sequence 8
 * - delay of unspecified duration for stop_sequence 10
 * This will be interpreted as:
 * - stop_sequences 3,4,5,6,7 have delay of 5 min.
 * - stop_sequences 8,9 have delay of 1 min.
 * - stop_sequences 10,... have unknown delay.
</pre> *
 *
 * `repeated .com.example.delhitransit.TripUpdate.StopTimeUpdate stop_time_update = 2;`
 */
             fun removeStopTimeUpdate(index:Int):Builder {
if (stopTimeUpdateBuilder_ == null)
{
ensureStopTimeUpdateIsMutable()
stopTimeUpdate_!!.removeAt(index)
onChanged()
}
else
{
stopTimeUpdateBuilder_!!.remove(index)
}
return this
}

/**
 * <pre>
 * Updates to StopTimes for the trip (both future, i.e., predictions, and in
 * some cases, past ones, i.e., those that already happened).
 * The updates must be sorted by stop_sequence, and apply for all the
 * following stops of the trip up to the next specified one.
 * Example 1:
 * For a trip with 20 stops, a StopTimeUpdate with arrival delay and departure
 * delay of 0 for stop_sequence of the current stop means that the trip is
 * exactly on time.
 * Example 2:
 * For the same trip instance, 3 StopTimeUpdates are provided:
 * - delay of 5 min for stop_sequence 3
 * - delay of 1 min for stop_sequence 8
 * - delay of unspecified duration for stop_sequence 10
 * This will be interpreted as:
 * - stop_sequences 3,4,5,6,7 have delay of 5 min.
 * - stop_sequences 8,9 have delay of 1 min.
 * - stop_sequences 10,... have unknown delay.
</pre> *
 *
 * `repeated .com.example.delhitransit.TripUpdate.StopTimeUpdate stop_time_update = 2;`
 */
             fun getStopTimeUpdateBuilder(
index:Int):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate.Builder {
return stopTimeUpdateFieldBuilder.getBuilder(index)
}

/**
 * <pre>
 * Updates to StopTimes for the trip (both future, i.e., predictions, and in
 * some cases, past ones, i.e., those that already happened).
 * The updates must be sorted by stop_sequence, and apply for all the
 * following stops of the trip up to the next specified one.
 * Example 1:
 * For a trip with 20 stops, a StopTimeUpdate with arrival delay and departure
 * delay of 0 for stop_sequence of the current stop means that the trip is
 * exactly on time.
 * Example 2:
 * For the same trip instance, 3 StopTimeUpdates are provided:
 * - delay of 5 min for stop_sequence 3
 * - delay of 1 min for stop_sequence 8
 * - delay of unspecified duration for stop_sequence 10
 * This will be interpreted as:
 * - stop_sequences 3,4,5,6,7 have delay of 5 min.
 * - stop_sequences 8,9 have delay of 1 min.
 * - stop_sequences 10,... have unknown delay.
</pre> *
 *
 * `repeated .com.example.delhitransit.TripUpdate.StopTimeUpdate stop_time_update = 2;`
 */
            override fun getStopTimeUpdateOrBuilder(
index:Int):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdateOrBuilder {
return if (stopTimeUpdateBuilder_ == null) {
            stopTimeUpdate_!![index]
        } else {
            stopTimeUpdateBuilder_!!.getMessageOrBuilder(index)
        }
}

/**
 * <pre>
 * Updates to StopTimes for the trip (both future, i.e., predictions, and in
 * some cases, past ones, i.e., those that already happened).
 * The updates must be sorted by stop_sequence, and apply for all the
 * following stops of the trip up to the next specified one.
 * Example 1:
 * For a trip with 20 stops, a StopTimeUpdate with arrival delay and departure
 * delay of 0 for stop_sequence of the current stop means that the trip is
 * exactly on time.
 * Example 2:
 * For the same trip instance, 3 StopTimeUpdates are provided:
 * - delay of 5 min for stop_sequence 3
 * - delay of 1 min for stop_sequence 8
 * - delay of unspecified duration for stop_sequence 10
 * This will be interpreted as:
 * - stop_sequences 3,4,5,6,7 have delay of 5 min.
 * - stop_sequences 8,9 have delay of 1 min.
 * - stop_sequences 10,... have unknown delay.
</pre> *
 *
 * `repeated .com.example.delhitransit.TripUpdate.StopTimeUpdate stop_time_update = 2;`
 */
             fun addStopTimeUpdateBuilder():com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate.Builder {
return stopTimeUpdateFieldBuilder.addBuilder(
com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate.defaultInstance)
}

/**
 * <pre>
 * Updates to StopTimes for the trip (both future, i.e., predictions, and in
 * some cases, past ones, i.e., those that already happened).
 * The updates must be sorted by stop_sequence, and apply for all the
 * following stops of the trip up to the next specified one.
 * Example 1:
 * For a trip with 20 stops, a StopTimeUpdate with arrival delay and departure
 * delay of 0 for stop_sequence of the current stop means that the trip is
 * exactly on time.
 * Example 2:
 * For the same trip instance, 3 StopTimeUpdates are provided:
 * - delay of 5 min for stop_sequence 3
 * - delay of 1 min for stop_sequence 8
 * - delay of unspecified duration for stop_sequence 10
 * This will be interpreted as:
 * - stop_sequences 3,4,5,6,7 have delay of 5 min.
 * - stop_sequences 8,9 have delay of 1 min.
 * - stop_sequences 10,... have unknown delay.
</pre> *
 *
 * `repeated .com.example.delhitransit.TripUpdate.StopTimeUpdate stop_time_update = 2;`
 */
             fun addStopTimeUpdateBuilder(
index:Int):com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate.Builder {
return stopTimeUpdateFieldBuilder.addBuilder(
index, com.example.delhitransit.GtfsRealtime.TripUpdate.StopTimeUpdate.defaultInstance)
}

/**
 * <pre>
 * Moment at which the vehicle's real-time progress was measured. In POSIX
 * time (i.e., the number of seconds since January 1st 1970 00:00:00 UTC).
</pre> *
 *
 * `optional uint64 timestamp = 4;`
 */
            override fun hasTimestamp():Boolean {
return bitField0_ and 0x00000008 != 0
}

/**
 * <pre>
 * Moment at which the vehicle's real-time progress was measured. In POSIX
 * time (i.e., the number of seconds since January 1st 1970 00:00:00 UTC).
</pre> *
 *
 * `optional uint64 timestamp = 4;`
 */
             fun setTimestamp(value:Long):Builder {
bitField0_ = bitField0_ or 0x00000008
timestamp = value
onChanged()
return this
}

/**
 * <pre>
 * Moment at which the vehicle's real-time progress was measured. In POSIX
 * time (i.e., the number of seconds since January 1st 1970 00:00:00 UTC).
</pre> *
 *
 * `optional uint64 timestamp = 4;`
 */
             fun clearTimestamp():Builder {
bitField0_ = bitField0_ and 0x00000008.inv()
timestamp = 0L
onChanged()
return this
}

/**
 * <pre>
 * The current schedule deviation for the trip.  Delay should only be
 * specified when the prediction is given relative to some existing schedule
 * in GTFS.
 * Delay (in seconds) can be positive (meaning that the vehicle is late) or
 * negative (meaning that the vehicle is ahead of schedule). Delay of 0
 * means that the vehicle is exactly on time.
 * Delay information in StopTimeUpdates take precedent of trip-level delay
 * information, such that trip-level delay is only propagated until the next
 * stop along the trip with a StopTimeUpdate delay value specified.
 * Feed providers are strongly encouraged to provide a TripUpdate.timestamp
 * value indicating when the delay value was last updated, in order to
 * evaluate the freshness of the data.
 * NOTE: This field is still experimental, and subject to change. It may be
 * formally adopted in the future.
</pre> *
 *
 * `optional int32 delay = 5;`
 */
            override fun hasDelay():Boolean {
return bitField0_ and 0x00000010 != 0
}

/**
 * <pre>
 * The current schedule deviation for the trip.  Delay should only be
 * specified when the prediction is given relative to some existing schedule
 * in GTFS.
 * Delay (in seconds) can be positive (meaning that the vehicle is late) or
 * negative (meaning that the vehicle is ahead of schedule). Delay of 0
 * means that the vehicle is exactly on time.
 * Delay information in StopTimeUpdates take precedent of trip-level delay
 * information, such that trip-level delay is only propagated until the next
 * stop along the trip with a StopTimeUpdate delay value specified.
 * Feed providers are strongly encouraged to provide a TripUpdate.timestamp
 * value indicating when the delay value was last updated, in order to
 * evaluate the freshness of the data.
 * NOTE: This field is still experimental, and subject to change. It may be
 * formally adopted in the future.
</pre> *
 *
 * `optional int32 delay = 5;`
 */
             fun setDelay(value:Int):Builder {
bitField0_ = bitField0_ or 0x00000010
delay = value
onChanged()
return this
}

/**
 * <pre>
 * The current schedule deviation for the trip.  Delay should only be
 * specified when the prediction is given relative to some existing schedule
 * in GTFS.
 * Delay (in seconds) can be positive (meaning that the vehicle is late) or
 * negative (meaning that the vehicle is ahead of schedule). Delay of 0
 * means that the vehicle is exactly on time.
 * Delay information in StopTimeUpdates take precedent of trip-level delay
 * information, such that trip-level delay is only propagated until the next
 * stop along the trip with a StopTimeUpdate delay value specified.
 * Feed providers are strongly encouraged to provide a TripUpdate.timestamp
 * value indicating when the delay value was last updated, in order to
 * evaluate the freshness of the data.
 * NOTE: This field is still experimental, and subject to change. It may be
 * formally adopted in the future.
</pre> *
 *
 * `optional int32 delay = 5;`
 */
             fun clearDelay():Builder {
bitField0_ = bitField0_ and 0x00000010.inv()
delay = 0
onChanged()
return this
}

override fun setUnknownFields(
unknownFields:com.google.protobuf.UnknownFieldSet):Builder {
return super.setUnknownFields(unknownFields)
}

override fun mergeUnknownFields(
unknownFields:com.google.protobuf.UnknownFieldSet):Builder {
return super.mergeUnknownFields(unknownFields)
}

companion object {
 val descriptor:com.google.protobuf.Descriptors.Descriptor
get() =com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TripUpdate_descriptor
}


 // @@protoc_insertion_point(builder_scope:com.example.delhitransit.TripUpdate)
        }

override fun getParserForType():com.google.protobuf.Parser<TripUpdate> {
return PARSER
}

override fun getDefaultInstanceForType():com.example.delhitransit.GtfsRealtime.TripUpdate {
return defaultInstance
}

companion object {
private val serialVersionUID = 0L

 val descriptor:com.google.protobuf.Descriptors.Descriptor
get() =com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TripUpdate_descriptor
 val TRIP_FIELD_NUMBER = 1

 val VEHICLE_FIELD_NUMBER = 3

 val STOP_TIME_UPDATE_FIELD_NUMBER = 2

 val TIMESTAMP_FIELD_NUMBER = 4

 val DELAY_FIELD_NUMBER = 5

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:java.nio.ByteBuffer):com.example.delhitransit.GtfsRealtime.TripUpdate {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:java.nio.ByteBuffer,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TripUpdate {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:com.google.protobuf.ByteString):com.example.delhitransit.GtfsRealtime.TripUpdate {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:com.google.protobuf.ByteString,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TripUpdate {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(data:ByteArray):com.example.delhitransit.GtfsRealtime.TripUpdate {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:ByteArray,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TripUpdate {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseFrom(input:java.io.InputStream):com.example.delhitransit.GtfsRealtime.TripUpdate {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:java.io.InputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TripUpdate {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseDelimitedFrom(input:java.io.InputStream):com.example.delhitransit.GtfsRealtime.TripUpdate {
return com.google.protobuf.GeneratedMessageV3
.parseDelimitedWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseDelimitedFrom(
input:java.io.InputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TripUpdate {
return com.google.protobuf.GeneratedMessageV3
.parseDelimitedWithIOException(PARSER, input, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:com.google.protobuf.CodedInputStream):com.example.delhitransit.GtfsRealtime.TripUpdate {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TripUpdate {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input, extensionRegistry)
}

 fun newBuilder():Builder {
return defaultInstance.toBuilder()
}

 fun newBuilder(prototype:com.example.delhitransit.GtfsRealtime.TripUpdate):Builder {
return defaultInstance.toBuilder().mergeFrom(prototype)
}

 // @@protoc_insertion_point(class_scope:com.example.delhitransit.TripUpdate)
         val defaultInstance:com.example.delhitransit.GtfsRealtime.TripUpdate

init{
defaultInstance = com.example.delhitransit.GtfsRealtime.TripUpdate()
}

@Deprecated("")
 val PARSER:com.google.protobuf.Parser<TripUpdate> = object:com.google.protobuf.AbstractParser<TripUpdate>() {
@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
override fun parsePartialFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):TripUpdate {
return TripUpdate(input, extensionRegistry)
}
}

 fun parser():com.google.protobuf.Parser<TripUpdate> {
return PARSER
}
}

}

 interface VehiclePositionOrBuilder:
 // @@protoc_insertion_point(interface_extends:com.example.delhitransit.VehiclePosition)
            com.google.protobuf.GeneratedMessageV3.ExtendableMessageOrBuilder<VehiclePosition> {

/**
 * <pre>
 * The Trip that this vehicle is serving.
 * Can be empty or partial if the vehicle can not be identified with a given
 * trip instance.
</pre> *
 *
 * `optional .com.example.delhitransit.TripDescriptor trip = 1;`
 */
         val trip:com.example.delhitransit.GtfsRealtime.TripDescriptor

/**
 * <pre>
 * The Trip that this vehicle is serving.
 * Can be empty or partial if the vehicle can not be identified with a given
 * trip instance.
</pre> *
 *
 * `optional .com.example.delhitransit.TripDescriptor trip = 1;`
 */
         val tripOrBuilder:com.example.delhitransit.GtfsRealtime.TripDescriptorOrBuilder

/**
 * <pre>
 * Additional information on the vehicle that is serving this trip.
</pre> *
 *
 * `optional .com.example.delhitransit.VehicleDescriptor vehicle = 8;`
 */
         val vehicle:com.example.delhitransit.GtfsRealtime.VehicleDescriptor

/**
 * <pre>
 * Additional information on the vehicle that is serving this trip.
</pre> *
 *
 * `optional .com.example.delhitransit.VehicleDescriptor vehicle = 8;`
 */
         val vehicleOrBuilder:com.example.delhitransit.GtfsRealtime.VehicleDescriptorOrBuilder

/**
 * <pre>
 * Current position of this vehicle.
</pre> *
 *
 * `optional .com.example.delhitransit.Position position = 2;`
 */
         val position:com.example.delhitransit.GtfsRealtime.Position

/**
 * <pre>
 * Current position of this vehicle.
</pre> *
 *
 * `optional .com.example.delhitransit.Position position = 2;`
 */
         val positionOrBuilder:com.example.delhitransit.GtfsRealtime.PositionOrBuilder

/**
 * <pre>
 * The stop sequence index of the current stop. The meaning of
 * current_stop_sequence (i.e., the stop that it refers to) is determined by
 * current_status.
 * If current_status is missing IN_TRANSIT_TO is assumed.
</pre> *
 *
 * `optional uint32 current_stop_sequence = 3;`
 */
         val currentStopSequence:Int

/**
 * <pre>
 * Identifies the current stop. The value must be the same as in stops.txt in
 * the corresponding GTFS feed.
</pre> *
 *
 * `optional string stop_id = 7;`
 */
         val stopId:java.lang.String

/**
 * <pre>
 * Identifies the current stop. The value must be the same as in stops.txt in
 * the corresponding GTFS feed.
</pre> *
 *
 * `optional string stop_id = 7;`
 */
         val stopIdBytes:com.google.protobuf.ByteString

/**
 * <pre>
 * The exact status of the vehicle with respect to the current stop.
 * Ignored if current_stop_sequence is missing.
</pre> *
 *
 * `optional .com.example.delhitransit.VehiclePosition.VehicleStopStatus current_status = 4 [default = IN_TRANSIT_TO];`
 */
         val currentStatus:com.example.delhitransit.GtfsRealtime.VehiclePosition.VehicleStopStatus

/**
 * <pre>
 * Moment at which the vehicle's position was measured. In POSIX time
 * (i.e., number of seconds since January 1st 1970 00:00:00 UTC).
</pre> *
 *
 * `optional uint64 timestamp = 5;`
 */
         val timestamp:Long

/**
 * `optional .com.example.delhitransit.VehiclePosition.CongestionLevel congestion_level = 6;`
 */
         val congestionLevel:com.example.delhitransit.GtfsRealtime.VehiclePosition.CongestionLevel

/**
 * `optional .com.example.delhitransit.VehiclePosition.OccupancyStatus occupancy_status = 9;`
 */
         val occupancyStatus:com.example.delhitransit.GtfsRealtime.VehiclePosition.OccupancyStatus

/**
 * <pre>
 * The Trip that this vehicle is serving.
 * Can be empty or partial if the vehicle can not be identified with a given
 * trip instance.
</pre> *
 *
 * `optional .com.example.delhitransit.TripDescriptor trip = 1;`
 */
         fun hasTrip():Boolean

/**
 * <pre>
 * Additional information on the vehicle that is serving this trip.
</pre> *
 *
 * `optional .com.example.delhitransit.VehicleDescriptor vehicle = 8;`
 */
         fun hasVehicle():Boolean

/**
 * <pre>
 * Current position of this vehicle.
</pre> *
 *
 * `optional .com.example.delhitransit.Position position = 2;`
 */
         fun hasPosition():Boolean

/**
 * <pre>
 * The stop sequence index of the current stop. The meaning of
 * current_stop_sequence (i.e., the stop that it refers to) is determined by
 * current_status.
 * If current_status is missing IN_TRANSIT_TO is assumed.
</pre> *
 *
 * `optional uint32 current_stop_sequence = 3;`
 */
         fun hasCurrentStopSequence():Boolean

/**
 * <pre>
 * Identifies the current stop. The value must be the same as in stops.txt in
 * the corresponding GTFS feed.
</pre> *
 *
 * `optional string stop_id = 7;`
 */
         fun hasStopId():Boolean

/**
 * <pre>
 * The exact status of the vehicle with respect to the current stop.
 * Ignored if current_stop_sequence is missing.
</pre> *
 *
 * `optional .com.example.delhitransit.VehiclePosition.VehicleStopStatus current_status = 4 [default = IN_TRANSIT_TO];`
 */
         fun hasCurrentStatus():Boolean

/**
 * <pre>
 * Moment at which the vehicle's position was measured. In POSIX time
 * (i.e., number of seconds since January 1st 1970 00:00:00 UTC).
</pre> *
 *
 * `optional uint64 timestamp = 5;`
 */
         fun hasTimestamp():Boolean

/**
 * `optional .com.example.delhitransit.VehiclePosition.CongestionLevel congestion_level = 6;`
 */
         fun hasCongestionLevel():Boolean

/**
 * `optional .com.example.delhitransit.VehiclePosition.OccupancyStatus occupancy_status = 9;`
 */
         fun hasOccupancyStatus():Boolean
}

/**
 * <pre>
 * Realtime positioning information for a given vehicle.
</pre> *
 *
 *
 * Protobuf type `com.example.delhitransit.VehiclePosition`
 */
     class VehiclePosition:com.google.protobuf.GeneratedMessageV3.ExtendableMessage<VehiclePosition>,
 // @@protoc_insertion_point(message_implements:com.example.delhitransit.VehiclePosition)
            VehiclePositionOrBuilder {

private var bitField0_:Int = 0
private var trip_:com.example.delhitransit.GtfsRealtime.TripDescriptor? = null

/**
 * <pre>
 * The Trip that this vehicle is serving.
 * Can be empty or partial if the vehicle can not be identified with a given
 * trip instance.
</pre> *
 *
 * `optional .com.example.delhitransit.TripDescriptor trip = 1;`
 */
        override val trip:com.example.delhitransit.GtfsRealtime.TripDescriptor
get() =if (trip_ == null) com.example.delhitransit.GtfsRealtime.TripDescriptor.defaultInstance else trip_

/**
 * <pre>
 * The Trip that this vehicle is serving.
 * Can be empty or partial if the vehicle can not be identified with a given
 * trip instance.
</pre> *
 *
 * `optional .com.example.delhitransit.TripDescriptor trip = 1;`
 */
        override val tripOrBuilder:com.example.delhitransit.GtfsRealtime.TripDescriptorOrBuilder
get() =if (trip_ == null) com.example.delhitransit.GtfsRealtime.TripDescriptor.defaultInstance else trip_
private var vehicle_:com.example.delhitransit.GtfsRealtime.VehicleDescriptor? = null

/**
 * <pre>
 * Additional information on the vehicle that is serving this trip.
</pre> *
 *
 * `optional .com.example.delhitransit.VehicleDescriptor vehicle = 8;`
 */
        override val vehicle:com.example.delhitransit.GtfsRealtime.VehicleDescriptor
get() =if (vehicle_ == null) com.example.delhitransit.GtfsRealtime.VehicleDescriptor.defaultInstance else vehicle_

/**
 * <pre>
 * Additional information on the vehicle that is serving this trip.
</pre> *
 *
 * `optional .com.example.delhitransit.VehicleDescriptor vehicle = 8;`
 */
        override val vehicleOrBuilder:com.example.delhitransit.GtfsRealtime.VehicleDescriptorOrBuilder
get() =if (vehicle_ == null) com.example.delhitransit.GtfsRealtime.VehicleDescriptor.defaultInstance else vehicle_
private var position_:com.example.delhitransit.GtfsRealtime.Position? = null

/**
 * <pre>
 * Current position of this vehicle.
</pre> *
 *
 * `optional .com.example.delhitransit.Position position = 2;`
 */
        override val position:com.example.delhitransit.GtfsRealtime.Position
get() =if (position_ == null) com.example.delhitransit.GtfsRealtime.Position.defaultInstance else position_

/**
 * <pre>
 * Current position of this vehicle.
</pre> *
 *
 * `optional .com.example.delhitransit.Position position = 2;`
 */
        override val positionOrBuilder:com.example.delhitransit.GtfsRealtime.PositionOrBuilder
get() =if (position_ == null) com.example.delhitransit.GtfsRealtime.Position.defaultInstance else position_
/**
 * <pre>
 * The stop sequence index of the current stop. The meaning of
 * current_stop_sequence (i.e., the stop that it refers to) is determined by
 * current_status.
 * If current_status is missing IN_TRANSIT_TO is assumed.
</pre> *
 *
 * `optional uint32 current_stop_sequence = 3;`
 */
        override var currentStopSequence:Int = 0
private set
@Volatile private var stopId_:Any? = null

/**
 * <pre>
 * Identifies the current stop. The value must be the same as in stops.txt in
 * the corresponding GTFS feed.
</pre> *
 *
 * `optional string stop_id = 7;`
 */
        override val stopId:java.lang.String
get() {
val ref = stopId_
if (ref is java.lang.String)
{
return ref
}
else
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
stopId_ = s
}
return s
}
}

/**
 * <pre>
 * Identifies the current stop. The value must be the same as in stops.txt in
 * the corresponding GTFS feed.
</pre> *
 *
 * `optional string stop_id = 7;`
 */
        override val stopIdBytes:com.google.protobuf.ByteString
get() {
val ref = stopId_
if (ref is java.lang.String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
stopId_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}
private var currentStatus_:Int = 0

/**
 * <pre>
 * The exact status of the vehicle with respect to the current stop.
 * Ignored if current_stop_sequence is missing.
</pre> *
 *
 * `optional .com.example.delhitransit.VehiclePosition.VehicleStopStatus current_status = 4 [default = IN_TRANSIT_TO];`
 */
        override val currentStatus:com.example.delhitransit.GtfsRealtime.VehiclePosition.VehicleStopStatus
get() {
val result = com.example.delhitransit.GtfsRealtime.VehiclePosition.VehicleStopStatus.valueOf(currentStatus_)
return result ?: com.example.delhitransit.GtfsRealtime.VehiclePosition.VehicleStopStatus.IN_TRANSIT_TO
}
/**
 * <pre>
 * Moment at which the vehicle's position was measured. In POSIX time
 * (i.e., number of seconds since January 1st 1970 00:00:00 UTC).
</pre> *
 *
 * `optional uint64 timestamp = 5;`
 */
        override var timestamp:Long = 0
private set
private var congestionLevel_:Int = 0

/**
 * `optional .com.example.delhitransit.VehiclePosition.CongestionLevel congestion_level = 6;`
 */
        override val congestionLevel:com.example.delhitransit.GtfsRealtime.VehiclePosition.CongestionLevel
get() {
val result = com.example.delhitransit.GtfsRealtime.VehiclePosition.CongestionLevel.valueOf(congestionLevel_)
return result
                ?: com.example.delhitransit.GtfsRealtime.VehiclePosition.CongestionLevel.UNKNOWN_CONGESTION_LEVEL
}
private var occupancyStatus_:Int = 0

/**
 * `optional .com.example.delhitransit.VehiclePosition.OccupancyStatus occupancy_status = 9;`
 */
        override val occupancyStatus:com.example.delhitransit.GtfsRealtime.VehiclePosition.OccupancyStatus
get() {
val result = com.example.delhitransit.GtfsRealtime.VehiclePosition.OccupancyStatus.valueOf(occupancyStatus_)
return result ?: com.example.delhitransit.GtfsRealtime.VehiclePosition.OccupancyStatus.EMPTY
}

private var memoizedIsInitialized:Byte = -1

 // Use VehiclePosition.newBuilder() to construct.
        private constructor(builder:com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.example.delhitransit.GtfsRealtime.VehiclePosition, *>) : super(builder) {}

private constructor() {
stopId_ = ""
currentStatus_ = 2
congestionLevel_ = 0
occupancyStatus_ = 0
}

 //        @java.lang.Override
 //        @SuppressWarnings({"unused"})
 //        protected java.lang.Object newInstance(
 //                UnusedPrivateParameter unused) {
 //            return new VehiclePosition();
 //        }

        override fun getUnknownFields():com.google.protobuf.UnknownFieldSet {
return this.unknownFields
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
private constructor(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite?) : this() {
if (extensionRegistry == null)
{
throw java.lang.NullPointerException()
}
val mutable_bitField0_ = 0
val unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder()
try
{
var done = false
while (!done)
{
val tag = input.readTag()
when (tag) {
0 -> done = true
10 -> {
var subBuilder:com.example.delhitransit.GtfsRealtime.TripDescriptor.Builder? = null
if (bitField0_ and 0x00000001 != 0)
{
subBuilder = trip_!!.toBuilder()
}
trip_ = input.readMessage(com.example.delhitransit.GtfsRealtime.TripDescriptor.PARSER, extensionRegistry)
if (subBuilder != null)
{
subBuilder.mergeFrom(trip_)
trip_ = subBuilder.buildPartial()
}
bitField0_ = bitField0_ or 0x00000001
}
18 -> {
var subBuilder:com.example.delhitransit.GtfsRealtime.Position.Builder? = null
if (bitField0_ and 0x00000004 != 0)
{
subBuilder = position_!!.toBuilder()
}
position_ = input.readMessage(com.example.delhitransit.GtfsRealtime.Position.PARSER, extensionRegistry)
if (subBuilder != null)
{
subBuilder.mergeFrom(position_)
position_ = subBuilder.buildPartial()
}
bitField0_ = bitField0_ or 0x00000004
}
24 -> {
bitField0_ = bitField0_ or 0x00000008
currentStopSequence = input.readUInt32()
}
32 -> {
val rawValue = input.readEnum()
val value = com.example.delhitransit.GtfsRealtime.VehiclePosition.VehicleStopStatus.valueOf(rawValue)
if (value == null)
{
unknownFields.mergeVarintField(4, rawValue)
}
else
{
bitField0_ = bitField0_ or 0x00000020
currentStatus_ = rawValue
}
}
40 -> {
bitField0_ = bitField0_ or 0x00000040
timestamp = input.readUInt64()
}
48 -> {
val rawValue = input.readEnum()
val value = com.example.delhitransit.GtfsRealtime.VehiclePosition.CongestionLevel.valueOf(rawValue)
if (value == null)
{
unknownFields.mergeVarintField(6, rawValue)
}
else
{
bitField0_ = bitField0_ or 0x00000080
congestionLevel_ = rawValue
}
}
58 -> {
val bs = input.readBytes()
bitField0_ = bitField0_ or 0x00000010
stopId_ = bs
}
66 -> {
var subBuilder:com.example.delhitransit.GtfsRealtime.VehicleDescriptor.Builder? = null
if (bitField0_ and 0x00000002 != 0)
{
subBuilder = vehicle_!!.toBuilder()
}
vehicle_ = input.readMessage(com.example.delhitransit.GtfsRealtime.VehicleDescriptor.PARSER, extensionRegistry)
if (subBuilder != null)
{
subBuilder.mergeFrom(vehicle_)
vehicle_ = subBuilder.buildPartial()
}
bitField0_ = bitField0_ or 0x00000002
}
72 -> {
val rawValue = input.readEnum()
val value = com.example.delhitransit.GtfsRealtime.VehiclePosition.OccupancyStatus.valueOf(rawValue)
if (value == null)
{
unknownFields.mergeVarintField(9, rawValue)
}
else
{
bitField0_ = bitField0_ or 0x00000100
occupancyStatus_ = rawValue
}
}
else -> {
if (!parseUnknownField(
input, unknownFields, extensionRegistry, tag))
{
done = true
}
}
}
}
}
catch (e:com.google.protobuf.InvalidProtocolBufferException) {
throw e.setUnfinishedMessage(this)
}
catch (e:java.io.IOException) {
throw com.google.protobuf.InvalidProtocolBufferException(
e).setUnfinishedMessage(this)
}
finally
{
this.unknownFields = unknownFields.build()
makeExtensionsImmutable()
}
}

override fun internalGetFieldAccessorTable():com.google.protobuf.GeneratedMessageV3.FieldAccessorTable {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_VehiclePosition_fieldAccessorTable
.ensureFieldAccessorsInitialized(
com.example.delhitransit.GtfsRealtime.VehiclePosition::class.java, com.example.delhitransit.GtfsRealtime.VehiclePosition.Builder::class.java)
}

/**
 * Protobuf enum `com.example.delhitransit.VehiclePosition.VehicleStopStatus`
 */
         enum class VehicleStopStatus private constructor(private val value:Int):com.google.protobuf.ProtocolMessageEnum {
/**
 * <pre>
 * The vehicle is just about to arrive at the stop (on a stop
 * display, the vehicle symbol typically flashes).
</pre> *
 *
 * `INCOMING_AT = 0;`
 */
            INCOMING_AT(0),
/**
 * <pre>
 * The vehicle is standing at the stop.
</pre> *
 *
 * `STOPPED_AT = 1;`
 */
            STOPPED_AT(1),
/**
 * <pre>
 * The vehicle has departed and is in transit to the next stop.
</pre> *
 *
 * `IN_TRANSIT_TO = 2;`
 */
            IN_TRANSIT_TO(2);


override fun getNumber():Int {
return value
}

override fun getValueDescriptor():com.google.protobuf.Descriptors.EnumValueDescriptor {
return descriptor.values[ordinal]
}

override fun getDescriptorForType():com.google.protobuf.Descriptors.EnumDescriptor {
return descriptor
}

companion object {

/**
 * <pre>
 * The vehicle is just about to arrive at the stop (on a stop
 * display, the vehicle symbol typically flashes).
</pre> *
 *
 * `INCOMING_AT = 0;`
 */
             val INCOMING_AT_VALUE = 0
/**
 * <pre>
 * The vehicle is standing at the stop.
</pre> *
 *
 * `STOPPED_AT = 1;`
 */
             val STOPPED_AT_VALUE = 1
/**
 * <pre>
 * The vehicle has departed and is in transit to the next stop.
</pre> *
 *
 * `IN_TRANSIT_TO = 2;`
 */
             val IN_TRANSIT_TO_VALUE = 2


            @Deprecated("Use {@link #forNumber(int)} instead.")
 fun valueOf(value:Int):VehicleStopStatus? {
return forNumber(value)
}

 fun forNumber(value:Int):VehicleStopStatus? {
when (value) {
0 -> return INCOMING_AT
1 -> return STOPPED_AT
2 -> return IN_TRANSIT_TO
else -> return null
}
}

 fun internalGetValueMap():com.google.protobuf.Internal.EnumLiteMap<VehicleStopStatus> {
return internalValueMap
}

private val internalValueMap = Internal.EnumLiteMap<VehicleStopStatus> { number -> VehicleStopStatus.forNumber(number) }

 val descriptor:com.google.protobuf.Descriptors.EnumDescriptor
get() =com.example.delhitransit.GtfsRealtime.VehiclePosition.descriptor.enumTypes[0]

private val VALUES = values()

 fun valueOf(
desc:com.google.protobuf.Descriptors.EnumValueDescriptor):VehicleStopStatus {
require(desc.type == descriptor) { "EnumValueDescriptor is not for this type." }
return VALUES[desc.index]
}
}

 // @@protoc_insertion_point(enum_scope:com.example.delhitransit.VehiclePosition.VehicleStopStatus)
        }

/**
 * <pre>
 * Congestion level that is affecting this vehicle.
</pre> *
 *
 *
 * Protobuf enum `com.example.delhitransit.VehiclePosition.CongestionLevel`
 */
         enum class CongestionLevel private constructor(private val value:Int):com.google.protobuf.ProtocolMessageEnum {
/**
 * `UNKNOWN_CONGESTION_LEVEL = 0;`
 */
            UNKNOWN_CONGESTION_LEVEL(0),
/**
 * `RUNNING_SMOOTHLY = 1;`
 */
            RUNNING_SMOOTHLY(1),
/**
 * `STOP_AND_GO = 2;`
 */
            STOP_AND_GO(2),
/**
 * `CONGESTION = 3;`
 */
            CONGESTION(3),
/**
 * <pre>
 * People leaving their cars.
</pre> *
 *
 * `SEVERE_CONGESTION = 4;`
 */
            SEVERE_CONGESTION(4);


override fun getNumber():Int {
return value
}

override fun getValueDescriptor():com.google.protobuf.Descriptors.EnumValueDescriptor {
return descriptor.values[ordinal]
}

override fun getDescriptorForType():com.google.protobuf.Descriptors.EnumDescriptor {
return descriptor
}

companion object {

/**
 * `UNKNOWN_CONGESTION_LEVEL = 0;`
 */
             val UNKNOWN_CONGESTION_LEVEL_VALUE = 0
/**
 * `RUNNING_SMOOTHLY = 1;`
 */
             val RUNNING_SMOOTHLY_VALUE = 1
/**
 * `STOP_AND_GO = 2;`
 */
             val STOP_AND_GO_VALUE = 2
/**
 * `CONGESTION = 3;`
 */
             val CONGESTION_VALUE = 3
/**
 * <pre>
 * People leaving their cars.
</pre> *
 *
 * `SEVERE_CONGESTION = 4;`
 */
             val SEVERE_CONGESTION_VALUE = 4


            @Deprecated("Use {@link #forNumber(int)} instead.")
 fun valueOf(value:Int):CongestionLevel? {
return forNumber(value)
}

 fun forNumber(value:Int):CongestionLevel? {
when (value) {
0 -> return UNKNOWN_CONGESTION_LEVEL
1 -> return RUNNING_SMOOTHLY
2 -> return STOP_AND_GO
3 -> return CONGESTION
4 -> return SEVERE_CONGESTION
else -> return null
}
}

 fun internalGetValueMap():com.google.protobuf.Internal.EnumLiteMap<CongestionLevel> {
return internalValueMap
}

private val internalValueMap = Internal.EnumLiteMap<CongestionLevel> { number -> CongestionLevel.forNumber(number) }

 val descriptor:com.google.protobuf.Descriptors.EnumDescriptor
get() =com.example.delhitransit.GtfsRealtime.VehiclePosition.descriptor.enumTypes[1]

private val VALUES = values()

 fun valueOf(
desc:com.google.protobuf.Descriptors.EnumValueDescriptor):CongestionLevel {
require(desc.type == descriptor) { "EnumValueDescriptor is not for this type." }
return VALUES[desc.index]
}
}

 // @@protoc_insertion_point(enum_scope:com.example.delhitransit.VehiclePosition.CongestionLevel)
        }

/**
 * <pre>
 * The degree of passenger occupancy of the vehicle. This field is still
 * experimental, and subject to change. It may be formally adopted in the
 * future.
</pre> *
 *
 *
 * Protobuf enum `com.example.delhitransit.VehiclePosition.OccupancyStatus`
 */
         enum class OccupancyStatus private constructor(private val value:Int):com.google.protobuf.ProtocolMessageEnum {
/**
 * <pre>
 * The vehicle is considered empty by most measures, and has few or no
 * passengers onboard, but is still accepting passengers.
</pre> *
 *
 * `EMPTY = 0;`
 */
            EMPTY(0),
/**
 * <pre>
 * The vehicle has a relatively large percentage of seats available.
 * What percentage of free seats out of the total seats available is to be
 * considered large enough to fall into this category is determined at the
 * discretion of the producer.
</pre> *
 *
 * `MANY_SEATS_AVAILABLE = 1;`
 */
            MANY_SEATS_AVAILABLE(1),
/**
 * <pre>
 * The vehicle has a relatively small percentage of seats available.
 * What percentage of free seats out of the total seats available is to be
 * considered small enough to fall into this category is determined at the
 * discretion of the feed producer.
</pre> *
 *
 * `FEW_SEATS_AVAILABLE = 2;`
 */
            FEW_SEATS_AVAILABLE(2),
/**
 * <pre>
 * The vehicle can currently accommodate only standing passengers.
</pre> *
 *
 * `STANDING_ROOM_ONLY = 3;`
 */
            STANDING_ROOM_ONLY(3),
/**
 * <pre>
 * The vehicle can currently accommodate only standing passengers
 * and has limited space for them.
</pre> *
 *
 * `CRUSHED_STANDING_ROOM_ONLY = 4;`
 */
            CRUSHED_STANDING_ROOM_ONLY(4),
/**
 * <pre>
 * The vehicle is considered full by most measures, but may still be
 * allowing passengers to board.
</pre> *
 *
 * `FULL = 5;`
 */
            FULL(5),
/**
 * <pre>
 * The vehicle is not accepting additional passengers.
</pre> *
 *
 * `NOT_ACCEPTING_PASSENGERS = 6;`
 */
            NOT_ACCEPTING_PASSENGERS(6);


override fun getNumber():Int {
return value
}

override fun getValueDescriptor():com.google.protobuf.Descriptors.EnumValueDescriptor {
return descriptor.values[ordinal]
}

override fun getDescriptorForType():com.google.protobuf.Descriptors.EnumDescriptor {
return descriptor
}

companion object {

/**
 * <pre>
 * The vehicle is considered empty by most measures, and has few or no
 * passengers onboard, but is still accepting passengers.
</pre> *
 *
 * `EMPTY = 0;`
 */
             val EMPTY_VALUE = 0
/**
 * <pre>
 * The vehicle has a relatively large percentage of seats available.
 * What percentage of free seats out of the total seats available is to be
 * considered large enough to fall into this category is determined at the
 * discretion of the producer.
</pre> *
 *
 * `MANY_SEATS_AVAILABLE = 1;`
 */
             val MANY_SEATS_AVAILABLE_VALUE = 1
/**
 * <pre>
 * The vehicle has a relatively small percentage of seats available.
 * What percentage of free seats out of the total seats available is to be
 * considered small enough to fall into this category is determined at the
 * discretion of the feed producer.
</pre> *
 *
 * `FEW_SEATS_AVAILABLE = 2;`
 */
             val FEW_SEATS_AVAILABLE_VALUE = 2
/**
 * <pre>
 * The vehicle can currently accommodate only standing passengers.
</pre> *
 *
 * `STANDING_ROOM_ONLY = 3;`
 */
             val STANDING_ROOM_ONLY_VALUE = 3
/**
 * <pre>
 * The vehicle can currently accommodate only standing passengers
 * and has limited space for them.
</pre> *
 *
 * `CRUSHED_STANDING_ROOM_ONLY = 4;`
 */
             val CRUSHED_STANDING_ROOM_ONLY_VALUE = 4
/**
 * <pre>
 * The vehicle is considered full by most measures, but may still be
 * allowing passengers to board.
</pre> *
 *
 * `FULL = 5;`
 */
             val FULL_VALUE = 5
/**
 * <pre>
 * The vehicle is not accepting additional passengers.
</pre> *
 *
 * `NOT_ACCEPTING_PASSENGERS = 6;`
 */
             val NOT_ACCEPTING_PASSENGERS_VALUE = 6


            @Deprecated("Use {@link #forNumber(int)} instead.")
 fun valueOf(value:Int):OccupancyStatus? {
return forNumber(value)
}

 fun forNumber(value:Int):OccupancyStatus? {
when (value) {
0 -> return EMPTY
1 -> return MANY_SEATS_AVAILABLE
2 -> return FEW_SEATS_AVAILABLE
3 -> return STANDING_ROOM_ONLY
4 -> return CRUSHED_STANDING_ROOM_ONLY
5 -> return FULL
6 -> return NOT_ACCEPTING_PASSENGERS
else -> return null
}
}

 fun internalGetValueMap():com.google.protobuf.Internal.EnumLiteMap<OccupancyStatus> {
return internalValueMap
}

private val internalValueMap = Internal.EnumLiteMap<OccupancyStatus> { number -> OccupancyStatus.forNumber(number) }

 val descriptor:com.google.protobuf.Descriptors.EnumDescriptor
get() =com.example.delhitransit.GtfsRealtime.VehiclePosition.descriptor.enumTypes[2]

private val VALUES = values()

 fun valueOf(
desc:com.google.protobuf.Descriptors.EnumValueDescriptor):OccupancyStatus {
require(desc.type == descriptor) { "EnumValueDescriptor is not for this type." }
return VALUES[desc.index]
}
}

 // @@protoc_insertion_point(enum_scope:com.example.delhitransit.VehiclePosition.OccupancyStatus)
        }

/**
 * <pre>
 * The Trip that this vehicle is serving.
 * Can be empty or partial if the vehicle can not be identified with a given
 * trip instance.
</pre> *
 *
 * `optional .com.example.delhitransit.TripDescriptor trip = 1;`
 */
        override fun hasTrip():Boolean {
return bitField0_ and 0x00000001 != 0
}

/**
 * <pre>
 * Additional information on the vehicle that is serving this trip.
</pre> *
 *
 * `optional .com.example.delhitransit.VehicleDescriptor vehicle = 8;`
 */
        override fun hasVehicle():Boolean {
return bitField0_ and 0x00000002 != 0
}

/**
 * <pre>
 * Current position of this vehicle.
</pre> *
 *
 * `optional .com.example.delhitransit.Position position = 2;`
 */
        override fun hasPosition():Boolean {
return bitField0_ and 0x00000004 != 0
}

/**
 * <pre>
 * The stop sequence index of the current stop. The meaning of
 * current_stop_sequence (i.e., the stop that it refers to) is determined by
 * current_status.
 * If current_status is missing IN_TRANSIT_TO is assumed.
</pre> *
 *
 * `optional uint32 current_stop_sequence = 3;`
 */
        override fun hasCurrentStopSequence():Boolean {
return bitField0_ and 0x00000008 != 0
}

/**
 * <pre>
 * Identifies the current stop. The value must be the same as in stops.txt in
 * the corresponding GTFS feed.
</pre> *
 *
 * `optional string stop_id = 7;`
 */
        override fun hasStopId():Boolean {
return bitField0_ and 0x00000010 != 0
}

/**
 * <pre>
 * The exact status of the vehicle with respect to the current stop.
 * Ignored if current_stop_sequence is missing.
</pre> *
 *
 * `optional .com.example.delhitransit.VehiclePosition.VehicleStopStatus current_status = 4 [default = IN_TRANSIT_TO];`
 */
        override fun hasCurrentStatus():Boolean {
return bitField0_ and 0x00000020 != 0
}

/**
 * <pre>
 * Moment at which the vehicle's position was measured. In POSIX time
 * (i.e., number of seconds since January 1st 1970 00:00:00 UTC).
</pre> *
 *
 * `optional uint64 timestamp = 5;`
 */
        override fun hasTimestamp():Boolean {
return bitField0_ and 0x00000040 != 0
}

/**
 * `optional .com.example.delhitransit.VehiclePosition.CongestionLevel congestion_level = 6;`
 */
        override fun hasCongestionLevel():Boolean {
return bitField0_ and 0x00000080 != 0
}

/**
 * `optional .com.example.delhitransit.VehiclePosition.OccupancyStatus occupancy_status = 9;`
 */
        override fun hasOccupancyStatus():Boolean {
return bitField0_ and 0x00000100 != 0
}

override fun isInitialized():Boolean {
val isInitialized = memoizedIsInitialized
if (isInitialized.toInt() == 1) return true
if (isInitialized.toInt() == 0) return false

if (hasTrip())
{
if (!trip.isInitialized)
{
memoizedIsInitialized = 0
return false
}
}
if (hasVehicle())
{
if (!vehicle.isInitialized)
{
memoizedIsInitialized = 0
return false
}
}
if (hasPosition())
{
if (!position.isInitialized)
{
memoizedIsInitialized = 0
return false
}
}
if (!extensionsAreInitialized())
{
memoizedIsInitialized = 0
return false
}
memoizedIsInitialized = 1
return true
}

@Throws(java.io.IOException::class)
override fun writeTo(output:com.google.protobuf.CodedOutputStream) {
val extensionWriter = newExtensionWriter()
if (bitField0_ and 0x00000001 != 0)
{
output.writeMessage(1, trip)
}
if (bitField0_ and 0x00000004 != 0)
{
output.writeMessage(2, position)
}
if (bitField0_ and 0x00000008 != 0)
{
output.writeUInt32(3, currentStopSequence)
}
if (bitField0_ and 0x00000020 != 0)
{
output.writeEnum(4, currentStatus_)
}
if (bitField0_ and 0x00000040 != 0)
{
output.writeUInt64(5, timestamp)
}
if (bitField0_ and 0x00000080 != 0)
{
output.writeEnum(6, congestionLevel_)
}
if (bitField0_ and 0x00000010 != 0)
{
com.google.protobuf.GeneratedMessageV3.writeString(output, 7, stopId_)
}
if (bitField0_ and 0x00000002 != 0)
{
output.writeMessage(8, vehicle)
}
if (bitField0_ and 0x00000100 != 0)
{
output.writeEnum(9, occupancyStatus_)
}
extensionWriter.writeUntil(2000, output)
unknownFields.writeTo(output)
}

override fun getSerializedSize():Int {
var size = memoizedSize
if (size != -1) return size

size = 0
if (bitField0_ and 0x00000001 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeMessageSize(1, trip)
}
if (bitField0_ and 0x00000004 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeMessageSize(2, position)
}
if (bitField0_ and 0x00000008 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeUInt32Size(3, currentStopSequence)
}
if (bitField0_ and 0x00000020 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeEnumSize(4, currentStatus_)
}
if (bitField0_ and 0x00000040 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeUInt64Size(5, timestamp)
}
if (bitField0_ and 0x00000080 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeEnumSize(6, congestionLevel_)
}
if (bitField0_ and 0x00000010 != 0)
{
size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, stopId_!!)
}
if (bitField0_ and 0x00000002 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeMessageSize(8, vehicle)
}
if (bitField0_ and 0x00000100 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeEnumSize(9, occupancyStatus_)
}
size += extensionsSerializedSize()
size += unknownFields.serializedSize
memoizedSize = size
return size
}

override fun equals(obj:Any?):Boolean {
if (obj === this)
{
return true
}
if (obj !is com.example.delhitransit.GtfsRealtime.VehiclePosition)
{
return super.equals(obj)
}
val other = obj as com.example.delhitransit.GtfsRealtime.VehiclePosition?

if (hasTrip() != other!!.hasTrip()) return false
if (hasTrip())
{
if (trip != other.trip)
return false
}
if (hasVehicle() != other.hasVehicle()) return false
if (hasVehicle())
{
if (vehicle != other.vehicle)
return false
}
if (hasPosition() != other.hasPosition()) return false
if (hasPosition())
{
if (position != other.position)
return false
}
if (hasCurrentStopSequence() != other.hasCurrentStopSequence()) return false
if (hasCurrentStopSequence())
{
if (currentStopSequence != other.currentStopSequence)
return false
}
if (hasStopId() != other.hasStopId()) return false
if (hasStopId())
{
if (stopId != other.stopId)
return false
}
if (hasCurrentStatus() != other.hasCurrentStatus()) return false
if (hasCurrentStatus())
{
if (currentStatus_ != other.currentStatus_) return false
}
if (hasTimestamp() != other.hasTimestamp()) return false
if (hasTimestamp())
{
if (timestamp != other.timestamp)
return false
}
if (hasCongestionLevel() != other.hasCongestionLevel()) return false
if (hasCongestionLevel())
{
if (congestionLevel_ != other.congestionLevel_) return false
}
if (hasOccupancyStatus() != other.hasOccupancyStatus()) return false
if (hasOccupancyStatus())
{
if (occupancyStatus_ != other.occupancyStatus_) return false
}
if (unknownFields != other.unknownFields) return false
return if (extensionFields != other.extensionFields) false else true
}

override fun hashCode():Int {
if (memoizedHashCode != 0)
{
return memoizedHashCode
}
var hash = 41
hash = 19 * hash + descriptor.hashCode()
if (hasTrip())
{
hash = 37 * hash + TRIP_FIELD_NUMBER
hash = 53 * hash + trip.hashCode()
}
if (hasVehicle())
{
hash = 37 * hash + VEHICLE_FIELD_NUMBER
hash = 53 * hash + vehicle.hashCode()
}
if (hasPosition())
{
hash = 37 * hash + POSITION_FIELD_NUMBER
hash = 53 * hash + position.hashCode()
}
if (hasCurrentStopSequence())
{
hash = 37 * hash + CURRENT_STOP_SEQUENCE_FIELD_NUMBER
hash = 53 * hash + currentStopSequence
}
if (hasStopId())
{
hash = 37 * hash + STOP_ID_FIELD_NUMBER
hash = 53 * hash + stopId.hashCode()
}
if (hasCurrentStatus())
{
hash = 37 * hash + CURRENT_STATUS_FIELD_NUMBER
hash = 53 * hash + currentStatus_
}
if (hasTimestamp())
{
hash = 37 * hash + TIMESTAMP_FIELD_NUMBER
hash = 53 * hash + com.google.protobuf.Internal.hashLong(
timestamp)
}
if (hasCongestionLevel())
{
hash = 37 * hash + CONGESTION_LEVEL_FIELD_NUMBER
hash = 53 * hash + congestionLevel_
}
if (hasOccupancyStatus())
{
hash = 37 * hash + OCCUPANCY_STATUS_FIELD_NUMBER
hash = 53 * hash + occupancyStatus_
}
hash = AbstractMessage.hashFields(hash, extensionFields)
hash = 29 * hash + unknownFields.hashCode()
memoizedHashCode = hash
return hash
}

override fun newBuilderForType():Builder {
return newBuilder()
}

override fun toBuilder():Builder {
return if (this === defaultInstance)
Builder()
else
Builder().mergeFrom(this)
}

override fun newBuilderForType(
parent:com.google.protobuf.GeneratedMessageV3.BuilderParent):Builder {
return Builder(parent)
}

/**
 * <pre>
 * Realtime positioning information for a given vehicle.
</pre> *
 *
 *
 * Protobuf type `com.example.delhitransit.VehiclePosition`
 */
         class Builder:com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.example.delhitransit.GtfsRealtime.VehiclePosition, Builder>,
 // @@protoc_insertion_point(builder_implements:com.example.delhitransit.VehiclePosition)
                com.example.delhitransit.GtfsRealtime.VehiclePositionOrBuilder {

private var bitField0_:Int = 0

private var trip_:com.example.delhitransit.GtfsRealtime.TripDescriptor? = null
private var tripBuilder_:com.google.protobuf.SingleFieldBuilderV3<com.example.delhitransit.GtfsRealtime.TripDescriptor, com.example.delhitransit.GtfsRealtime.TripDescriptor.Builder, com.example.delhitransit.GtfsRealtime.TripDescriptorOrBuilder>? = null

/**
 * <pre>
 * The Trip that this vehicle is serving.
 * Can be empty or partial if the vehicle can not be identified with a given
 * trip instance.
</pre> *
 *
 * `optional .com.example.delhitransit.TripDescriptor trip = 1;`
 */
            override val trip:com.example.delhitransit.GtfsRealtime.TripDescriptor
get() =if (tripBuilder_ == null) {
            if (trip_ == null) com.example.delhitransit.GtfsRealtime.TripDescriptor.defaultInstance else trip_
        } else {
            tripBuilder_!!.message
        }

/**
 * <pre>
 * The Trip that this vehicle is serving.
 * Can be empty or partial if the vehicle can not be identified with a given
 * trip instance.
</pre> *
 *
 * `optional .com.example.delhitransit.TripDescriptor trip = 1;`
 */
             val tripBuilder:com.example.delhitransit.GtfsRealtime.TripDescriptor.Builder
get() {
bitField0_ = bitField0_ or 0x00000001
onChanged()
return tripFieldBuilder.builder
}

/**
 * <pre>
 * The Trip that this vehicle is serving.
 * Can be empty or partial if the vehicle can not be identified with a given
 * trip instance.
</pre> *
 *
 * `optional .com.example.delhitransit.TripDescriptor trip = 1;`
 */
            override val tripOrBuilder:com.example.delhitransit.GtfsRealtime.TripDescriptorOrBuilder
get() =if (tripBuilder_ != null) {
            tripBuilder_!!.messageOrBuilder
        } else {
            if (trip_ == null)
                com.example.delhitransit.GtfsRealtime.TripDescriptor.defaultInstance
            else
                trip_
        }

/**
 * <pre>
 * The Trip that this vehicle is serving.
 * Can be empty or partial if the vehicle can not be identified with a given
 * trip instance.
</pre> *
 *
 * `optional .com.example.delhitransit.TripDescriptor trip = 1;`
 */
            private val tripFieldBuilder:com.google.protobuf.SingleFieldBuilderV3<com.example.delhitransit.GtfsRealtime.TripDescriptor, com.example.delhitransit.GtfsRealtime.TripDescriptor.Builder, com.example.delhitransit.GtfsRealtime.TripDescriptorOrBuilder>
get() {
if (tripBuilder_ == null)
{
tripBuilder_ = com.google.protobuf.SingleFieldBuilderV3(
trip,
parentForChildren,
isClean)
trip_ = null
}
return tripBuilder_
}

private var vehicle_:com.example.delhitransit.GtfsRealtime.VehicleDescriptor? = null
private var vehicleBuilder_:com.google.protobuf.SingleFieldBuilderV3<com.example.delhitransit.GtfsRealtime.VehicleDescriptor, com.example.delhitransit.GtfsRealtime.VehicleDescriptor.Builder, com.example.delhitransit.GtfsRealtime.VehicleDescriptorOrBuilder>? = null

/**
 * <pre>
 * Additional information on the vehicle that is serving this trip.
</pre> *
 *
 * `optional .com.example.delhitransit.VehicleDescriptor vehicle = 8;`
 */
            override val vehicle:com.example.delhitransit.GtfsRealtime.VehicleDescriptor
get() =if (vehicleBuilder_ == null) {
            if (vehicle_ == null) com.example.delhitransit.GtfsRealtime.VehicleDescriptor.defaultInstance else vehicle_
        } else {
            vehicleBuilder_!!.message
        }

/**
 * <pre>
 * Additional information on the vehicle that is serving this trip.
</pre> *
 *
 * `optional .com.example.delhitransit.VehicleDescriptor vehicle = 8;`
 */
             val vehicleBuilder:com.example.delhitransit.GtfsRealtime.VehicleDescriptor.Builder
get() {
bitField0_ = bitField0_ or 0x00000002
onChanged()
return vehicleFieldBuilder.builder
}

/**
 * <pre>
 * Additional information on the vehicle that is serving this trip.
</pre> *
 *
 * `optional .com.example.delhitransit.VehicleDescriptor vehicle = 8;`
 */
            override val vehicleOrBuilder:com.example.delhitransit.GtfsRealtime.VehicleDescriptorOrBuilder
get() =if (vehicleBuilder_ != null) {
            vehicleBuilder_!!.messageOrBuilder
        } else {
            if (vehicle_ == null)
                com.example.delhitransit.GtfsRealtime.VehicleDescriptor.defaultInstance
            else
                vehicle_
        }

/**
 * <pre>
 * Additional information on the vehicle that is serving this trip.
</pre> *
 *
 * `optional .com.example.delhitransit.VehicleDescriptor vehicle = 8;`
 */
            private val vehicleFieldBuilder:com.google.protobuf.SingleFieldBuilderV3<com.example.delhitransit.GtfsRealtime.VehicleDescriptor, com.example.delhitransit.GtfsRealtime.VehicleDescriptor.Builder, com.example.delhitransit.GtfsRealtime.VehicleDescriptorOrBuilder>
get() {
if (vehicleBuilder_ == null)
{
vehicleBuilder_ = com.google.protobuf.SingleFieldBuilderV3(
vehicle,
parentForChildren,
isClean)
vehicle_ = null
}
return vehicleBuilder_
}

private var position_:com.example.delhitransit.GtfsRealtime.Position? = null
private var positionBuilder_:com.google.protobuf.SingleFieldBuilderV3<com.example.delhitransit.GtfsRealtime.Position, com.example.delhitransit.GtfsRealtime.Position.Builder, com.example.delhitransit.GtfsRealtime.PositionOrBuilder>? = null

/**
 * <pre>
 * Current position of this vehicle.
</pre> *
 *
 * `optional .com.example.delhitransit.Position position = 2;`
 */
            override val position:com.example.delhitransit.GtfsRealtime.Position
get() =if (positionBuilder_ == null) {
            if (position_ == null) com.example.delhitransit.GtfsRealtime.Position.defaultInstance else position_
        } else {
            positionBuilder_!!.message
        }

/**
 * <pre>
 * Current position of this vehicle.
</pre> *
 *
 * `optional .com.example.delhitransit.Position position = 2;`
 */
             val positionBuilder:com.example.delhitransit.GtfsRealtime.Position.Builder
get() {
bitField0_ = bitField0_ or 0x00000004
onChanged()
return positionFieldBuilder.builder
}

/**
 * <pre>
 * Current position of this vehicle.
</pre> *
 *
 * `optional .com.example.delhitransit.Position position = 2;`
 */
            override val positionOrBuilder:com.example.delhitransit.GtfsRealtime.PositionOrBuilder
get() =if (positionBuilder_ != null) {
            positionBuilder_!!.messageOrBuilder
        } else {
            if (position_ == null)
                com.example.delhitransit.GtfsRealtime.Position.defaultInstance
            else
                position_
        }

/**
 * <pre>
 * Current position of this vehicle.
</pre> *
 *
 * `optional .com.example.delhitransit.Position position = 2;`
 */
            private val positionFieldBuilder:com.google.protobuf.SingleFieldBuilderV3<com.example.delhitransit.GtfsRealtime.Position, com.example.delhitransit.GtfsRealtime.Position.Builder, com.example.delhitransit.GtfsRealtime.PositionOrBuilder>
get() {
if (positionBuilder_ == null)
{
positionBuilder_ = com.google.protobuf.SingleFieldBuilderV3(
position,
parentForChildren,
isClean)
position_ = null
}
return positionBuilder_
}

/**
 * <pre>
 * The stop sequence index of the current stop. The meaning of
 * current_stop_sequence (i.e., the stop that it refers to) is determined by
 * current_status.
 * If current_status is missing IN_TRANSIT_TO is assumed.
</pre> *
 *
 * `optional uint32 current_stop_sequence = 3;`
 */
            override var currentStopSequence:Int = 0
private set

private var stopId_:Any? = ""

/**
 * <pre>
 * Identifies the current stop. The value must be the same as in stops.txt in
 * the corresponding GTFS feed.
</pre> *
 *
 * `optional string stop_id = 7;`
 */
            override val stopId:java.lang.String
get() {
val ref = stopId_
if (ref !is java.lang.String)
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
stopId_ = s
}
return s
}
else
{
return ref
}
}

/**
 * <pre>
 * Identifies the current stop. The value must be the same as in stops.txt in
 * the corresponding GTFS feed.
</pre> *
 *
 * `optional string stop_id = 7;`
 */
            override val stopIdBytes:com.google.protobuf.ByteString
get() {
val ref = stopId_
if (ref is String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
stopId_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}

private var currentStatus_ = 2

/**
 * <pre>
 * The exact status of the vehicle with respect to the current stop.
 * Ignored if current_stop_sequence is missing.
</pre> *
 *
 * `optional .com.example.delhitransit.VehiclePosition.VehicleStopStatus current_status = 4 [default = IN_TRANSIT_TO];`
 */
            override val currentStatus:com.example.delhitransit.GtfsRealtime.VehiclePosition.VehicleStopStatus
get() {
val result = com.example.delhitransit.GtfsRealtime.VehiclePosition.VehicleStopStatus.valueOf(currentStatus_)
return result ?: com.example.delhitransit.GtfsRealtime.VehiclePosition.VehicleStopStatus.IN_TRANSIT_TO
}

/**
 * <pre>
 * Moment at which the vehicle's position was measured. In POSIX time
 * (i.e., number of seconds since January 1st 1970 00:00:00 UTC).
</pre> *
 *
 * `optional uint64 timestamp = 5;`
 */
            override var timestamp:Long = 0
private set

private var congestionLevel_ = 0

/**
 * `optional .com.example.delhitransit.VehiclePosition.CongestionLevel congestion_level = 6;`
 */
            override val congestionLevel:com.example.delhitransit.GtfsRealtime.VehiclePosition.CongestionLevel
get() {
val result = com.example.delhitransit.GtfsRealtime.VehiclePosition.CongestionLevel.valueOf(congestionLevel_)
return result
                ?: com.example.delhitransit.GtfsRealtime.VehiclePosition.CongestionLevel.UNKNOWN_CONGESTION_LEVEL
}

private var occupancyStatus_ = 0

/**
 * `optional .com.example.delhitransit.VehiclePosition.OccupancyStatus occupancy_status = 9;`
 */
            override val occupancyStatus:com.example.delhitransit.GtfsRealtime.VehiclePosition.OccupancyStatus
get() {
val result = com.example.delhitransit.GtfsRealtime.VehiclePosition.OccupancyStatus.valueOf(occupancyStatus_)
return result ?: com.example.delhitransit.GtfsRealtime.VehiclePosition.OccupancyStatus.EMPTY
}

override fun internalGetFieldAccessorTable():com.google.protobuf.GeneratedMessageV3.FieldAccessorTable {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_VehiclePosition_fieldAccessorTable
.ensureFieldAccessorsInitialized(
com.example.delhitransit.GtfsRealtime.VehiclePosition::class.java, com.example.delhitransit.GtfsRealtime.VehiclePosition.Builder::class.java)
}

 // Construct using com.example.delhitransit.GtfsRealtime.VehiclePosition.newBuilder()
            private constructor() {
maybeForceBuilderInitialization()
}

private constructor(
parent:com.google.protobuf.GeneratedMessageV3.BuilderParent) : super(parent) {
maybeForceBuilderInitialization()
}

private fun maybeForceBuilderInitialization() {
if (com.google.protobuf.GeneratedMessageV3
.alwaysUseFieldBuilders)
{
tripFieldBuilder
vehicleFieldBuilder
positionFieldBuilder
}
}

override fun clear():Builder {
super.clear()
if (tripBuilder_ == null)
{
trip_ = null
}
else
{
tripBuilder_!!.clear()
}
bitField0_ = bitField0_ and 0x00000001.inv()
if (vehicleBuilder_ == null)
{
vehicle_ = null
}
else
{
vehicleBuilder_!!.clear()
}
bitField0_ = bitField0_ and 0x00000002.inv()
if (positionBuilder_ == null)
{
position_ = null
}
else
{
positionBuilder_!!.clear()
}
bitField0_ = bitField0_ and 0x00000004.inv()
currentStopSequence = 0
bitField0_ = bitField0_ and 0x00000008.inv()
stopId_ = ""
bitField0_ = bitField0_ and 0x00000010.inv()
currentStatus_ = 2
bitField0_ = bitField0_ and 0x00000020.inv()
timestamp = 0L
bitField0_ = bitField0_ and 0x00000040.inv()
congestionLevel_ = 0
bitField0_ = bitField0_ and 0x00000080.inv()
occupancyStatus_ = 0
bitField0_ = bitField0_ and 0x00000100.inv()
return this
}

override fun getDescriptorForType():com.google.protobuf.Descriptors.Descriptor {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_VehiclePosition_descriptor
}

override fun getDefaultInstanceForType():com.example.delhitransit.GtfsRealtime.VehiclePosition {
return com.example.delhitransit.GtfsRealtime.VehiclePosition.defaultInstance
}

override fun build():com.example.delhitransit.GtfsRealtime.VehiclePosition {
val result = buildPartial()
if (!result.isInitialized)
{
throw AbstractMessage.Builder.newUninitializedMessageException(result)
}
return result
}

override fun buildPartial():com.example.delhitransit.GtfsRealtime.VehiclePosition {
val result = com.example.delhitransit.GtfsRealtime.VehiclePosition(this)
val from_bitField0_ = bitField0_
var to_bitField0_ = 0
if (from_bitField0_ and 0x00000001 != 0)
{
if (tripBuilder_ == null)
{
result.trip_ = trip_
}
else
{
result.trip_ = tripBuilder_!!.build()
}
to_bitField0_ = to_bitField0_ or 0x00000001
}
if (from_bitField0_ and 0x00000002 != 0)
{
if (vehicleBuilder_ == null)
{
result.vehicle_ = vehicle_
}
else
{
result.vehicle_ = vehicleBuilder_!!.build()
}
to_bitField0_ = to_bitField0_ or 0x00000002
}
if (from_bitField0_ and 0x00000004 != 0)
{
if (positionBuilder_ == null)
{
result.position_ = position_
}
else
{
result.position_ = positionBuilder_!!.build()
}
to_bitField0_ = to_bitField0_ or 0x00000004
}
if (from_bitField0_ and 0x00000008 != 0)
{
result.currentStopSequence = currentStopSequence
to_bitField0_ = to_bitField0_ or 0x00000008
}
if (from_bitField0_ and 0x00000010 != 0)
{
to_bitField0_ = to_bitField0_ or 0x00000010
}
result.stopId_ = stopId_
if (from_bitField0_ and 0x00000020 != 0)
{
to_bitField0_ = to_bitField0_ or 0x00000020
}
result.currentStatus_ = currentStatus_
if (from_bitField0_ and 0x00000040 != 0)
{
result.timestamp = timestamp
to_bitField0_ = to_bitField0_ or 0x00000040
}
if (from_bitField0_ and 0x00000080 != 0)
{
to_bitField0_ = to_bitField0_ or 0x00000080
}
result.congestionLevel_ = congestionLevel_
if (from_bitField0_ and 0x00000100 != 0)
{
to_bitField0_ = to_bitField0_ or 0x00000100
}
result.occupancyStatus_ = occupancyStatus_
result.bitField0_ = to_bitField0_
onBuilt()
return result
}

override fun clone():Builder {
return super.clone()
}

override fun setField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
value:Any):Builder {
return super.setField(field, value)
}

override fun clearField(
field:com.google.protobuf.Descriptors.FieldDescriptor):Builder {
return super.clearField(field)
}

override fun clearOneof(
oneof:com.google.protobuf.Descriptors.OneofDescriptor):Builder {
return super.clearOneof(oneof)
}

override fun setRepeatedField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
index:Int, value:Any):Builder {
return super.setRepeatedField(field, index, value)
}

override fun addRepeatedField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
value:Any):Builder {
return super.addRepeatedField(field, value)
}

override fun <Type> setExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.VehiclePosition, Type>,
value:Type):Builder {
return super.setExtension(extension, value)
}

override fun <Type> setExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.VehiclePosition, List<Type>>,
index:Int, value:Type):Builder {
return super.setExtension(extension, index, value)
}

override fun <Type> addExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.VehiclePosition, List<Type>>,
value:Type):Builder {
return super.addExtension(extension, value)
}

override fun <Type> clearExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.VehiclePosition, *>):Builder {
return super.clearExtension<Any>(extension)
}

override fun mergeFrom(other:com.google.protobuf.Message):Builder {
if (other is com.example.delhitransit.GtfsRealtime.VehiclePosition)
{
return mergeFrom(other)
}
else
{
super.mergeFrom(other)
return this
}
}

 fun mergeFrom(other:com.example.delhitransit.GtfsRealtime.VehiclePosition?):Builder {
if (other === com.example.delhitransit.GtfsRealtime.VehiclePosition.defaultInstance)
return this
if (other!!.hasTrip())
{
mergeTrip(other.trip)
}
if (other.hasVehicle())
{
mergeVehicle(other.vehicle)
}
if (other.hasPosition())
{
mergePosition(other.position)
}
if (other.hasCurrentStopSequence())
{
setCurrentStopSequence(other.currentStopSequence)
}
if (other.hasStopId())
{
bitField0_ = bitField0_ or 0x00000010
stopId_ = other.stopId_
onChanged()
}
if (other.hasCurrentStatus())
{
setCurrentStatus(other.currentStatus)
}
if (other.hasTimestamp())
{
setTimestamp(other.timestamp)
}
if (other.hasCongestionLevel())
{
setCongestionLevel(other.congestionLevel)
}
if (other.hasOccupancyStatus())
{
setOccupancyStatus(other.occupancyStatus)
}
this.mergeExtensionFields(other)
this.mergeUnknownFields(other.unknownFields)
onChanged()
return this
}

override fun isInitialized():Boolean {
if (hasTrip())
{
if (!trip.isInitialized)
{
return false
}
}
if (hasVehicle())
{
if (!vehicle.isInitialized)
{
return false
}
}
if (hasPosition())
{
if (!position.isInitialized)
{
return false
}
}
return if (!extensionsAreInitialized()) {
            false
        } else true
}

@Throws(java.io.IOException::class)
override fun mergeFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):Builder {
var parsedMessage:com.example.delhitransit.GtfsRealtime.VehiclePosition? = null
try
{
parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry)
}
catch (e:com.google.protobuf.InvalidProtocolBufferException) {
parsedMessage = e.unfinishedMessage as com.example.delhitransit.GtfsRealtime.VehiclePosition
throw e.unwrapIOException()
}
finally
{
if (parsedMessage != null)
{
mergeFrom(parsedMessage)
}
}
return this
}

/**
 * <pre>
 * The Trip that this vehicle is serving.
 * Can be empty or partial if the vehicle can not be identified with a given
 * trip instance.
</pre> *
 *
 * `optional .com.example.delhitransit.TripDescriptor trip = 1;`
 */
            override fun hasTrip():Boolean {
return bitField0_ and 0x00000001 != 0
}

/**
 * <pre>
 * The Trip that this vehicle is serving.
 * Can be empty or partial if the vehicle can not be identified with a given
 * trip instance.
</pre> *
 *
 * `optional .com.example.delhitransit.TripDescriptor trip = 1;`
 */
             fun setTrip(value:com.example.delhitransit.GtfsRealtime.TripDescriptor?):Builder {
if (tripBuilder_ == null)
{
if (value == null)
{
throw NullPointerException()
}
trip_ = value
onChanged()
}
else
{
tripBuilder_!!.setMessage(value!!)
}
bitField0_ = bitField0_ or 0x00000001
return this
}

/**
 * <pre>
 * The Trip that this vehicle is serving.
 * Can be empty or partial if the vehicle can not be identified with a given
 * trip instance.
</pre> *
 *
 * `optional .com.example.delhitransit.TripDescriptor trip = 1;`
 */
             fun setTrip(
builderForValue:com.example.delhitransit.GtfsRealtime.TripDescriptor.Builder):Builder {
if (tripBuilder_ == null)
{
trip_ = builderForValue.build()
onChanged()
}
else
{
tripBuilder_!!.setMessage(builderForValue.build())
}
bitField0_ = bitField0_ or 0x00000001
return this
}

/**
 * <pre>
 * The Trip that this vehicle is serving.
 * Can be empty or partial if the vehicle can not be identified with a given
 * trip instance.
</pre> *
 *
 * `optional .com.example.delhitransit.TripDescriptor trip = 1;`
 */
             fun mergeTrip(value:com.example.delhitransit.GtfsRealtime.TripDescriptor):Builder {
if (tripBuilder_ == null)
{
if (bitField0_ and 0x00000001 != 0 &&
trip_ != null &&
trip_ !== com.example.delhitransit.GtfsRealtime.TripDescriptor.defaultInstance)
{
trip_ = com.example.delhitransit.GtfsRealtime.TripDescriptor.newBuilder(trip_).mergeFrom(value).buildPartial()
}
else
{
trip_ = value
}
onChanged()
}
else
{
tripBuilder_!!.mergeFrom(value)
}
bitField0_ = bitField0_ or 0x00000001
return this
}

/**
 * <pre>
 * The Trip that this vehicle is serving.
 * Can be empty or partial if the vehicle can not be identified with a given
 * trip instance.
</pre> *
 *
 * `optional .com.example.delhitransit.TripDescriptor trip = 1;`
 */
             fun clearTrip():Builder {
if (tripBuilder_ == null)
{
trip_ = null
onChanged()
}
else
{
tripBuilder_!!.clear()
}
bitField0_ = bitField0_ and 0x00000001.inv()
return this
}

/**
 * <pre>
 * Additional information on the vehicle that is serving this trip.
</pre> *
 *
 * `optional .com.example.delhitransit.VehicleDescriptor vehicle = 8;`
 */
            override fun hasVehicle():Boolean {
return bitField0_ and 0x00000002 != 0
}

/**
 * <pre>
 * Additional information on the vehicle that is serving this trip.
</pre> *
 *
 * `optional .com.example.delhitransit.VehicleDescriptor vehicle = 8;`
 */
             fun setVehicle(value:com.example.delhitransit.GtfsRealtime.VehicleDescriptor?):Builder {
if (vehicleBuilder_ == null)
{
if (value == null)
{
throw NullPointerException()
}
vehicle_ = value
onChanged()
}
else
{
vehicleBuilder_!!.setMessage(value!!)
}
bitField0_ = bitField0_ or 0x00000002
return this
}

/**
 * <pre>
 * Additional information on the vehicle that is serving this trip.
</pre> *
 *
 * `optional .com.example.delhitransit.VehicleDescriptor vehicle = 8;`
 */
             fun setVehicle(
builderForValue:com.example.delhitransit.GtfsRealtime.VehicleDescriptor.Builder):Builder {
if (vehicleBuilder_ == null)
{
vehicle_ = builderForValue.build()
onChanged()
}
else
{
vehicleBuilder_!!.setMessage(builderForValue.build())
}
bitField0_ = bitField0_ or 0x00000002
return this
}

/**
 * <pre>
 * Additional information on the vehicle that is serving this trip.
</pre> *
 *
 * `optional .com.example.delhitransit.VehicleDescriptor vehicle = 8;`
 */
             fun mergeVehicle(value:com.example.delhitransit.GtfsRealtime.VehicleDescriptor):Builder {
if (vehicleBuilder_ == null)
{
if (bitField0_ and 0x00000002 != 0 &&
vehicle_ != null &&
vehicle_ !== com.example.delhitransit.GtfsRealtime.VehicleDescriptor.defaultInstance)
{
vehicle_ = com.example.delhitransit.GtfsRealtime.VehicleDescriptor.newBuilder(vehicle_).mergeFrom(value).buildPartial()
}
else
{
vehicle_ = value
}
onChanged()
}
else
{
vehicleBuilder_!!.mergeFrom(value)
}
bitField0_ = bitField0_ or 0x00000002
return this
}

/**
 * <pre>
 * Additional information on the vehicle that is serving this trip.
</pre> *
 *
 * `optional .com.example.delhitransit.VehicleDescriptor vehicle = 8;`
 */
             fun clearVehicle():Builder {
if (vehicleBuilder_ == null)
{
vehicle_ = null
onChanged()
}
else
{
vehicleBuilder_!!.clear()
}
bitField0_ = bitField0_ and 0x00000002.inv()
return this
}

/**
 * <pre>
 * Current position of this vehicle.
</pre> *
 *
 * `optional .com.example.delhitransit.Position position = 2;`
 */
            override fun hasPosition():Boolean {
return bitField0_ and 0x00000004 != 0
}

/**
 * <pre>
 * Current position of this vehicle.
</pre> *
 *
 * `optional .com.example.delhitransit.Position position = 2;`
 */
             fun setPosition(value:com.example.delhitransit.GtfsRealtime.Position?):Builder {
if (positionBuilder_ == null)
{
if (value == null)
{
throw NullPointerException()
}
position_ = value
onChanged()
}
else
{
positionBuilder_!!.setMessage(value!!)
}
bitField0_ = bitField0_ or 0x00000004
return this
}

/**
 * <pre>
 * Current position of this vehicle.
</pre> *
 *
 * `optional .com.example.delhitransit.Position position = 2;`
 */
             fun setPosition(
builderForValue:com.example.delhitransit.GtfsRealtime.Position.Builder):Builder {
if (positionBuilder_ == null)
{
position_ = builderForValue.build()
onChanged()
}
else
{
positionBuilder_!!.setMessage(builderForValue.build())
}
bitField0_ = bitField0_ or 0x00000004
return this
}

/**
 * <pre>
 * Current position of this vehicle.
</pre> *
 *
 * `optional .com.example.delhitransit.Position position = 2;`
 */
             fun mergePosition(value:com.example.delhitransit.GtfsRealtime.Position):Builder {
if (positionBuilder_ == null)
{
if (bitField0_ and 0x00000004 != 0 &&
position_ != null &&
position_ !== com.example.delhitransit.GtfsRealtime.Position.defaultInstance)
{
position_ = com.example.delhitransit.GtfsRealtime.Position.newBuilder(position_).mergeFrom(value).buildPartial()
}
else
{
position_ = value
}
onChanged()
}
else
{
positionBuilder_!!.mergeFrom(value)
}
bitField0_ = bitField0_ or 0x00000004
return this
}

/**
 * <pre>
 * Current position of this vehicle.
</pre> *
 *
 * `optional .com.example.delhitransit.Position position = 2;`
 */
             fun clearPosition():Builder {
if (positionBuilder_ == null)
{
position_ = null
onChanged()
}
else
{
positionBuilder_!!.clear()
}
bitField0_ = bitField0_ and 0x00000004.inv()
return this
}

/**
 * <pre>
 * The stop sequence index of the current stop. The meaning of
 * current_stop_sequence (i.e., the stop that it refers to) is determined by
 * current_status.
 * If current_status is missing IN_TRANSIT_TO is assumed.
</pre> *
 *
 * `optional uint32 current_stop_sequence = 3;`
 */
            override fun hasCurrentStopSequence():Boolean {
return bitField0_ and 0x00000008 != 0
}

/**
 * <pre>
 * The stop sequence index of the current stop. The meaning of
 * current_stop_sequence (i.e., the stop that it refers to) is determined by
 * current_status.
 * If current_status is missing IN_TRANSIT_TO is assumed.
</pre> *
 *
 * `optional uint32 current_stop_sequence = 3;`
 */
             fun setCurrentStopSequence(value:Int):Builder {
bitField0_ = bitField0_ or 0x00000008
currentStopSequence = value
onChanged()
return this
}

/**
 * <pre>
 * The stop sequence index of the current stop. The meaning of
 * current_stop_sequence (i.e., the stop that it refers to) is determined by
 * current_status.
 * If current_status is missing IN_TRANSIT_TO is assumed.
</pre> *
 *
 * `optional uint32 current_stop_sequence = 3;`
 */
             fun clearCurrentStopSequence():Builder {
bitField0_ = bitField0_ and 0x00000008.inv()
currentStopSequence = 0
onChanged()
return this
}

/**
 * <pre>
 * Identifies the current stop. The value must be the same as in stops.txt in
 * the corresponding GTFS feed.
</pre> *
 *
 * `optional string stop_id = 7;`
 */
            override fun hasStopId():Boolean {
return bitField0_ and 0x00000010 != 0
}

/**
 * <pre>
 * Identifies the current stop. The value must be the same as in stops.txt in
 * the corresponding GTFS feed.
</pre> *
 *
 * `optional string stop_id = 7;`
 */
             fun setStopId(
value:java.lang.String?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000010
stopId_ = value
onChanged()
return this
}

/**
 * <pre>
 * Identifies the current stop. The value must be the same as in stops.txt in
 * the corresponding GTFS feed.
</pre> *
 *
 * `optional string stop_id = 7;`
 */
             fun clearStopId():Builder {
bitField0_ = bitField0_ and 0x00000010.inv()
stopId_ = defaultInstance.stopId
onChanged()
return this
}

/**
 * <pre>
 * Identifies the current stop. The value must be the same as in stops.txt in
 * the corresponding GTFS feed.
</pre> *
 *
 * `optional string stop_id = 7;`
 */
             fun setStopIdBytes(
value:com.google.protobuf.ByteString?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000010
stopId_ = value
onChanged()
return this
}

/**
 * <pre>
 * The exact status of the vehicle with respect to the current stop.
 * Ignored if current_stop_sequence is missing.
</pre> *
 *
 * `optional .com.example.delhitransit.VehiclePosition.VehicleStopStatus current_status = 4 [default = IN_TRANSIT_TO];`
 */
            override fun hasCurrentStatus():Boolean {
return bitField0_ and 0x00000020 != 0
}

/**
 * <pre>
 * The exact status of the vehicle with respect to the current stop.
 * Ignored if current_stop_sequence is missing.
</pre> *
 *
 * `optional .com.example.delhitransit.VehiclePosition.VehicleStopStatus current_status = 4 [default = IN_TRANSIT_TO];`
 */
             fun setCurrentStatus(value:com.example.delhitransit.GtfsRealtime.VehiclePosition.VehicleStopStatus?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000020
currentStatus_ = value.number
onChanged()
return this
}

/**
 * <pre>
 * The exact status of the vehicle with respect to the current stop.
 * Ignored if current_stop_sequence is missing.
</pre> *
 *
 * `optional .com.example.delhitransit.VehiclePosition.VehicleStopStatus current_status = 4 [default = IN_TRANSIT_TO];`
 */
             fun clearCurrentStatus():Builder {
bitField0_ = bitField0_ and 0x00000020.inv()
currentStatus_ = 2
onChanged()
return this
}

/**
 * <pre>
 * Moment at which the vehicle's position was measured. In POSIX time
 * (i.e., number of seconds since January 1st 1970 00:00:00 UTC).
</pre> *
 *
 * `optional uint64 timestamp = 5;`
 */
            override fun hasTimestamp():Boolean {
return bitField0_ and 0x00000040 != 0
}

/**
 * <pre>
 * Moment at which the vehicle's position was measured. In POSIX time
 * (i.e., number of seconds since January 1st 1970 00:00:00 UTC).
</pre> *
 *
 * `optional uint64 timestamp = 5;`
 */
             fun setTimestamp(value:Long):Builder {
bitField0_ = bitField0_ or 0x00000040
timestamp = value
onChanged()
return this
}

/**
 * <pre>
 * Moment at which the vehicle's position was measured. In POSIX time
 * (i.e., number of seconds since January 1st 1970 00:00:00 UTC).
</pre> *
 *
 * `optional uint64 timestamp = 5;`
 */
             fun clearTimestamp():Builder {
bitField0_ = bitField0_ and 0x00000040.inv()
timestamp = 0L
onChanged()
return this
}

/**
 * `optional .com.example.delhitransit.VehiclePosition.CongestionLevel congestion_level = 6;`
 */
            override fun hasCongestionLevel():Boolean {
return bitField0_ and 0x00000080 != 0
}

/**
 * `optional .com.example.delhitransit.VehiclePosition.CongestionLevel congestion_level = 6;`
 */
             fun setCongestionLevel(value:com.example.delhitransit.GtfsRealtime.VehiclePosition.CongestionLevel?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000080
congestionLevel_ = value.number
onChanged()
return this
}

/**
 * `optional .com.example.delhitransit.VehiclePosition.CongestionLevel congestion_level = 6;`
 */
             fun clearCongestionLevel():Builder {
bitField0_ = bitField0_ and 0x00000080.inv()
congestionLevel_ = 0
onChanged()
return this
}

/**
 * `optional .com.example.delhitransit.VehiclePosition.OccupancyStatus occupancy_status = 9;`
 */
            override fun hasOccupancyStatus():Boolean {
return bitField0_ and 0x00000100 != 0
}

/**
 * `optional .com.example.delhitransit.VehiclePosition.OccupancyStatus occupancy_status = 9;`
 */
             fun setOccupancyStatus(value:com.example.delhitransit.GtfsRealtime.VehiclePosition.OccupancyStatus?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000100
occupancyStatus_ = value.number
onChanged()
return this
}

/**
 * `optional .com.example.delhitransit.VehiclePosition.OccupancyStatus occupancy_status = 9;`
 */
             fun clearOccupancyStatus():Builder {
bitField0_ = bitField0_ and 0x00000100.inv()
occupancyStatus_ = 0
onChanged()
return this
}

override fun setUnknownFields(
unknownFields:com.google.protobuf.UnknownFieldSet):Builder {
return super.setUnknownFields(unknownFields)
}

override fun mergeUnknownFields(
unknownFields:com.google.protobuf.UnknownFieldSet):Builder {
return super.mergeUnknownFields(unknownFields)
}

companion object {
 val descriptor:com.google.protobuf.Descriptors.Descriptor
get() =com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_VehiclePosition_descriptor
}


 // @@protoc_insertion_point(builder_scope:com.example.delhitransit.VehiclePosition)
        }

override fun getParserForType():com.google.protobuf.Parser<VehiclePosition> {
return PARSER
}

override fun getDefaultInstanceForType():com.example.delhitransit.GtfsRealtime.VehiclePosition {
return defaultInstance
}

companion object {
private val serialVersionUID = 0L

 val descriptor:com.google.protobuf.Descriptors.Descriptor
get() =com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_VehiclePosition_descriptor
 val TRIP_FIELD_NUMBER = 1

 val VEHICLE_FIELD_NUMBER = 8

 val POSITION_FIELD_NUMBER = 2

 val CURRENT_STOP_SEQUENCE_FIELD_NUMBER = 3

 val STOP_ID_FIELD_NUMBER = 7

 val CURRENT_STATUS_FIELD_NUMBER = 4

 val TIMESTAMP_FIELD_NUMBER = 5

 val CONGESTION_LEVEL_FIELD_NUMBER = 6

 val OCCUPANCY_STATUS_FIELD_NUMBER = 9

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:java.nio.ByteBuffer):com.example.delhitransit.GtfsRealtime.VehiclePosition {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:java.nio.ByteBuffer,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.VehiclePosition {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:com.google.protobuf.ByteString):com.example.delhitransit.GtfsRealtime.VehiclePosition {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:com.google.protobuf.ByteString,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.VehiclePosition {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(data:ByteArray):com.example.delhitransit.GtfsRealtime.VehiclePosition {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:ByteArray,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.VehiclePosition {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseFrom(input:java.io.InputStream):com.example.delhitransit.GtfsRealtime.VehiclePosition {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:java.io.InputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.VehiclePosition {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseDelimitedFrom(input:java.io.InputStream):com.example.delhitransit.GtfsRealtime.VehiclePosition {
return com.google.protobuf.GeneratedMessageV3
.parseDelimitedWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseDelimitedFrom(
input:java.io.InputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.VehiclePosition {
return com.google.protobuf.GeneratedMessageV3
.parseDelimitedWithIOException(PARSER, input, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:com.google.protobuf.CodedInputStream):com.example.delhitransit.GtfsRealtime.VehiclePosition {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.VehiclePosition {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input, extensionRegistry)
}

 fun newBuilder():Builder {
return defaultInstance.toBuilder()
}

 fun newBuilder(prototype:com.example.delhitransit.GtfsRealtime.VehiclePosition):Builder {
return defaultInstance.toBuilder().mergeFrom(prototype)
}

 // @@protoc_insertion_point(class_scope:com.example.delhitransit.VehiclePosition)
         val defaultInstance:com.example.delhitransit.GtfsRealtime.VehiclePosition

init{
defaultInstance = com.example.delhitransit.GtfsRealtime.VehiclePosition()
}

@Deprecated("")
 val PARSER:com.google.protobuf.Parser<VehiclePosition> = object:com.google.protobuf.AbstractParser<VehiclePosition>() {
@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
override fun parsePartialFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):VehiclePosition {
return VehiclePosition(input, extensionRegistry)
}
}

 fun parser():com.google.protobuf.Parser<VehiclePosition> {
return PARSER
}
}

}

 interface AlertOrBuilder:
 // @@protoc_insertion_point(interface_extends:com.example.delhitransit.Alert)
            com.google.protobuf.GeneratedMessageV3.ExtendableMessageOrBuilder<Alert> {

/**
 * <pre>
 * Time when the alert should be shown to the user. If missing, the
 * alert will be shown as long as it appears in the feed.
 * If multiple ranges are given, the alert will be shown during all of them.
</pre> *
 *
 * `repeated .com.example.delhitransit.TimeRange active_period = 1;`
 */
         val activePeriodList:List<com.example.delhitransit.GtfsRealtime.TimeRange>

/**
 * <pre>
 * Time when the alert should be shown to the user. If missing, the
 * alert will be shown as long as it appears in the feed.
 * If multiple ranges are given, the alert will be shown during all of them.
</pre> *
 *
 * `repeated .com.example.delhitransit.TimeRange active_period = 1;`
 */
         val activePeriodCount:Int

/**
 * <pre>
 * Time when the alert should be shown to the user. If missing, the
 * alert will be shown as long as it appears in the feed.
 * If multiple ranges are given, the alert will be shown during all of them.
</pre> *
 *
 * `repeated .com.example.delhitransit.TimeRange active_period = 1;`
 */
         val activePeriodOrBuilderList:List< com.example.delhitransit.GtfsRealtime.TimeRangeOrBuilder>

/**
 * <pre>
 * Entities whose users we should notify of this alert.
</pre> *
 *
 * `repeated .com.example.delhitransit.EntitySelector informed_entity = 5;`
 */
         val informedEntityList:List<com.example.delhitransit.GtfsRealtime.EntitySelector>

/**
 * <pre>
 * Entities whose users we should notify of this alert.
</pre> *
 *
 * `repeated .com.example.delhitransit.EntitySelector informed_entity = 5;`
 */
         val informedEntityCount:Int

/**
 * <pre>
 * Entities whose users we should notify of this alert.
</pre> *
 *
 * `repeated .com.example.delhitransit.EntitySelector informed_entity = 5;`
 */
         val informedEntityOrBuilderList:List< com.example.delhitransit.GtfsRealtime.EntitySelectorOrBuilder>

/**
 * `optional .com.example.delhitransit.Alert.Cause cause = 6 [default = UNKNOWN_CAUSE];`
 */
         val cause:com.example.delhitransit.GtfsRealtime.Alert.Cause

/**
 * `optional .com.example.delhitransit.Alert.Effect effect = 7 [default = UNKNOWN_EFFECT];`
 */
         val effect:com.example.delhitransit.GtfsRealtime.Alert.Effect

/**
 * <pre>
 * The URL which provides additional information about the alert.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString url = 8;`
 */
         val url:com.example.delhitransit.GtfsRealtime.TranslatedString

/**
 * <pre>
 * The URL which provides additional information about the alert.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString url = 8;`
 */
         val urlOrBuilder:com.example.delhitransit.GtfsRealtime.TranslatedStringOrBuilder

/**
 * <pre>
 * Alert header. Contains a short summary of the alert text as plain-text.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString header_text = 10;`
 */
         val headerText:com.example.delhitransit.GtfsRealtime.TranslatedString

/**
 * <pre>
 * Alert header. Contains a short summary of the alert text as plain-text.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString header_text = 10;`
 */
         val headerTextOrBuilder:com.example.delhitransit.GtfsRealtime.TranslatedStringOrBuilder

/**
 * <pre>
 * Full description for the alert as plain-text. The information in the
 * description should add to the information of the header.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString description_text = 11;`
 */
         val descriptionText:com.example.delhitransit.GtfsRealtime.TranslatedString

/**
 * <pre>
 * Full description for the alert as plain-text. The information in the
 * description should add to the information of the header.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString description_text = 11;`
 */
         val descriptionTextOrBuilder:com.example.delhitransit.GtfsRealtime.TranslatedStringOrBuilder

/**
 * <pre>
 * Time when the alert should be shown to the user. If missing, the
 * alert will be shown as long as it appears in the feed.
 * If multiple ranges are given, the alert will be shown during all of them.
</pre> *
 *
 * `repeated .com.example.delhitransit.TimeRange active_period = 1;`
 */
         fun getActivePeriod(index:Int):com.example.delhitransit.GtfsRealtime.TimeRange

/**
 * <pre>
 * Time when the alert should be shown to the user. If missing, the
 * alert will be shown as long as it appears in the feed.
 * If multiple ranges are given, the alert will be shown during all of them.
</pre> *
 *
 * `repeated .com.example.delhitransit.TimeRange active_period = 1;`
 */
         fun getActivePeriodOrBuilder(
index:Int):com.example.delhitransit.GtfsRealtime.TimeRangeOrBuilder

/**
 * <pre>
 * Entities whose users we should notify of this alert.
</pre> *
 *
 * `repeated .com.example.delhitransit.EntitySelector informed_entity = 5;`
 */
         fun getInformedEntity(index:Int):com.example.delhitransit.GtfsRealtime.EntitySelector

/**
 * <pre>
 * Entities whose users we should notify of this alert.
</pre> *
 *
 * `repeated .com.example.delhitransit.EntitySelector informed_entity = 5;`
 */
         fun getInformedEntityOrBuilder(
index:Int):com.example.delhitransit.GtfsRealtime.EntitySelectorOrBuilder

/**
 * `optional .com.example.delhitransit.Alert.Cause cause = 6 [default = UNKNOWN_CAUSE];`
 */
         fun hasCause():Boolean

/**
 * `optional .com.example.delhitransit.Alert.Effect effect = 7 [default = UNKNOWN_EFFECT];`
 */
         fun hasEffect():Boolean

/**
 * <pre>
 * The URL which provides additional information about the alert.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString url = 8;`
 */
         fun hasUrl():Boolean

/**
 * <pre>
 * Alert header. Contains a short summary of the alert text as plain-text.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString header_text = 10;`
 */
         fun hasHeaderText():Boolean

/**
 * <pre>
 * Full description for the alert as plain-text. The information in the
 * description should add to the information of the header.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString description_text = 11;`
 */
         fun hasDescriptionText():Boolean
}

/**
 * <pre>
 * An alert, indicating some sort of incident in the public transit network.
</pre> *
 *
 *
 * Protobuf type `com.example.delhitransit.Alert`
 */
     class Alert:com.google.protobuf.GeneratedMessageV3.ExtendableMessage<Alert>,
 // @@protoc_insertion_point(message_implements:com.example.delhitransit.Alert)
            AlertOrBuilder {

private var bitField0_:Int = 0
private var activePeriod_:MutableList<com.example.delhitransit.GtfsRealtime.TimeRange>? = null

/**
 * <pre>
 * Time when the alert should be shown to the user. If missing, the
 * alert will be shown as long as it appears in the feed.
 * If multiple ranges are given, the alert will be shown during all of them.
</pre> *
 *
 * `repeated .com.example.delhitransit.TimeRange active_period = 1;`
 */
        override val activePeriodList:List<com.example.delhitransit.GtfsRealtime.TimeRange>?
get() =activePeriod_

/**
 * <pre>
 * Time when the alert should be shown to the user. If missing, the
 * alert will be shown as long as it appears in the feed.
 * If multiple ranges are given, the alert will be shown during all of them.
</pre> *
 *
 * `repeated .com.example.delhitransit.TimeRange active_period = 1;`
 */
        override val activePeriodOrBuilderList:List< com.example.delhitransit.GtfsRealtime.TimeRangeOrBuilder>?
get() =activePeriod_

/**
 * <pre>
 * Time when the alert should be shown to the user. If missing, the
 * alert will be shown as long as it appears in the feed.
 * If multiple ranges are given, the alert will be shown during all of them.
</pre> *
 *
 * `repeated .com.example.delhitransit.TimeRange active_period = 1;`
 */
        override val activePeriodCount:Int
get() =activePeriod_!!.size
private var informedEntity_:MutableList<com.example.delhitransit.GtfsRealtime.EntitySelector>? = null

/**
 * <pre>
 * Entities whose users we should notify of this alert.
</pre> *
 *
 * `repeated .com.example.delhitransit.EntitySelector informed_entity = 5;`
 */
        override val informedEntityList:List<com.example.delhitransit.GtfsRealtime.EntitySelector>?
get() =informedEntity_

/**
 * <pre>
 * Entities whose users we should notify of this alert.
</pre> *
 *
 * `repeated .com.example.delhitransit.EntitySelector informed_entity = 5;`
 */
        override val informedEntityOrBuilderList:List< com.example.delhitransit.GtfsRealtime.EntitySelectorOrBuilder>?
get() =informedEntity_

/**
 * <pre>
 * Entities whose users we should notify of this alert.
</pre> *
 *
 * `repeated .com.example.delhitransit.EntitySelector informed_entity = 5;`
 */
        override val informedEntityCount:Int
get() =informedEntity_!!.size
private var cause_:Int = 0

/**
 * `optional .com.example.delhitransit.Alert.Cause cause = 6 [default = UNKNOWN_CAUSE];`
 */
        override val cause:com.example.delhitransit.GtfsRealtime.Alert.Cause
get() {
val result = com.example.delhitransit.GtfsRealtime.Alert.Cause.valueOf(cause_)
return result ?: com.example.delhitransit.GtfsRealtime.Alert.Cause.UNKNOWN_CAUSE
}
private var effect_:Int = 0

/**
 * `optional .com.example.delhitransit.Alert.Effect effect = 7 [default = UNKNOWN_EFFECT];`
 */
        override val effect:com.example.delhitransit.GtfsRealtime.Alert.Effect
get() {
val result = com.example.delhitransit.GtfsRealtime.Alert.Effect.valueOf(effect_)
return result ?: com.example.delhitransit.GtfsRealtime.Alert.Effect.UNKNOWN_EFFECT
}
private var url_:com.example.delhitransit.GtfsRealtime.TranslatedString? = null

/**
 * <pre>
 * The URL which provides additional information about the alert.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString url = 8;`
 */
        override val url:com.example.delhitransit.GtfsRealtime.TranslatedString
get() =if (url_ == null) com.example.delhitransit.GtfsRealtime.TranslatedString.defaultInstance else url_

/**
 * <pre>
 * The URL which provides additional information about the alert.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString url = 8;`
 */
        override val urlOrBuilder:com.example.delhitransit.GtfsRealtime.TranslatedStringOrBuilder
get() =if (url_ == null) com.example.delhitransit.GtfsRealtime.TranslatedString.defaultInstance else url_
private var headerText_:com.example.delhitransit.GtfsRealtime.TranslatedString? = null

/**
 * <pre>
 * Alert header. Contains a short summary of the alert text as plain-text.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString header_text = 10;`
 */
        override val headerText:com.example.delhitransit.GtfsRealtime.TranslatedString
get() =if (headerText_ == null) com.example.delhitransit.GtfsRealtime.TranslatedString.defaultInstance else headerText_

/**
 * <pre>
 * Alert header. Contains a short summary of the alert text as plain-text.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString header_text = 10;`
 */
        override val headerTextOrBuilder:com.example.delhitransit.GtfsRealtime.TranslatedStringOrBuilder
get() =if (headerText_ == null) com.example.delhitransit.GtfsRealtime.TranslatedString.defaultInstance else headerText_
private var descriptionText_:com.example.delhitransit.GtfsRealtime.TranslatedString? = null

/**
 * <pre>
 * Full description for the alert as plain-text. The information in the
 * description should add to the information of the header.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString description_text = 11;`
 */
        override val descriptionText:com.example.delhitransit.GtfsRealtime.TranslatedString
get() =if (descriptionText_ == null) com.example.delhitransit.GtfsRealtime.TranslatedString.defaultInstance else descriptionText_

/**
 * <pre>
 * Full description for the alert as plain-text. The information in the
 * description should add to the information of the header.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString description_text = 11;`
 */
        override val descriptionTextOrBuilder:com.example.delhitransit.GtfsRealtime.TranslatedStringOrBuilder
get() =if (descriptionText_ == null) com.example.delhitransit.GtfsRealtime.TranslatedString.defaultInstance else descriptionText_

private var memoizedIsInitialized:Byte = -1

 // Use Alert.newBuilder() to construct.
        private constructor(builder:com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.example.delhitransit.GtfsRealtime.Alert, *>) : super(builder) {}

private constructor() {
activePeriod_ = emptyList<TimeRange>()
informedEntity_ = emptyList<EntitySelector>()
cause_ = 1
effect_ = 8
}

 //        @java.lang.Override
 //        @SuppressWarnings({"unused"})
 //        protected java.lang.Object newInstance(
 //                UnusedPrivateParameter unused) {
 //            return new Alert();
 //        }

        override fun getUnknownFields():com.google.protobuf.UnknownFieldSet {
return this.unknownFields
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
private constructor(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite?) : this() {
if (extensionRegistry == null)
{
throw java.lang.NullPointerException()
}
var mutable_bitField0_ = 0
val unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder()
try
{
var done = false
while (!done)
{
val tag = input.readTag()
when (tag) {
0 -> done = true
10 -> {
if (mutable_bitField0_ and 0x00000001 == 0)
{
activePeriod_ = java.util.ArrayList()
mutable_bitField0_ = mutable_bitField0_ or 0x00000001
}
activePeriod_!!.add(
input.readMessage(com.example.delhitransit.GtfsRealtime.TimeRange.PARSER, extensionRegistry))
}
42 -> {
if (mutable_bitField0_ and 0x00000002 == 0)
{
informedEntity_ = java.util.ArrayList()
mutable_bitField0_ = mutable_bitField0_ or 0x00000002
}
informedEntity_!!.add(
input.readMessage(com.example.delhitransit.GtfsRealtime.EntitySelector.PARSER, extensionRegistry))
}
48 -> {
val rawValue = input.readEnum()
val value = com.example.delhitransit.GtfsRealtime.Alert.Cause.valueOf(rawValue)
if (value == null)
{
unknownFields.mergeVarintField(6, rawValue)
}
else
{
bitField0_ = bitField0_ or 0x00000001
cause_ = rawValue
}
}
56 -> {
val rawValue = input.readEnum()
val value = com.example.delhitransit.GtfsRealtime.Alert.Effect.valueOf(rawValue)
if (value == null)
{
unknownFields.mergeVarintField(7, rawValue)
}
else
{
bitField0_ = bitField0_ or 0x00000002
effect_ = rawValue
}
}
66 -> {
var subBuilder:com.example.delhitransit.GtfsRealtime.TranslatedString.Builder? = null
if (bitField0_ and 0x00000004 != 0)
{
subBuilder = url_!!.toBuilder()
}
url_ = input.readMessage(com.example.delhitransit.GtfsRealtime.TranslatedString.PARSER, extensionRegistry)
if (subBuilder != null)
{
subBuilder.mergeFrom(url_)
url_ = subBuilder.buildPartial()
}
bitField0_ = bitField0_ or 0x00000004
}
82 -> {
var subBuilder:com.example.delhitransit.GtfsRealtime.TranslatedString.Builder? = null
if (bitField0_ and 0x00000008 != 0)
{
subBuilder = headerText_!!.toBuilder()
}
headerText_ = input.readMessage(com.example.delhitransit.GtfsRealtime.TranslatedString.PARSER, extensionRegistry)
if (subBuilder != null)
{
subBuilder.mergeFrom(headerText_)
headerText_ = subBuilder.buildPartial()
}
bitField0_ = bitField0_ or 0x00000008
}
90 -> {
var subBuilder:com.example.delhitransit.GtfsRealtime.TranslatedString.Builder? = null
if (bitField0_ and 0x00000010 != 0)
{
subBuilder = descriptionText_!!.toBuilder()
}
descriptionText_ = input.readMessage(com.example.delhitransit.GtfsRealtime.TranslatedString.PARSER, extensionRegistry)
if (subBuilder != null)
{
subBuilder.mergeFrom(descriptionText_)
descriptionText_ = subBuilder.buildPartial()
}
bitField0_ = bitField0_ or 0x00000010
}
else -> {
if (!parseUnknownField(
input, unknownFields, extensionRegistry, tag))
{
done = true
}
}
}
}
}
catch (e:com.google.protobuf.InvalidProtocolBufferException) {
throw e.setUnfinishedMessage(this)
}
catch (e:java.io.IOException) {
throw com.google.protobuf.InvalidProtocolBufferException(
e).setUnfinishedMessage(this)
}
finally
{
if (mutable_bitField0_ and 0x00000001 != 0)
{
activePeriod_ = java.util.Collections.unmodifiableList(activePeriod_!!)
}
if (mutable_bitField0_ and 0x00000002 != 0)
{
informedEntity_ = java.util.Collections.unmodifiableList(informedEntity_!!)
}
this.unknownFields = unknownFields.build()
makeExtensionsImmutable()
}
}

override fun internalGetFieldAccessorTable():com.google.protobuf.GeneratedMessageV3.FieldAccessorTable {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_Alert_fieldAccessorTable
.ensureFieldAccessorsInitialized(
com.example.delhitransit.GtfsRealtime.Alert::class.java, com.example.delhitransit.GtfsRealtime.Alert.Builder::class.java)
}

/**
 * <pre>
 * Cause of this alert.
</pre> *
 *
 *
 * Protobuf enum `com.example.delhitransit.Alert.Cause`
 */
         enum class Cause private constructor(private val value:Int):com.google.protobuf.ProtocolMessageEnum {
/**
 * `UNKNOWN_CAUSE = 1;`
 */
            UNKNOWN_CAUSE(1),
/**
 * <pre>
 * Not machine-representable.
</pre> *
 *
 * `OTHER_CAUSE = 2;`
 */
            OTHER_CAUSE(2),
/**
 * `TECHNICAL_PROBLEM = 3;`
 */
            TECHNICAL_PROBLEM(3),
/**
 * <pre>
 * Public transit agency employees stopped working.
</pre> *
 *
 * `STRIKE = 4;`
 */
            STRIKE(4),
/**
 * <pre>
 * People are blocking the streets.
</pre> *
 *
 * `DEMONSTRATION = 5;`
 */
            DEMONSTRATION(5),
/**
 * `ACCIDENT = 6;`
 */
            ACCIDENT(6),
/**
 * `HOLIDAY = 7;`
 */
            HOLIDAY(7),
/**
 * `WEATHER = 8;`
 */
            WEATHER(8),
/**
 * `MAINTENANCE = 9;`
 */
            MAINTENANCE(9),
/**
 * `CONSTRUCTION = 10;`
 */
            CONSTRUCTION(10),
/**
 * `POLICE_ACTIVITY = 11;`
 */
            POLICE_ACTIVITY(11),
/**
 * `MEDICAL_EMERGENCY = 12;`
 */
            MEDICAL_EMERGENCY(12);


override fun getNumber():Int {
return value
}

override fun getValueDescriptor():com.google.protobuf.Descriptors.EnumValueDescriptor {
return descriptor.values[ordinal]
}

override fun getDescriptorForType():com.google.protobuf.Descriptors.EnumDescriptor {
return descriptor
}

companion object {

/**
 * `UNKNOWN_CAUSE = 1;`
 */
             val UNKNOWN_CAUSE_VALUE = 1
/**
 * <pre>
 * Not machine-representable.
</pre> *
 *
 * `OTHER_CAUSE = 2;`
 */
             val OTHER_CAUSE_VALUE = 2
/**
 * `TECHNICAL_PROBLEM = 3;`
 */
             val TECHNICAL_PROBLEM_VALUE = 3
/**
 * <pre>
 * Public transit agency employees stopped working.
</pre> *
 *
 * `STRIKE = 4;`
 */
             val STRIKE_VALUE = 4
/**
 * <pre>
 * People are blocking the streets.
</pre> *
 *
 * `DEMONSTRATION = 5;`
 */
             val DEMONSTRATION_VALUE = 5
/**
 * `ACCIDENT = 6;`
 */
             val ACCIDENT_VALUE = 6
/**
 * `HOLIDAY = 7;`
 */
             val HOLIDAY_VALUE = 7
/**
 * `WEATHER = 8;`
 */
             val WEATHER_VALUE = 8
/**
 * `MAINTENANCE = 9;`
 */
             val MAINTENANCE_VALUE = 9
/**
 * `CONSTRUCTION = 10;`
 */
             val CONSTRUCTION_VALUE = 10
/**
 * `POLICE_ACTIVITY = 11;`
 */
             val POLICE_ACTIVITY_VALUE = 11
/**
 * `MEDICAL_EMERGENCY = 12;`
 */
             val MEDICAL_EMERGENCY_VALUE = 12


            @Deprecated("Use {@link #forNumber(int)} instead.")
 fun valueOf(value:Int):Cause? {
return forNumber(value)
}

 fun forNumber(value:Int):Cause? {
when (value) {
1 -> return UNKNOWN_CAUSE
2 -> return OTHER_CAUSE
3 -> return TECHNICAL_PROBLEM
4 -> return STRIKE
5 -> return DEMONSTRATION
6 -> return ACCIDENT
7 -> return HOLIDAY
8 -> return WEATHER
9 -> return MAINTENANCE
10 -> return CONSTRUCTION
11 -> return POLICE_ACTIVITY
12 -> return MEDICAL_EMERGENCY
else -> return null
}
}

 fun internalGetValueMap():com.google.protobuf.Internal.EnumLiteMap<Cause> {
return internalValueMap
}

private val internalValueMap = Internal.EnumLiteMap<Cause> { number -> Cause.forNumber(number) }

 val descriptor:com.google.protobuf.Descriptors.EnumDescriptor
get() =com.example.delhitransit.GtfsRealtime.Alert.descriptor.enumTypes[0]

private val VALUES = values()

 fun valueOf(
desc:com.google.protobuf.Descriptors.EnumValueDescriptor):Cause {
require(desc.type == descriptor) { "EnumValueDescriptor is not for this type." }
return VALUES[desc.index]
}
}

 // @@protoc_insertion_point(enum_scope:com.example.delhitransit.Alert.Cause)
        }

/**
 * <pre>
 * What is the effect of this problem on the affected entity.
</pre> *
 *
 *
 * Protobuf enum `com.example.delhitransit.Alert.Effect`
 */
         enum class Effect private constructor(private val value:Int):com.google.protobuf.ProtocolMessageEnum {
/**
 * `NO_SERVICE = 1;`
 */
            NO_SERVICE(1),
/**
 * `REDUCED_SERVICE = 2;`
 */
            REDUCED_SERVICE(2),
/**
 * <pre>
 * We don't care about INsignificant delays: they are hard to detect, have
 * little impact on the user, and would clutter the results as they are too
 * frequent.
</pre> *
 *
 * `SIGNIFICANT_DELAYS = 3;`
 */
            SIGNIFICANT_DELAYS(3),
/**
 * `DETOUR = 4;`
 */
            DETOUR(4),
/**
 * `ADDITIONAL_SERVICE = 5;`
 */
            ADDITIONAL_SERVICE(5),
/**
 * `MODIFIED_SERVICE = 6;`
 */
            MODIFIED_SERVICE(6),
/**
 * `OTHER_EFFECT = 7;`
 */
            OTHER_EFFECT(7),
/**
 * `UNKNOWN_EFFECT = 8;`
 */
            UNKNOWN_EFFECT(8),
/**
 * `STOP_MOVED = 9;`
 */
            STOP_MOVED(9);


override fun getNumber():Int {
return value
}

override fun getValueDescriptor():com.google.protobuf.Descriptors.EnumValueDescriptor {
return descriptor.values[ordinal]
}

override fun getDescriptorForType():com.google.protobuf.Descriptors.EnumDescriptor {
return descriptor
}

companion object {

/**
 * `NO_SERVICE = 1;`
 */
             val NO_SERVICE_VALUE = 1
/**
 * `REDUCED_SERVICE = 2;`
 */
             val REDUCED_SERVICE_VALUE = 2
/**
 * <pre>
 * We don't care about INsignificant delays: they are hard to detect, have
 * little impact on the user, and would clutter the results as they are too
 * frequent.
</pre> *
 *
 * `SIGNIFICANT_DELAYS = 3;`
 */
             val SIGNIFICANT_DELAYS_VALUE = 3
/**
 * `DETOUR = 4;`
 */
             val DETOUR_VALUE = 4
/**
 * `ADDITIONAL_SERVICE = 5;`
 */
             val ADDITIONAL_SERVICE_VALUE = 5
/**
 * `MODIFIED_SERVICE = 6;`
 */
             val MODIFIED_SERVICE_VALUE = 6
/**
 * `OTHER_EFFECT = 7;`
 */
             val OTHER_EFFECT_VALUE = 7
/**
 * `UNKNOWN_EFFECT = 8;`
 */
             val UNKNOWN_EFFECT_VALUE = 8
/**
 * `STOP_MOVED = 9;`
 */
             val STOP_MOVED_VALUE = 9


            @Deprecated("Use {@link #forNumber(int)} instead.")
 fun valueOf(value:Int):Effect? {
return forNumber(value)
}

 fun forNumber(value:Int):Effect? {
when (value) {
1 -> return NO_SERVICE
2 -> return REDUCED_SERVICE
3 -> return SIGNIFICANT_DELAYS
4 -> return DETOUR
5 -> return ADDITIONAL_SERVICE
6 -> return MODIFIED_SERVICE
7 -> return OTHER_EFFECT
8 -> return UNKNOWN_EFFECT
9 -> return STOP_MOVED
else -> return null
}
}

 fun internalGetValueMap():com.google.protobuf.Internal.EnumLiteMap<Effect> {
return internalValueMap
}

private val internalValueMap = Internal.EnumLiteMap<Effect> { number -> Effect.forNumber(number) }

 val descriptor:com.google.protobuf.Descriptors.EnumDescriptor
get() =com.example.delhitransit.GtfsRealtime.Alert.descriptor.enumTypes[1]

private val VALUES = values()

 fun valueOf(
desc:com.google.protobuf.Descriptors.EnumValueDescriptor):Effect {
require(desc.type == descriptor) { "EnumValueDescriptor is not for this type." }
return VALUES[desc.index]
}
}

 // @@protoc_insertion_point(enum_scope:com.example.delhitransit.Alert.Effect)
        }

/**
 * <pre>
 * Time when the alert should be shown to the user. If missing, the
 * alert will be shown as long as it appears in the feed.
 * If multiple ranges are given, the alert will be shown during all of them.
</pre> *
 *
 * `repeated .com.example.delhitransit.TimeRange active_period = 1;`
 */
        override fun getActivePeriod(index:Int):com.example.delhitransit.GtfsRealtime.TimeRange {
return activePeriod_!![index]
}

/**
 * <pre>
 * Time when the alert should be shown to the user. If missing, the
 * alert will be shown as long as it appears in the feed.
 * If multiple ranges are given, the alert will be shown during all of them.
</pre> *
 *
 * `repeated .com.example.delhitransit.TimeRange active_period = 1;`
 */
        override fun getActivePeriodOrBuilder(
index:Int):com.example.delhitransit.GtfsRealtime.TimeRangeOrBuilder {
return activePeriod_!![index]
}

/**
 * <pre>
 * Entities whose users we should notify of this alert.
</pre> *
 *
 * `repeated .com.example.delhitransit.EntitySelector informed_entity = 5;`
 */
        override fun getInformedEntity(index:Int):com.example.delhitransit.GtfsRealtime.EntitySelector {
return informedEntity_!![index]
}

/**
 * <pre>
 * Entities whose users we should notify of this alert.
</pre> *
 *
 * `repeated .com.example.delhitransit.EntitySelector informed_entity = 5;`
 */
        override fun getInformedEntityOrBuilder(
index:Int):com.example.delhitransit.GtfsRealtime.EntitySelectorOrBuilder {
return informedEntity_!![index]
}

/**
 * `optional .com.example.delhitransit.Alert.Cause cause = 6 [default = UNKNOWN_CAUSE];`
 */
        override fun hasCause():Boolean {
return bitField0_ and 0x00000001 != 0
}

/**
 * `optional .com.example.delhitransit.Alert.Effect effect = 7 [default = UNKNOWN_EFFECT];`
 */
        override fun hasEffect():Boolean {
return bitField0_ and 0x00000002 != 0
}

/**
 * <pre>
 * The URL which provides additional information about the alert.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString url = 8;`
 */
        override fun hasUrl():Boolean {
return bitField0_ and 0x00000004 != 0
}

/**
 * <pre>
 * Alert header. Contains a short summary of the alert text as plain-text.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString header_text = 10;`
 */
        override fun hasHeaderText():Boolean {
return bitField0_ and 0x00000008 != 0
}

/**
 * <pre>
 * Full description for the alert as plain-text. The information in the
 * description should add to the information of the header.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString description_text = 11;`
 */
        override fun hasDescriptionText():Boolean {
return bitField0_ and 0x00000010 != 0
}

override fun isInitialized():Boolean {
val isInitialized = memoizedIsInitialized
if (isInitialized.toInt() == 1) return true
if (isInitialized.toInt() == 0) return false

for (i in 0 until activePeriodCount)
{
if (!getActivePeriod(i).isInitialized)
{
memoizedIsInitialized = 0
return false
}
}
for (i in 0 until informedEntityCount)
{
if (!getInformedEntity(i).isInitialized)
{
memoizedIsInitialized = 0
return false
}
}
if (hasUrl())
{
if (!url.isInitialized)
{
memoizedIsInitialized = 0
return false
}
}
if (hasHeaderText())
{
if (!headerText.isInitialized)
{
memoizedIsInitialized = 0
return false
}
}
if (hasDescriptionText())
{
if (!descriptionText.isInitialized)
{
memoizedIsInitialized = 0
return false
}
}
if (!extensionsAreInitialized())
{
memoizedIsInitialized = 0
return false
}
memoizedIsInitialized = 1
return true
}

@Throws(java.io.IOException::class)
override fun writeTo(output:com.google.protobuf.CodedOutputStream) {
val extensionWriter = newExtensionWriter()
for (i in activePeriod_!!.indices)
{
output.writeMessage(1, activePeriod_!![i])
}
for (i in informedEntity_!!.indices)
{
output.writeMessage(5, informedEntity_!![i])
}
if (bitField0_ and 0x00000001 != 0)
{
output.writeEnum(6, cause_)
}
if (bitField0_ and 0x00000002 != 0)
{
output.writeEnum(7, effect_)
}
if (bitField0_ and 0x00000004 != 0)
{
output.writeMessage(8, url)
}
if (bitField0_ and 0x00000008 != 0)
{
output.writeMessage(10, headerText)
}
if (bitField0_ and 0x00000010 != 0)
{
output.writeMessage(11, descriptionText)
}
extensionWriter.writeUntil(2000, output)
unknownFields.writeTo(output)
}

override fun getSerializedSize():Int {
var size = memoizedSize
if (size != -1) return size

size = 0
for (i in activePeriod_!!.indices)
{
size += com.google.protobuf.CodedOutputStream
.computeMessageSize(1, activePeriod_!![i])
}
for (i in informedEntity_!!.indices)
{
size += com.google.protobuf.CodedOutputStream
.computeMessageSize(5, informedEntity_!![i])
}
if (bitField0_ and 0x00000001 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeEnumSize(6, cause_)
}
if (bitField0_ and 0x00000002 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeEnumSize(7, effect_)
}
if (bitField0_ and 0x00000004 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeMessageSize(8, url)
}
if (bitField0_ and 0x00000008 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeMessageSize(10, headerText)
}
if (bitField0_ and 0x00000010 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeMessageSize(11, descriptionText)
}
size += extensionsSerializedSize()
size += unknownFields.serializedSize
memoizedSize = size
return size
}

override fun equals(obj:Any?):Boolean {
if (obj === this)
{
return true
}
if (obj !is com.example.delhitransit.GtfsRealtime.Alert)
{
return super.equals(obj)
}
val other = obj as com.example.delhitransit.GtfsRealtime.Alert?

if (activePeriodList != other!!.activePeriodList)
return false
if (informedEntityList != other.informedEntityList)
return false
if (hasCause() != other.hasCause()) return false
if (hasCause())
{
if (cause_ != other.cause_) return false
}
if (hasEffect() != other.hasEffect()) return false
if (hasEffect())
{
if (effect_ != other.effect_) return false
}
if (hasUrl() != other.hasUrl()) return false
if (hasUrl())
{
if (url != other.url)
return false
}
if (hasHeaderText() != other.hasHeaderText()) return false
if (hasHeaderText())
{
if (headerText != other.headerText)
return false
}
if (hasDescriptionText() != other.hasDescriptionText()) return false
if (hasDescriptionText())
{
if (descriptionText != other.descriptionText)
return false
}
if (unknownFields != other.unknownFields) return false
return if (extensionFields != other.extensionFields) false else true
}

override fun hashCode():Int {
if (memoizedHashCode != 0)
{
return memoizedHashCode
}
var hash = 41
hash = 19 * hash + descriptor.hashCode()
if (activePeriodCount > 0)
{
hash = 37 * hash + ACTIVE_PERIOD_FIELD_NUMBER
hash = 53 * hash + activePeriodList!!.hashCode()
}
if (informedEntityCount > 0)
{
hash = 37 * hash + INFORMED_ENTITY_FIELD_NUMBER
hash = 53 * hash + informedEntityList!!.hashCode()
}
if (hasCause())
{
hash = 37 * hash + CAUSE_FIELD_NUMBER
hash = 53 * hash + cause_
}
if (hasEffect())
{
hash = 37 * hash + EFFECT_FIELD_NUMBER
hash = 53 * hash + effect_
}
if (hasUrl())
{
hash = 37 * hash + URL_FIELD_NUMBER
hash = 53 * hash + url.hashCode()
}
if (hasHeaderText())
{
hash = 37 * hash + HEADER_TEXT_FIELD_NUMBER
hash = 53 * hash + headerText.hashCode()
}
if (hasDescriptionText())
{
hash = 37 * hash + DESCRIPTION_TEXT_FIELD_NUMBER
hash = 53 * hash + descriptionText.hashCode()
}
hash = AbstractMessage.hashFields(hash, extensionFields)
hash = 29 * hash + unknownFields.hashCode()
memoizedHashCode = hash
return hash
}

override fun newBuilderForType():Builder {
return newBuilder()
}

override fun toBuilder():Builder {
return if (this === defaultInstance)
Builder()
else
Builder().mergeFrom(this)
}

override fun newBuilderForType(
parent:com.google.protobuf.GeneratedMessageV3.BuilderParent):Builder {
return Builder(parent)
}

/**
 * <pre>
 * An alert, indicating some sort of incident in the public transit network.
</pre> *
 *
 *
 * Protobuf type `com.example.delhitransit.Alert`
 */
         class Builder:com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.example.delhitransit.GtfsRealtime.Alert, Builder>,
 // @@protoc_insertion_point(builder_implements:com.example.delhitransit.Alert)
                com.example.delhitransit.GtfsRealtime.AlertOrBuilder {

private var bitField0_:Int = 0

private var activePeriod_:MutableList<com.example.delhitransit.GtfsRealtime.TimeRange>? = emptyList<com.example.delhitransit.GtfsRealtime.TimeRange>()

private var activePeriodBuilder_:com.google.protobuf.RepeatedFieldBuilderV3<com.example.delhitransit.GtfsRealtime.TimeRange, com.example.delhitransit.GtfsRealtime.TimeRange.Builder, com.example.delhitransit.GtfsRealtime.TimeRangeOrBuilder>? = null

/**
 * <pre>
 * Time when the alert should be shown to the user. If missing, the
 * alert will be shown as long as it appears in the feed.
 * If multiple ranges are given, the alert will be shown during all of them.
</pre> *
 *
 * `repeated .com.example.delhitransit.TimeRange active_period = 1;`
 */
            override val activePeriodList:List<com.example.delhitransit.GtfsRealtime.TimeRange>
get() =if (activePeriodBuilder_ == null) {
            java.util.Collections.unmodifiableList(activePeriod_!!)
        } else {
            activePeriodBuilder_!!.messageList
        }

/**
 * <pre>
 * Time when the alert should be shown to the user. If missing, the
 * alert will be shown as long as it appears in the feed.
 * If multiple ranges are given, the alert will be shown during all of them.
</pre> *
 *
 * `repeated .com.example.delhitransit.TimeRange active_period = 1;`
 */
            override val activePeriodCount:Int
get() =if (activePeriodBuilder_ == null) {
            activePeriod_!!.size
        } else {
            activePeriodBuilder_!!.count
        }

/**
 * <pre>
 * Time when the alert should be shown to the user. If missing, the
 * alert will be shown as long as it appears in the feed.
 * If multiple ranges are given, the alert will be shown during all of them.
</pre> *
 *
 * `repeated .com.example.delhitransit.TimeRange active_period = 1;`
 */
            override val activePeriodOrBuilderList:List< com.example.delhitransit.GtfsRealtime.TimeRangeOrBuilder>
get() =if (activePeriodBuilder_ != null) {
            activePeriodBuilder_!!.messageOrBuilderList
        } else {
            java.util.Collections.unmodifiableList(activePeriod_!!)
        }

/**
 * <pre>
 * Time when the alert should be shown to the user. If missing, the
 * alert will be shown as long as it appears in the feed.
 * If multiple ranges are given, the alert will be shown during all of them.
</pre> *
 *
 * `repeated .com.example.delhitransit.TimeRange active_period = 1;`
 */
             val activePeriodBuilderList:List<com.example.delhitransit.GtfsRealtime.TimeRange.Builder>
get() =activePeriodFieldBuilder.builderList

private val activePeriodFieldBuilder:com.google.protobuf.RepeatedFieldBuilderV3<com.example.delhitransit.GtfsRealtime.TimeRange, com.example.delhitransit.GtfsRealtime.TimeRange.Builder, com.example.delhitransit.GtfsRealtime.TimeRangeOrBuilder>
get() {
if (activePeriodBuilder_ == null)
{
activePeriodBuilder_ = com.google.protobuf.RepeatedFieldBuilderV3(
activePeriod_,
bitField0_ and 0x00000001 != 0,
parentForChildren,
isClean)
activePeriod_ = null
}
return activePeriodBuilder_
}

private var informedEntity_:MutableList<com.example.delhitransit.GtfsRealtime.EntitySelector>? = emptyList<com.example.delhitransit.GtfsRealtime.EntitySelector>()

private var informedEntityBuilder_:com.google.protobuf.RepeatedFieldBuilderV3<com.example.delhitransit.GtfsRealtime.EntitySelector, com.example.delhitransit.GtfsRealtime.EntitySelector.Builder, com.example.delhitransit.GtfsRealtime.EntitySelectorOrBuilder>? = null

/**
 * <pre>
 * Entities whose users we should notify of this alert.
</pre> *
 *
 * `repeated .com.example.delhitransit.EntitySelector informed_entity = 5;`
 */
            override val informedEntityList:List<com.example.delhitransit.GtfsRealtime.EntitySelector>
get() =if (informedEntityBuilder_ == null) {
            java.util.Collections.unmodifiableList(informedEntity_!!)
        } else {
            informedEntityBuilder_!!.messageList
        }

/**
 * <pre>
 * Entities whose users we should notify of this alert.
</pre> *
 *
 * `repeated .com.example.delhitransit.EntitySelector informed_entity = 5;`
 */
            override val informedEntityCount:Int
get() =if (informedEntityBuilder_ == null) {
            informedEntity_!!.size
        } else {
            informedEntityBuilder_!!.count
        }

/**
 * <pre>
 * Entities whose users we should notify of this alert.
</pre> *
 *
 * `repeated .com.example.delhitransit.EntitySelector informed_entity = 5;`
 */
            override val informedEntityOrBuilderList:List< com.example.delhitransit.GtfsRealtime.EntitySelectorOrBuilder>
get() =if (informedEntityBuilder_ != null) {
            informedEntityBuilder_!!.messageOrBuilderList
        } else {
            java.util.Collections.unmodifiableList(informedEntity_!!)
        }

/**
 * <pre>
 * Entities whose users we should notify of this alert.
</pre> *
 *
 * `repeated .com.example.delhitransit.EntitySelector informed_entity = 5;`
 */
             val informedEntityBuilderList:List<com.example.delhitransit.GtfsRealtime.EntitySelector.Builder>
get() =informedEntityFieldBuilder.builderList

private val informedEntityFieldBuilder:com.google.protobuf.RepeatedFieldBuilderV3<com.example.delhitransit.GtfsRealtime.EntitySelector, com.example.delhitransit.GtfsRealtime.EntitySelector.Builder, com.example.delhitransit.GtfsRealtime.EntitySelectorOrBuilder>
get() {
if (informedEntityBuilder_ == null)
{
informedEntityBuilder_ = com.google.protobuf.RepeatedFieldBuilderV3(
informedEntity_,
bitField0_ and 0x00000002 != 0,
parentForChildren,
isClean)
informedEntity_ = null
}
return informedEntityBuilder_
}

private var cause_ = 1

/**
 * `optional .com.example.delhitransit.Alert.Cause cause = 6 [default = UNKNOWN_CAUSE];`
 */
            override val cause:com.example.delhitransit.GtfsRealtime.Alert.Cause
get() {
val result = com.example.delhitransit.GtfsRealtime.Alert.Cause.valueOf(cause_)
return result ?: com.example.delhitransit.GtfsRealtime.Alert.Cause.UNKNOWN_CAUSE
}

private var effect_ = 8

/**
 * `optional .com.example.delhitransit.Alert.Effect effect = 7 [default = UNKNOWN_EFFECT];`
 */
            override val effect:com.example.delhitransit.GtfsRealtime.Alert.Effect
get() {
val result = com.example.delhitransit.GtfsRealtime.Alert.Effect.valueOf(effect_)
return result ?: com.example.delhitransit.GtfsRealtime.Alert.Effect.UNKNOWN_EFFECT
}

private var url_:com.example.delhitransit.GtfsRealtime.TranslatedString? = null
private var urlBuilder_:com.google.protobuf.SingleFieldBuilderV3<com.example.delhitransit.GtfsRealtime.TranslatedString, com.example.delhitransit.GtfsRealtime.TranslatedString.Builder, com.example.delhitransit.GtfsRealtime.TranslatedStringOrBuilder>? = null

/**
 * <pre>
 * The URL which provides additional information about the alert.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString url = 8;`
 */
            override val url:com.example.delhitransit.GtfsRealtime.TranslatedString
get() =if (urlBuilder_ == null) {
            if (url_ == null) com.example.delhitransit.GtfsRealtime.TranslatedString.defaultInstance else url_
        } else {
            urlBuilder_!!.message
        }

/**
 * <pre>
 * The URL which provides additional information about the alert.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString url = 8;`
 */
             val urlBuilder:com.example.delhitransit.GtfsRealtime.TranslatedString.Builder
get() {
bitField0_ = bitField0_ or 0x00000010
onChanged()
return urlFieldBuilder.builder
}

/**
 * <pre>
 * The URL which provides additional information about the alert.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString url = 8;`
 */
            override val urlOrBuilder:com.example.delhitransit.GtfsRealtime.TranslatedStringOrBuilder
get() =if (urlBuilder_ != null) {
            urlBuilder_!!.messageOrBuilder
        } else {
            if (url_ == null)
                com.example.delhitransit.GtfsRealtime.TranslatedString.defaultInstance
            else
                url_
        }

/**
 * <pre>
 * The URL which provides additional information about the alert.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString url = 8;`
 */
            private val urlFieldBuilder:com.google.protobuf.SingleFieldBuilderV3<com.example.delhitransit.GtfsRealtime.TranslatedString, com.example.delhitransit.GtfsRealtime.TranslatedString.Builder, com.example.delhitransit.GtfsRealtime.TranslatedStringOrBuilder>
get() {
if (urlBuilder_ == null)
{
urlBuilder_ = com.google.protobuf.SingleFieldBuilderV3(
url,
parentForChildren,
isClean)
url_ = null
}
return urlBuilder_
}

private var headerText_:com.example.delhitransit.GtfsRealtime.TranslatedString? = null
private var headerTextBuilder_:com.google.protobuf.SingleFieldBuilderV3<com.example.delhitransit.GtfsRealtime.TranslatedString, com.example.delhitransit.GtfsRealtime.TranslatedString.Builder, com.example.delhitransit.GtfsRealtime.TranslatedStringOrBuilder>? = null

/**
 * <pre>
 * Alert header. Contains a short summary of the alert text as plain-text.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString header_text = 10;`
 */
            override val headerText:com.example.delhitransit.GtfsRealtime.TranslatedString
get() =if (headerTextBuilder_ == null) {
            if (headerText_ == null) com.example.delhitransit.GtfsRealtime.TranslatedString.defaultInstance else headerText_
        } else {
            headerTextBuilder_!!.message
        }

/**
 * <pre>
 * Alert header. Contains a short summary of the alert text as plain-text.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString header_text = 10;`
 */
             val headerTextBuilder:com.example.delhitransit.GtfsRealtime.TranslatedString.Builder
get() {
bitField0_ = bitField0_ or 0x00000020
onChanged()
return headerTextFieldBuilder.builder
}

/**
 * <pre>
 * Alert header. Contains a short summary of the alert text as plain-text.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString header_text = 10;`
 */
            override val headerTextOrBuilder:com.example.delhitransit.GtfsRealtime.TranslatedStringOrBuilder
get() =if (headerTextBuilder_ != null) {
            headerTextBuilder_!!.messageOrBuilder
        } else {
            if (headerText_ == null)
                com.example.delhitransit.GtfsRealtime.TranslatedString.defaultInstance
            else
                headerText_
        }

/**
 * <pre>
 * Alert header. Contains a short summary of the alert text as plain-text.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString header_text = 10;`
 */
            private val headerTextFieldBuilder:com.google.protobuf.SingleFieldBuilderV3<com.example.delhitransit.GtfsRealtime.TranslatedString, com.example.delhitransit.GtfsRealtime.TranslatedString.Builder, com.example.delhitransit.GtfsRealtime.TranslatedStringOrBuilder>
get() {
if (headerTextBuilder_ == null)
{
headerTextBuilder_ = com.google.protobuf.SingleFieldBuilderV3(
headerText,
parentForChildren,
isClean)
headerText_ = null
}
return headerTextBuilder_
}

private var descriptionText_:com.example.delhitransit.GtfsRealtime.TranslatedString? = null
private var descriptionTextBuilder_:com.google.protobuf.SingleFieldBuilderV3<com.example.delhitransit.GtfsRealtime.TranslatedString, com.example.delhitransit.GtfsRealtime.TranslatedString.Builder, com.example.delhitransit.GtfsRealtime.TranslatedStringOrBuilder>? = null

/**
 * <pre>
 * Full description for the alert as plain-text. The information in the
 * description should add to the information of the header.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString description_text = 11;`
 */
            override val descriptionText:com.example.delhitransit.GtfsRealtime.TranslatedString
get() =if (descriptionTextBuilder_ == null) {
            if (descriptionText_ == null) com.example.delhitransit.GtfsRealtime.TranslatedString.defaultInstance else descriptionText_
        } else {
            descriptionTextBuilder_!!.message
        }

/**
 * <pre>
 * Full description for the alert as plain-text. The information in the
 * description should add to the information of the header.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString description_text = 11;`
 */
             val descriptionTextBuilder:com.example.delhitransit.GtfsRealtime.TranslatedString.Builder
get() {
bitField0_ = bitField0_ or 0x00000040
onChanged()
return descriptionTextFieldBuilder.builder
}

/**
 * <pre>
 * Full description for the alert as plain-text. The information in the
 * description should add to the information of the header.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString description_text = 11;`
 */
            override val descriptionTextOrBuilder:com.example.delhitransit.GtfsRealtime.TranslatedStringOrBuilder
get() =if (descriptionTextBuilder_ != null) {
            descriptionTextBuilder_!!.messageOrBuilder
        } else {
            if (descriptionText_ == null)
                com.example.delhitransit.GtfsRealtime.TranslatedString.defaultInstance
            else
                descriptionText_
        }

/**
 * <pre>
 * Full description for the alert as plain-text. The information in the
 * description should add to the information of the header.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString description_text = 11;`
 */
            private val descriptionTextFieldBuilder:com.google.protobuf.SingleFieldBuilderV3<com.example.delhitransit.GtfsRealtime.TranslatedString, com.example.delhitransit.GtfsRealtime.TranslatedString.Builder, com.example.delhitransit.GtfsRealtime.TranslatedStringOrBuilder>
get() {
if (descriptionTextBuilder_ == null)
{
descriptionTextBuilder_ = com.google.protobuf.SingleFieldBuilderV3(
descriptionText,
parentForChildren,
isClean)
descriptionText_ = null
}
return descriptionTextBuilder_
}

override fun internalGetFieldAccessorTable():com.google.protobuf.GeneratedMessageV3.FieldAccessorTable {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_Alert_fieldAccessorTable
.ensureFieldAccessorsInitialized(
com.example.delhitransit.GtfsRealtime.Alert::class.java, com.example.delhitransit.GtfsRealtime.Alert.Builder::class.java)
}

 // Construct using com.example.delhitransit.GtfsRealtime.Alert.newBuilder()
            private constructor() {
maybeForceBuilderInitialization()
}

private constructor(
parent:com.google.protobuf.GeneratedMessageV3.BuilderParent) : super(parent) {
maybeForceBuilderInitialization()
}

private fun maybeForceBuilderInitialization() {
if (com.google.protobuf.GeneratedMessageV3
.alwaysUseFieldBuilders)
{
activePeriodFieldBuilder
informedEntityFieldBuilder
urlFieldBuilder
headerTextFieldBuilder
descriptionTextFieldBuilder
}
}

override fun clear():Builder {
super.clear()
if (activePeriodBuilder_ == null)
{
activePeriod_ = emptyList<TimeRange>()
bitField0_ = bitField0_ and 0x00000001.inv()
}
else
{
activePeriodBuilder_!!.clear()
}
if (informedEntityBuilder_ == null)
{
informedEntity_ = emptyList<EntitySelector>()
bitField0_ = bitField0_ and 0x00000002.inv()
}
else
{
informedEntityBuilder_!!.clear()
}
cause_ = 1
bitField0_ = bitField0_ and 0x00000004.inv()
effect_ = 8
bitField0_ = bitField0_ and 0x00000008.inv()
if (urlBuilder_ == null)
{
url_ = null
}
else
{
urlBuilder_!!.clear()
}
bitField0_ = bitField0_ and 0x00000010.inv()
if (headerTextBuilder_ == null)
{
headerText_ = null
}
else
{
headerTextBuilder_!!.clear()
}
bitField0_ = bitField0_ and 0x00000020.inv()
if (descriptionTextBuilder_ == null)
{
descriptionText_ = null
}
else
{
descriptionTextBuilder_!!.clear()
}
bitField0_ = bitField0_ and 0x00000040.inv()
return this
}

override fun getDescriptorForType():com.google.protobuf.Descriptors.Descriptor {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_Alert_descriptor
}

override fun getDefaultInstanceForType():com.example.delhitransit.GtfsRealtime.Alert {
return com.example.delhitransit.GtfsRealtime.Alert.defaultInstance
}

override fun build():com.example.delhitransit.GtfsRealtime.Alert {
val result = buildPartial()
if (!result.isInitialized)
{
throw AbstractMessage.Builder.newUninitializedMessageException(result)
}
return result
}

override fun buildPartial():com.example.delhitransit.GtfsRealtime.Alert {
val result = com.example.delhitransit.GtfsRealtime.Alert(this)
val from_bitField0_ = bitField0_
var to_bitField0_ = 0
if (activePeriodBuilder_ == null)
{
if (bitField0_ and 0x00000001 != 0)
{
activePeriod_ = java.util.Collections.unmodifiableList(activePeriod_!!)
bitField0_ = bitField0_ and 0x00000001.inv()
}
result.activePeriod_ = activePeriod_
}
else
{
result.activePeriod_ = activePeriodBuilder_!!.build()
}
if (informedEntityBuilder_ == null)
{
if (bitField0_ and 0x00000002 != 0)
{
informedEntity_ = java.util.Collections.unmodifiableList(informedEntity_!!)
bitField0_ = bitField0_ and 0x00000002.inv()
}
result.informedEntity_ = informedEntity_
}
else
{
result.informedEntity_ = informedEntityBuilder_!!.build()
}
if (from_bitField0_ and 0x00000004 != 0)
{
to_bitField0_ = to_bitField0_ or 0x00000001
}
result.cause_ = cause_
if (from_bitField0_ and 0x00000008 != 0)
{
to_bitField0_ = to_bitField0_ or 0x00000002
}
result.effect_ = effect_
if (from_bitField0_ and 0x00000010 != 0)
{
if (urlBuilder_ == null)
{
result.url_ = url_
}
else
{
result.url_ = urlBuilder_!!.build()
}
to_bitField0_ = to_bitField0_ or 0x00000004
}
if (from_bitField0_ and 0x00000020 != 0)
{
if (headerTextBuilder_ == null)
{
result.headerText_ = headerText_
}
else
{
result.headerText_ = headerTextBuilder_!!.build()
}
to_bitField0_ = to_bitField0_ or 0x00000008
}
if (from_bitField0_ and 0x00000040 != 0)
{
if (descriptionTextBuilder_ == null)
{
result.descriptionText_ = descriptionText_
}
else
{
result.descriptionText_ = descriptionTextBuilder_!!.build()
}
to_bitField0_ = to_bitField0_ or 0x00000010
}
result.bitField0_ = to_bitField0_
onBuilt()
return result
}

override fun clone():Builder {
return super.clone()
}

override fun setField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
value:Any):Builder {
return super.setField(field, value)
}

override fun clearField(
field:com.google.protobuf.Descriptors.FieldDescriptor):Builder {
return super.clearField(field)
}

override fun clearOneof(
oneof:com.google.protobuf.Descriptors.OneofDescriptor):Builder {
return super.clearOneof(oneof)
}

override fun setRepeatedField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
index:Int, value:Any):Builder {
return super.setRepeatedField(field, index, value)
}

override fun addRepeatedField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
value:Any):Builder {
return super.addRepeatedField(field, value)
}

override fun <Type> setExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.Alert, Type>,
value:Type):Builder {
return super.setExtension(extension, value)
}

override fun <Type> setExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.Alert, List<Type>>,
index:Int, value:Type):Builder {
return super.setExtension(extension, index, value)
}

override fun <Type> addExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.Alert, List<Type>>,
value:Type):Builder {
return super.addExtension(extension, value)
}

override fun <Type> clearExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.Alert, *>):Builder {
return super.clearExtension<Any>(extension)
}

override fun mergeFrom(other:com.google.protobuf.Message):Builder {
if (other is com.example.delhitransit.GtfsRealtime.Alert)
{
return mergeFrom(other)
}
else
{
super.mergeFrom(other)
return this
}
}

 fun mergeFrom(other:com.example.delhitransit.GtfsRealtime.Alert?):Builder {
if (other === com.example.delhitransit.GtfsRealtime.Alert.defaultInstance)
return this
if (activePeriodBuilder_ == null)
{
if (!other!!.activePeriod_!!.isEmpty())
{
if (activePeriod_!!.isEmpty())
{
activePeriod_ = other.activePeriod_
bitField0_ = bitField0_ and 0x00000001.inv()
}
else
{
ensureActivePeriodIsMutable()
activePeriod_!!.addAll(other.activePeriod_!!)
}
onChanged()
}
}
else
{
if (!other!!.activePeriod_!!.isEmpty())
{
if (activePeriodBuilder_!!.isEmpty)
{
activePeriodBuilder_!!.dispose()
activePeriodBuilder_ = null
activePeriod_ = other.activePeriod_
bitField0_ = bitField0_ and 0x00000001.inv()
activePeriodBuilder_ = if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders)
activePeriodFieldBuilder
else
null
}
else
{
activePeriodBuilder_!!.addAllMessages(other.activePeriod_!!)
}
}
}
if (informedEntityBuilder_ == null)
{
if (!other.informedEntity_!!.isEmpty())
{
if (informedEntity_!!.isEmpty())
{
informedEntity_ = other.informedEntity_
bitField0_ = bitField0_ and 0x00000002.inv()
}
else
{
ensureInformedEntityIsMutable()
informedEntity_!!.addAll(other.informedEntity_!!)
}
onChanged()
}
}
else
{
if (!other.informedEntity_!!.isEmpty())
{
if (informedEntityBuilder_!!.isEmpty)
{
informedEntityBuilder_!!.dispose()
informedEntityBuilder_ = null
informedEntity_ = other.informedEntity_
bitField0_ = bitField0_ and 0x00000002.inv()
informedEntityBuilder_ = if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders)
informedEntityFieldBuilder
else
null
}
else
{
informedEntityBuilder_!!.addAllMessages(other.informedEntity_!!)
}
}
}
if (other.hasCause())
{
setCause(other.cause)
}
if (other.hasEffect())
{
setEffect(other.effect)
}
if (other.hasUrl())
{
mergeUrl(other.url)
}
if (other.hasHeaderText())
{
mergeHeaderText(other.headerText)
}
if (other.hasDescriptionText())
{
mergeDescriptionText(other.descriptionText)
}
this.mergeExtensionFields(other)
this.mergeUnknownFields(other.unknownFields)
onChanged()
return this
}

override fun isInitialized():Boolean {
for (i in 0 until activePeriodCount)
{
if (!getActivePeriod(i).isInitialized)
{
return false
}
}
for (i in 0 until informedEntityCount)
{
if (!getInformedEntity(i).isInitialized)
{
return false
}
}
if (hasUrl())
{
if (!url.isInitialized)
{
return false
}
}
if (hasHeaderText())
{
if (!headerText.isInitialized)
{
return false
}
}
if (hasDescriptionText())
{
if (!descriptionText.isInitialized)
{
return false
}
}
return if (!extensionsAreInitialized()) {
            false
        } else true
}

@Throws(java.io.IOException::class)
override fun mergeFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):Builder {
var parsedMessage:com.example.delhitransit.GtfsRealtime.Alert? = null
try
{
parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry)
}
catch (e:com.google.protobuf.InvalidProtocolBufferException) {
parsedMessage = e.unfinishedMessage as com.example.delhitransit.GtfsRealtime.Alert
throw e.unwrapIOException()
}
finally
{
if (parsedMessage != null)
{
mergeFrom(parsedMessage)
}
}
return this
}

private fun ensureActivePeriodIsMutable() {
if (bitField0_ and 0x00000001 == 0)
{
activePeriod_ = java.util.ArrayList(activePeriod_!!)
bitField0_ = bitField0_ or 0x00000001
}
}

/**
 * <pre>
 * Time when the alert should be shown to the user. If missing, the
 * alert will be shown as long as it appears in the feed.
 * If multiple ranges are given, the alert will be shown during all of them.
</pre> *
 *
 * `repeated .com.example.delhitransit.TimeRange active_period = 1;`
 */
            override fun getActivePeriod(index:Int):com.example.delhitransit.GtfsRealtime.TimeRange {
return if (activePeriodBuilder_ == null) {
            activePeriod_!![index]
        } else {
            activePeriodBuilder_!!.getMessage(index)
        }
}

/**
 * <pre>
 * Time when the alert should be shown to the user. If missing, the
 * alert will be shown as long as it appears in the feed.
 * If multiple ranges are given, the alert will be shown during all of them.
</pre> *
 *
 * `repeated .com.example.delhitransit.TimeRange active_period = 1;`
 */
             fun setActivePeriod(
index:Int, value:com.example.delhitransit.GtfsRealtime.TimeRange?):Builder {
if (activePeriodBuilder_ == null)
{
if (value == null)
{
throw NullPointerException()
}
ensureActivePeriodIsMutable()
activePeriod_!![index] = value
onChanged()
}
else
{
activePeriodBuilder_!!.setMessage(index, value!!)
}
return this
}

/**
 * <pre>
 * Time when the alert should be shown to the user. If missing, the
 * alert will be shown as long as it appears in the feed.
 * If multiple ranges are given, the alert will be shown during all of them.
</pre> *
 *
 * `repeated .com.example.delhitransit.TimeRange active_period = 1;`
 */
             fun setActivePeriod(
index:Int, builderForValue:com.example.delhitransit.GtfsRealtime.TimeRange.Builder):Builder {
if (activePeriodBuilder_ == null)
{
ensureActivePeriodIsMutable()
activePeriod_!![index] = builderForValue.build()
onChanged()
}
else
{
activePeriodBuilder_!!.setMessage(index, builderForValue.build())
}
return this
}

/**
 * <pre>
 * Time when the alert should be shown to the user. If missing, the
 * alert will be shown as long as it appears in the feed.
 * If multiple ranges are given, the alert will be shown during all of them.
</pre> *
 *
 * `repeated .com.example.delhitransit.TimeRange active_period = 1;`
 */
             fun addActivePeriod(value:com.example.delhitransit.GtfsRealtime.TimeRange?):Builder {
if (activePeriodBuilder_ == null)
{
if (value == null)
{
throw NullPointerException()
}
ensureActivePeriodIsMutable()
activePeriod_!!.add(value)
onChanged()
}
else
{
activePeriodBuilder_!!.addMessage(value!!)
}
return this
}

/**
 * <pre>
 * Time when the alert should be shown to the user. If missing, the
 * alert will be shown as long as it appears in the feed.
 * If multiple ranges are given, the alert will be shown during all of them.
</pre> *
 *
 * `repeated .com.example.delhitransit.TimeRange active_period = 1;`
 */
             fun addActivePeriod(
index:Int, value:com.example.delhitransit.GtfsRealtime.TimeRange?):Builder {
if (activePeriodBuilder_ == null)
{
if (value == null)
{
throw NullPointerException()
}
ensureActivePeriodIsMutable()
activePeriod_!!.add(index, value)
onChanged()
}
else
{
activePeriodBuilder_!!.addMessage(index, value!!)
}
return this
}

/**
 * <pre>
 * Time when the alert should be shown to the user. If missing, the
 * alert will be shown as long as it appears in the feed.
 * If multiple ranges are given, the alert will be shown during all of them.
</pre> *
 *
 * `repeated .com.example.delhitransit.TimeRange active_period = 1;`
 */
             fun addActivePeriod(
builderForValue:com.example.delhitransit.GtfsRealtime.TimeRange.Builder):Builder {
if (activePeriodBuilder_ == null)
{
ensureActivePeriodIsMutable()
activePeriod_!!.add(builderForValue.build())
onChanged()
}
else
{
activePeriodBuilder_!!.addMessage(builderForValue.build())
}
return this
}

/**
 * <pre>
 * Time when the alert should be shown to the user. If missing, the
 * alert will be shown as long as it appears in the feed.
 * If multiple ranges are given, the alert will be shown during all of them.
</pre> *
 *
 * `repeated .com.example.delhitransit.TimeRange active_period = 1;`
 */
             fun addActivePeriod(
index:Int, builderForValue:com.example.delhitransit.GtfsRealtime.TimeRange.Builder):Builder {
if (activePeriodBuilder_ == null)
{
ensureActivePeriodIsMutable()
activePeriod_!!.add(index, builderForValue.build())
onChanged()
}
else
{
activePeriodBuilder_!!.addMessage(index, builderForValue.build())
}
return this
}

/**
 * <pre>
 * Time when the alert should be shown to the user. If missing, the
 * alert will be shown as long as it appears in the feed.
 * If multiple ranges are given, the alert will be shown during all of them.
</pre> *
 *
 * `repeated .com.example.delhitransit.TimeRange active_period = 1;`
 */
             fun addAllActivePeriod(
values:Iterable< com.example.delhitransit.GtfsRealtime.TimeRange>):Builder {
if (activePeriodBuilder_ == null)
{
ensureActivePeriodIsMutable()
com.google.protobuf.AbstractMessageLite.Builder.addAll(
values, activePeriod_!!)
onChanged()
}
else
{
activePeriodBuilder_!!.addAllMessages(values)
}
return this
}

/**
 * <pre>
 * Time when the alert should be shown to the user. If missing, the
 * alert will be shown as long as it appears in the feed.
 * If multiple ranges are given, the alert will be shown during all of them.
</pre> *
 *
 * `repeated .com.example.delhitransit.TimeRange active_period = 1;`
 */
             fun clearActivePeriod():Builder {
if (activePeriodBuilder_ == null)
{
activePeriod_ = emptyList<TimeRange>()
bitField0_ = bitField0_ and 0x00000001.inv()
onChanged()
}
else
{
activePeriodBuilder_!!.clear()
}
return this
}

/**
 * <pre>
 * Time when the alert should be shown to the user. If missing, the
 * alert will be shown as long as it appears in the feed.
 * If multiple ranges are given, the alert will be shown during all of them.
</pre> *
 *
 * `repeated .com.example.delhitransit.TimeRange active_period = 1;`
 */
             fun removeActivePeriod(index:Int):Builder {
if (activePeriodBuilder_ == null)
{
ensureActivePeriodIsMutable()
activePeriod_!!.removeAt(index)
onChanged()
}
else
{
activePeriodBuilder_!!.remove(index)
}
return this
}

/**
 * <pre>
 * Time when the alert should be shown to the user. If missing, the
 * alert will be shown as long as it appears in the feed.
 * If multiple ranges are given, the alert will be shown during all of them.
</pre> *
 *
 * `repeated .com.example.delhitransit.TimeRange active_period = 1;`
 */
             fun getActivePeriodBuilder(
index:Int):com.example.delhitransit.GtfsRealtime.TimeRange.Builder {
return activePeriodFieldBuilder.getBuilder(index)
}

/**
 * <pre>
 * Time when the alert should be shown to the user. If missing, the
 * alert will be shown as long as it appears in the feed.
 * If multiple ranges are given, the alert will be shown during all of them.
</pre> *
 *
 * `repeated .com.example.delhitransit.TimeRange active_period = 1;`
 */
            override fun getActivePeriodOrBuilder(
index:Int):com.example.delhitransit.GtfsRealtime.TimeRangeOrBuilder {
return if (activePeriodBuilder_ == null) {
            activePeriod_!![index]
        } else {
            activePeriodBuilder_!!.getMessageOrBuilder(index)
        }
}

/**
 * <pre>
 * Time when the alert should be shown to the user. If missing, the
 * alert will be shown as long as it appears in the feed.
 * If multiple ranges are given, the alert will be shown during all of them.
</pre> *
 *
 * `repeated .com.example.delhitransit.TimeRange active_period = 1;`
 */
             fun addActivePeriodBuilder():com.example.delhitransit.GtfsRealtime.TimeRange.Builder {
return activePeriodFieldBuilder.addBuilder(
com.example.delhitransit.GtfsRealtime.TimeRange.defaultInstance)
}

/**
 * <pre>
 * Time when the alert should be shown to the user. If missing, the
 * alert will be shown as long as it appears in the feed.
 * If multiple ranges are given, the alert will be shown during all of them.
</pre> *
 *
 * `repeated .com.example.delhitransit.TimeRange active_period = 1;`
 */
             fun addActivePeriodBuilder(
index:Int):com.example.delhitransit.GtfsRealtime.TimeRange.Builder {
return activePeriodFieldBuilder.addBuilder(
index, com.example.delhitransit.GtfsRealtime.TimeRange.defaultInstance)
}

private fun ensureInformedEntityIsMutable() {
if (bitField0_ and 0x00000002 == 0)
{
informedEntity_ = java.util.ArrayList(informedEntity_!!)
bitField0_ = bitField0_ or 0x00000002
}
}

/**
 * <pre>
 * Entities whose users we should notify of this alert.
</pre> *
 *
 * `repeated .com.example.delhitransit.EntitySelector informed_entity = 5;`
 */
            override fun getInformedEntity(index:Int):com.example.delhitransit.GtfsRealtime.EntitySelector {
return if (informedEntityBuilder_ == null) {
            informedEntity_!![index]
        } else {
            informedEntityBuilder_!!.getMessage(index)
        }
}

/**
 * <pre>
 * Entities whose users we should notify of this alert.
</pre> *
 *
 * `repeated .com.example.delhitransit.EntitySelector informed_entity = 5;`
 */
             fun setInformedEntity(
index:Int, value:com.example.delhitransit.GtfsRealtime.EntitySelector?):Builder {
if (informedEntityBuilder_ == null)
{
if (value == null)
{
throw NullPointerException()
}
ensureInformedEntityIsMutable()
informedEntity_!![index] = value
onChanged()
}
else
{
informedEntityBuilder_!!.setMessage(index, value!!)
}
return this
}

/**
 * <pre>
 * Entities whose users we should notify of this alert.
</pre> *
 *
 * `repeated .com.example.delhitransit.EntitySelector informed_entity = 5;`
 */
             fun setInformedEntity(
index:Int, builderForValue:com.example.delhitransit.GtfsRealtime.EntitySelector.Builder):Builder {
if (informedEntityBuilder_ == null)
{
ensureInformedEntityIsMutable()
informedEntity_!![index] = builderForValue.build()
onChanged()
}
else
{
informedEntityBuilder_!!.setMessage(index, builderForValue.build())
}
return this
}

/**
 * <pre>
 * Entities whose users we should notify of this alert.
</pre> *
 *
 * `repeated .com.example.delhitransit.EntitySelector informed_entity = 5;`
 */
             fun addInformedEntity(value:com.example.delhitransit.GtfsRealtime.EntitySelector?):Builder {
if (informedEntityBuilder_ == null)
{
if (value == null)
{
throw NullPointerException()
}
ensureInformedEntityIsMutable()
informedEntity_!!.add(value)
onChanged()
}
else
{
informedEntityBuilder_!!.addMessage(value!!)
}
return this
}

/**
 * <pre>
 * Entities whose users we should notify of this alert.
</pre> *
 *
 * `repeated .com.example.delhitransit.EntitySelector informed_entity = 5;`
 */
             fun addInformedEntity(
index:Int, value:com.example.delhitransit.GtfsRealtime.EntitySelector?):Builder {
if (informedEntityBuilder_ == null)
{
if (value == null)
{
throw NullPointerException()
}
ensureInformedEntityIsMutable()
informedEntity_!!.add(index, value)
onChanged()
}
else
{
informedEntityBuilder_!!.addMessage(index, value!!)
}
return this
}

/**
 * <pre>
 * Entities whose users we should notify of this alert.
</pre> *
 *
 * `repeated .com.example.delhitransit.EntitySelector informed_entity = 5;`
 */
             fun addInformedEntity(
builderForValue:com.example.delhitransit.GtfsRealtime.EntitySelector.Builder):Builder {
if (informedEntityBuilder_ == null)
{
ensureInformedEntityIsMutable()
informedEntity_!!.add(builderForValue.build())
onChanged()
}
else
{
informedEntityBuilder_!!.addMessage(builderForValue.build())
}
return this
}

/**
 * <pre>
 * Entities whose users we should notify of this alert.
</pre> *
 *
 * `repeated .com.example.delhitransit.EntitySelector informed_entity = 5;`
 */
             fun addInformedEntity(
index:Int, builderForValue:com.example.delhitransit.GtfsRealtime.EntitySelector.Builder):Builder {
if (informedEntityBuilder_ == null)
{
ensureInformedEntityIsMutable()
informedEntity_!!.add(index, builderForValue.build())
onChanged()
}
else
{
informedEntityBuilder_!!.addMessage(index, builderForValue.build())
}
return this
}

/**
 * <pre>
 * Entities whose users we should notify of this alert.
</pre> *
 *
 * `repeated .com.example.delhitransit.EntitySelector informed_entity = 5;`
 */
             fun addAllInformedEntity(
values:Iterable< com.example.delhitransit.GtfsRealtime.EntitySelector>):Builder {
if (informedEntityBuilder_ == null)
{
ensureInformedEntityIsMutable()
com.google.protobuf.AbstractMessageLite.Builder.addAll(
values, informedEntity_!!)
onChanged()
}
else
{
informedEntityBuilder_!!.addAllMessages(values)
}
return this
}

/**
 * <pre>
 * Entities whose users we should notify of this alert.
</pre> *
 *
 * `repeated .com.example.delhitransit.EntitySelector informed_entity = 5;`
 */
             fun clearInformedEntity():Builder {
if (informedEntityBuilder_ == null)
{
informedEntity_ = emptyList<EntitySelector>()
bitField0_ = bitField0_ and 0x00000002.inv()
onChanged()
}
else
{
informedEntityBuilder_!!.clear()
}
return this
}

/**
 * <pre>
 * Entities whose users we should notify of this alert.
</pre> *
 *
 * `repeated .com.example.delhitransit.EntitySelector informed_entity = 5;`
 */
             fun removeInformedEntity(index:Int):Builder {
if (informedEntityBuilder_ == null)
{
ensureInformedEntityIsMutable()
informedEntity_!!.removeAt(index)
onChanged()
}
else
{
informedEntityBuilder_!!.remove(index)
}
return this
}

/**
 * <pre>
 * Entities whose users we should notify of this alert.
</pre> *
 *
 * `repeated .com.example.delhitransit.EntitySelector informed_entity = 5;`
 */
             fun getInformedEntityBuilder(
index:Int):com.example.delhitransit.GtfsRealtime.EntitySelector.Builder {
return informedEntityFieldBuilder.getBuilder(index)
}

/**
 * <pre>
 * Entities whose users we should notify of this alert.
</pre> *
 *
 * `repeated .com.example.delhitransit.EntitySelector informed_entity = 5;`
 */
            override fun getInformedEntityOrBuilder(
index:Int):com.example.delhitransit.GtfsRealtime.EntitySelectorOrBuilder {
return if (informedEntityBuilder_ == null) {
            informedEntity_!![index]
        } else {
            informedEntityBuilder_!!.getMessageOrBuilder(index)
        }
}

/**
 * <pre>
 * Entities whose users we should notify of this alert.
</pre> *
 *
 * `repeated .com.example.delhitransit.EntitySelector informed_entity = 5;`
 */
             fun addInformedEntityBuilder():com.example.delhitransit.GtfsRealtime.EntitySelector.Builder {
return informedEntityFieldBuilder.addBuilder(
com.example.delhitransit.GtfsRealtime.EntitySelector.defaultInstance)
}

/**
 * <pre>
 * Entities whose users we should notify of this alert.
</pre> *
 *
 * `repeated .com.example.delhitransit.EntitySelector informed_entity = 5;`
 */
             fun addInformedEntityBuilder(
index:Int):com.example.delhitransit.GtfsRealtime.EntitySelector.Builder {
return informedEntityFieldBuilder.addBuilder(
index, com.example.delhitransit.GtfsRealtime.EntitySelector.defaultInstance)
}

/**
 * `optional .com.example.delhitransit.Alert.Cause cause = 6 [default = UNKNOWN_CAUSE];`
 */
            override fun hasCause():Boolean {
return bitField0_ and 0x00000004 != 0
}

/**
 * `optional .com.example.delhitransit.Alert.Cause cause = 6 [default = UNKNOWN_CAUSE];`
 */
             fun setCause(value:com.example.delhitransit.GtfsRealtime.Alert.Cause?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000004
cause_ = value.number
onChanged()
return this
}

/**
 * `optional .com.example.delhitransit.Alert.Cause cause = 6 [default = UNKNOWN_CAUSE];`
 */
             fun clearCause():Builder {
bitField0_ = bitField0_ and 0x00000004.inv()
cause_ = 1
onChanged()
return this
}

/**
 * `optional .com.example.delhitransit.Alert.Effect effect = 7 [default = UNKNOWN_EFFECT];`
 */
            override fun hasEffect():Boolean {
return bitField0_ and 0x00000008 != 0
}

/**
 * `optional .com.example.delhitransit.Alert.Effect effect = 7 [default = UNKNOWN_EFFECT];`
 */
             fun setEffect(value:com.example.delhitransit.GtfsRealtime.Alert.Effect?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000008
effect_ = value.number
onChanged()
return this
}

/**
 * `optional .com.example.delhitransit.Alert.Effect effect = 7 [default = UNKNOWN_EFFECT];`
 */
             fun clearEffect():Builder {
bitField0_ = bitField0_ and 0x00000008.inv()
effect_ = 8
onChanged()
return this
}

/**
 * <pre>
 * The URL which provides additional information about the alert.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString url = 8;`
 */
            override fun hasUrl():Boolean {
return bitField0_ and 0x00000010 != 0
}

/**
 * <pre>
 * The URL which provides additional information about the alert.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString url = 8;`
 */
             fun setUrl(value:com.example.delhitransit.GtfsRealtime.TranslatedString?):Builder {
if (urlBuilder_ == null)
{
if (value == null)
{
throw NullPointerException()
}
url_ = value
onChanged()
}
else
{
urlBuilder_!!.setMessage(value!!)
}
bitField0_ = bitField0_ or 0x00000010
return this
}

/**
 * <pre>
 * The URL which provides additional information about the alert.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString url = 8;`
 */
             fun setUrl(
builderForValue:com.example.delhitransit.GtfsRealtime.TranslatedString.Builder):Builder {
if (urlBuilder_ == null)
{
url_ = builderForValue.build()
onChanged()
}
else
{
urlBuilder_!!.setMessage(builderForValue.build())
}
bitField0_ = bitField0_ or 0x00000010
return this
}

/**
 * <pre>
 * The URL which provides additional information about the alert.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString url = 8;`
 */
             fun mergeUrl(value:com.example.delhitransit.GtfsRealtime.TranslatedString):Builder {
if (urlBuilder_ == null)
{
if (bitField0_ and 0x00000010 != 0 &&
url_ != null &&
url_ !== com.example.delhitransit.GtfsRealtime.TranslatedString.defaultInstance)
{
url_ = com.example.delhitransit.GtfsRealtime.TranslatedString.newBuilder(url_).mergeFrom(value).buildPartial()
}
else
{
url_ = value
}
onChanged()
}
else
{
urlBuilder_!!.mergeFrom(value)
}
bitField0_ = bitField0_ or 0x00000010
return this
}

/**
 * <pre>
 * The URL which provides additional information about the alert.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString url = 8;`
 */
             fun clearUrl():Builder {
if (urlBuilder_ == null)
{
url_ = null
onChanged()
}
else
{
urlBuilder_!!.clear()
}
bitField0_ = bitField0_ and 0x00000010.inv()
return this
}

/**
 * <pre>
 * Alert header. Contains a short summary of the alert text as plain-text.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString header_text = 10;`
 */
            override fun hasHeaderText():Boolean {
return bitField0_ and 0x00000020 != 0
}

/**
 * <pre>
 * Alert header. Contains a short summary of the alert text as plain-text.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString header_text = 10;`
 */
             fun setHeaderText(value:com.example.delhitransit.GtfsRealtime.TranslatedString?):Builder {
if (headerTextBuilder_ == null)
{
if (value == null)
{
throw NullPointerException()
}
headerText_ = value
onChanged()
}
else
{
headerTextBuilder_!!.setMessage(value!!)
}
bitField0_ = bitField0_ or 0x00000020
return this
}

/**
 * <pre>
 * Alert header. Contains a short summary of the alert text as plain-text.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString header_text = 10;`
 */
             fun setHeaderText(
builderForValue:com.example.delhitransit.GtfsRealtime.TranslatedString.Builder):Builder {
if (headerTextBuilder_ == null)
{
headerText_ = builderForValue.build()
onChanged()
}
else
{
headerTextBuilder_!!.setMessage(builderForValue.build())
}
bitField0_ = bitField0_ or 0x00000020
return this
}

/**
 * <pre>
 * Alert header. Contains a short summary of the alert text as plain-text.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString header_text = 10;`
 */
             fun mergeHeaderText(value:com.example.delhitransit.GtfsRealtime.TranslatedString):Builder {
if (headerTextBuilder_ == null)
{
if (bitField0_ and 0x00000020 != 0 &&
headerText_ != null &&
headerText_ !== com.example.delhitransit.GtfsRealtime.TranslatedString.defaultInstance)
{
headerText_ = com.example.delhitransit.GtfsRealtime.TranslatedString.newBuilder(headerText_).mergeFrom(value).buildPartial()
}
else
{
headerText_ = value
}
onChanged()
}
else
{
headerTextBuilder_!!.mergeFrom(value)
}
bitField0_ = bitField0_ or 0x00000020
return this
}

/**
 * <pre>
 * Alert header. Contains a short summary of the alert text as plain-text.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString header_text = 10;`
 */
             fun clearHeaderText():Builder {
if (headerTextBuilder_ == null)
{
headerText_ = null
onChanged()
}
else
{
headerTextBuilder_!!.clear()
}
bitField0_ = bitField0_ and 0x00000020.inv()
return this
}

/**
 * <pre>
 * Full description for the alert as plain-text. The information in the
 * description should add to the information of the header.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString description_text = 11;`
 */
            override fun hasDescriptionText():Boolean {
return bitField0_ and 0x00000040 != 0
}

/**
 * <pre>
 * Full description for the alert as plain-text. The information in the
 * description should add to the information of the header.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString description_text = 11;`
 */
             fun setDescriptionText(value:com.example.delhitransit.GtfsRealtime.TranslatedString?):Builder {
if (descriptionTextBuilder_ == null)
{
if (value == null)
{
throw NullPointerException()
}
descriptionText_ = value
onChanged()
}
else
{
descriptionTextBuilder_!!.setMessage(value!!)
}
bitField0_ = bitField0_ or 0x00000040
return this
}

/**
 * <pre>
 * Full description for the alert as plain-text. The information in the
 * description should add to the information of the header.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString description_text = 11;`
 */
             fun setDescriptionText(
builderForValue:com.example.delhitransit.GtfsRealtime.TranslatedString.Builder):Builder {
if (descriptionTextBuilder_ == null)
{
descriptionText_ = builderForValue.build()
onChanged()
}
else
{
descriptionTextBuilder_!!.setMessage(builderForValue.build())
}
bitField0_ = bitField0_ or 0x00000040
return this
}

/**
 * <pre>
 * Full description for the alert as plain-text. The information in the
 * description should add to the information of the header.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString description_text = 11;`
 */
             fun mergeDescriptionText(value:com.example.delhitransit.GtfsRealtime.TranslatedString):Builder {
if (descriptionTextBuilder_ == null)
{
if (bitField0_ and 0x00000040 != 0 &&
descriptionText_ != null &&
descriptionText_ !== com.example.delhitransit.GtfsRealtime.TranslatedString.defaultInstance)
{
descriptionText_ = com.example.delhitransit.GtfsRealtime.TranslatedString.newBuilder(descriptionText_).mergeFrom(value).buildPartial()
}
else
{
descriptionText_ = value
}
onChanged()
}
else
{
descriptionTextBuilder_!!.mergeFrom(value)
}
bitField0_ = bitField0_ or 0x00000040
return this
}

/**
 * <pre>
 * Full description for the alert as plain-text. The information in the
 * description should add to the information of the header.
</pre> *
 *
 * `optional .com.example.delhitransit.TranslatedString description_text = 11;`
 */
             fun clearDescriptionText():Builder {
if (descriptionTextBuilder_ == null)
{
descriptionText_ = null
onChanged()
}
else
{
descriptionTextBuilder_!!.clear()
}
bitField0_ = bitField0_ and 0x00000040.inv()
return this
}

override fun setUnknownFields(
unknownFields:com.google.protobuf.UnknownFieldSet):Builder {
return super.setUnknownFields(unknownFields)
}

override fun mergeUnknownFields(
unknownFields:com.google.protobuf.UnknownFieldSet):Builder {
return super.mergeUnknownFields(unknownFields)
}

companion object {
 val descriptor:com.google.protobuf.Descriptors.Descriptor
get() =com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_Alert_descriptor
}


 // @@protoc_insertion_point(builder_scope:com.example.delhitransit.Alert)
        }

override fun getParserForType():com.google.protobuf.Parser<Alert> {
return PARSER
}

override fun getDefaultInstanceForType():com.example.delhitransit.GtfsRealtime.Alert {
return defaultInstance
}

companion object {
private val serialVersionUID = 0L

 val descriptor:com.google.protobuf.Descriptors.Descriptor
get() =com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_Alert_descriptor
 val ACTIVE_PERIOD_FIELD_NUMBER = 1

 val INFORMED_ENTITY_FIELD_NUMBER = 5

 val CAUSE_FIELD_NUMBER = 6

 val EFFECT_FIELD_NUMBER = 7

 val URL_FIELD_NUMBER = 8

 val HEADER_TEXT_FIELD_NUMBER = 10

 val DESCRIPTION_TEXT_FIELD_NUMBER = 11

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:java.nio.ByteBuffer):com.example.delhitransit.GtfsRealtime.Alert {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:java.nio.ByteBuffer,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.Alert {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:com.google.protobuf.ByteString):com.example.delhitransit.GtfsRealtime.Alert {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:com.google.protobuf.ByteString,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.Alert {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(data:ByteArray):com.example.delhitransit.GtfsRealtime.Alert {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:ByteArray,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.Alert {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseFrom(input:java.io.InputStream):com.example.delhitransit.GtfsRealtime.Alert {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:java.io.InputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.Alert {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseDelimitedFrom(input:java.io.InputStream):com.example.delhitransit.GtfsRealtime.Alert {
return com.google.protobuf.GeneratedMessageV3
.parseDelimitedWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseDelimitedFrom(
input:java.io.InputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.Alert {
return com.google.protobuf.GeneratedMessageV3
.parseDelimitedWithIOException(PARSER, input, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:com.google.protobuf.CodedInputStream):com.example.delhitransit.GtfsRealtime.Alert {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.Alert {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input, extensionRegistry)
}

 fun newBuilder():Builder {
return defaultInstance.toBuilder()
}

 fun newBuilder(prototype:com.example.delhitransit.GtfsRealtime.Alert):Builder {
return defaultInstance.toBuilder().mergeFrom(prototype)
}

 // @@protoc_insertion_point(class_scope:com.example.delhitransit.Alert)
         val defaultInstance:com.example.delhitransit.GtfsRealtime.Alert

init{
defaultInstance = com.example.delhitransit.GtfsRealtime.Alert()
}

@Deprecated("")
 val PARSER:com.google.protobuf.Parser<Alert> = object:com.google.protobuf.AbstractParser<Alert>() {
@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
override fun parsePartialFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):Alert {
return Alert(input, extensionRegistry)
}
}

 fun parser():com.google.protobuf.Parser<Alert> {
return PARSER
}
}

}

 interface TimeRangeOrBuilder:
 // @@protoc_insertion_point(interface_extends:com.example.delhitransit.TimeRange)
            com.google.protobuf.GeneratedMessageV3.ExtendableMessageOrBuilder<TimeRange> {

/**
 * <pre>
 * Start time, in POSIX time (i.e., number of seconds since January 1st 1970
 * 00:00:00 UTC).
 * If missing, the interval starts at minus infinity.
</pre> *
 *
 * `optional uint64 start = 1;`
 */
         val start:Long

/**
 * <pre>
 * End time, in POSIX time (i.e., number of seconds since January 1st 1970
 * 00:00:00 UTC).
 * If missing, the interval ends at plus infinity.
</pre> *
 *
 * `optional uint64 end = 2;`
 */
         val end:Long

/**
 * <pre>
 * Start time, in POSIX time (i.e., number of seconds since January 1st 1970
 * 00:00:00 UTC).
 * If missing, the interval starts at minus infinity.
</pre> *
 *
 * `optional uint64 start = 1;`
 */
         fun hasStart():Boolean

/**
 * <pre>
 * End time, in POSIX time (i.e., number of seconds since January 1st 1970
 * 00:00:00 UTC).
 * If missing, the interval ends at plus infinity.
</pre> *
 *
 * `optional uint64 end = 2;`
 */
         fun hasEnd():Boolean
}

/**
 * <pre>
 * A time interval. The interval is considered active at time 't' if 't' is
 * greater than or equal to the start time and less than the end time.
</pre> *
 *
 *
 * Protobuf type `com.example.delhitransit.TimeRange`
 */
     class TimeRange:com.google.protobuf.GeneratedMessageV3.ExtendableMessage<TimeRange>,
 // @@protoc_insertion_point(message_implements:com.example.delhitransit.TimeRange)
            TimeRangeOrBuilder {

private var bitField0_:Int = 0
/**
 * <pre>
 * Start time, in POSIX time (i.e., number of seconds since January 1st 1970
 * 00:00:00 UTC).
 * If missing, the interval starts at minus infinity.
</pre> *
 *
 * `optional uint64 start = 1;`
 */
        override var start:Long = 0
private set
/**
 * <pre>
 * End time, in POSIX time (i.e., number of seconds since January 1st 1970
 * 00:00:00 UTC).
 * If missing, the interval ends at plus infinity.
</pre> *
 *
 * `optional uint64 end = 2;`
 */
        override var end:Long = 0
private set

private var memoizedIsInitialized:Byte = -1

 // Use TimeRange.newBuilder() to construct.
        private constructor(builder:com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.example.delhitransit.GtfsRealtime.TimeRange, *>) : super(builder) {}

private constructor() {}

 //        @java.lang.Override
 //        @SuppressWarnings({"unused"})
 //        protected java.lang.Object newInstance(
 //                UnusedPrivateParameter unused) {
 //            return new TimeRange();
 //        }

        override fun getUnknownFields():com.google.protobuf.UnknownFieldSet {
return this.unknownFields
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
private constructor(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite?) : this() {
if (extensionRegistry == null)
{
throw java.lang.NullPointerException()
}
val mutable_bitField0_ = 0
val unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder()
try
{
var done = false
while (!done)
{
val tag = input.readTag()
when (tag) {
0 -> done = true
8 -> {
bitField0_ = bitField0_ or 0x00000001
start = input.readUInt64()
}
16 -> {
bitField0_ = bitField0_ or 0x00000002
end = input.readUInt64()
}
else -> {
if (!parseUnknownField(
input, unknownFields, extensionRegistry, tag))
{
done = true
}
}
}
}
}
catch (e:com.google.protobuf.InvalidProtocolBufferException) {
throw e.setUnfinishedMessage(this)
}
catch (e:java.io.IOException) {
throw com.google.protobuf.InvalidProtocolBufferException(
e).setUnfinishedMessage(this)
}
finally
{
this.unknownFields = unknownFields.build()
makeExtensionsImmutable()
}
}

override fun internalGetFieldAccessorTable():com.google.protobuf.GeneratedMessageV3.FieldAccessorTable {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TimeRange_fieldAccessorTable
.ensureFieldAccessorsInitialized(
com.example.delhitransit.GtfsRealtime.TimeRange::class.java, com.example.delhitransit.GtfsRealtime.TimeRange.Builder::class.java)
}

/**
 * <pre>
 * Start time, in POSIX time (i.e., number of seconds since January 1st 1970
 * 00:00:00 UTC).
 * If missing, the interval starts at minus infinity.
</pre> *
 *
 * `optional uint64 start = 1;`
 */
        override fun hasStart():Boolean {
return bitField0_ and 0x00000001 != 0
}

/**
 * <pre>
 * End time, in POSIX time (i.e., number of seconds since January 1st 1970
 * 00:00:00 UTC).
 * If missing, the interval ends at plus infinity.
</pre> *
 *
 * `optional uint64 end = 2;`
 */
        override fun hasEnd():Boolean {
return bitField0_ and 0x00000002 != 0
}

override fun isInitialized():Boolean {
val isInitialized = memoizedIsInitialized
if (isInitialized.toInt() == 1) return true
if (isInitialized.toInt() == 0) return false

if (!extensionsAreInitialized())
{
memoizedIsInitialized = 0
return false
}
memoizedIsInitialized = 1
return true
}

@Throws(java.io.IOException::class)
override fun writeTo(output:com.google.protobuf.CodedOutputStream) {
val extensionWriter = newExtensionWriter()
if (bitField0_ and 0x00000001 != 0)
{
output.writeUInt64(1, start)
}
if (bitField0_ and 0x00000002 != 0)
{
output.writeUInt64(2, end)
}
extensionWriter.writeUntil(2000, output)
unknownFields.writeTo(output)
}

override fun getSerializedSize():Int {
var size = memoizedSize
if (size != -1) return size

size = 0
if (bitField0_ and 0x00000001 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeUInt64Size(1, start)
}
if (bitField0_ and 0x00000002 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeUInt64Size(2, end)
}
size += extensionsSerializedSize()
size += unknownFields.serializedSize
memoizedSize = size
return size
}

override fun equals(obj:Any?):Boolean {
if (obj === this)
{
return true
}
if (obj !is com.example.delhitransit.GtfsRealtime.TimeRange)
{
return super.equals(obj)
}
val other = obj as com.example.delhitransit.GtfsRealtime.TimeRange?

if (hasStart() != other!!.hasStart()) return false
if (hasStart())
{
if (start != other.start)
return false
}
if (hasEnd() != other.hasEnd()) return false
if (hasEnd())
{
if (end != other.end)
return false
}
if (unknownFields != other.unknownFields) return false
return if (extensionFields != other.extensionFields) false else true
}

override fun hashCode():Int {
if (memoizedHashCode != 0)
{
return memoizedHashCode
}
var hash = 41
hash = 19 * hash + descriptor.hashCode()
if (hasStart())
{
hash = 37 * hash + START_FIELD_NUMBER
hash = 53 * hash + com.google.protobuf.Internal.hashLong(
start)
}
if (hasEnd())
{
hash = 37 * hash + END_FIELD_NUMBER
hash = 53 * hash + com.google.protobuf.Internal.hashLong(
end)
}
hash = AbstractMessage.hashFields(hash, extensionFields)
hash = 29 * hash + unknownFields.hashCode()
memoizedHashCode = hash
return hash
}

override fun newBuilderForType():Builder {
return newBuilder()
}

override fun toBuilder():Builder {
return if (this === defaultInstance)
Builder()
else
Builder().mergeFrom(this)
}

override fun newBuilderForType(
parent:com.google.protobuf.GeneratedMessageV3.BuilderParent):Builder {
return Builder(parent)
}

/**
 * <pre>
 * A time interval. The interval is considered active at time 't' if 't' is
 * greater than or equal to the start time and less than the end time.
</pre> *
 *
 *
 * Protobuf type `com.example.delhitransit.TimeRange`
 */
         class Builder:com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.example.delhitransit.GtfsRealtime.TimeRange, Builder>,
 // @@protoc_insertion_point(builder_implements:com.example.delhitransit.TimeRange)
                com.example.delhitransit.GtfsRealtime.TimeRangeOrBuilder {

private var bitField0_:Int = 0

/**
 * <pre>
 * Start time, in POSIX time (i.e., number of seconds since January 1st 1970
 * 00:00:00 UTC).
 * If missing, the interval starts at minus infinity.
</pre> *
 *
 * `optional uint64 start = 1;`
 */
            override var start:Long = 0
private set

/**
 * <pre>
 * End time, in POSIX time (i.e., number of seconds since January 1st 1970
 * 00:00:00 UTC).
 * If missing, the interval ends at plus infinity.
</pre> *
 *
 * `optional uint64 end = 2;`
 */
            override var end:Long = 0
private set

override fun internalGetFieldAccessorTable():com.google.protobuf.GeneratedMessageV3.FieldAccessorTable {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TimeRange_fieldAccessorTable
.ensureFieldAccessorsInitialized(
com.example.delhitransit.GtfsRealtime.TimeRange::class.java, com.example.delhitransit.GtfsRealtime.TimeRange.Builder::class.java)
}

 // Construct using com.example.delhitransit.GtfsRealtime.TimeRange.newBuilder()
            private constructor() {
maybeForceBuilderInitialization()
}

private constructor(
parent:com.google.protobuf.GeneratedMessageV3.BuilderParent) : super(parent) {
maybeForceBuilderInitialization()
}

private fun maybeForceBuilderInitialization() {
if (com.google.protobuf.GeneratedMessageV3
.alwaysUseFieldBuilders)
{}
}

override fun clear():Builder {
super.clear()
start = 0L
bitField0_ = bitField0_ and 0x00000001.inv()
end = 0L
bitField0_ = bitField0_ and 0x00000002.inv()
return this
}

override fun getDescriptorForType():com.google.protobuf.Descriptors.Descriptor {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TimeRange_descriptor
}

override fun getDefaultInstanceForType():com.example.delhitransit.GtfsRealtime.TimeRange {
return com.example.delhitransit.GtfsRealtime.TimeRange.defaultInstance
}

override fun build():com.example.delhitransit.GtfsRealtime.TimeRange {
val result = buildPartial()
if (!result.isInitialized)
{
throw AbstractMessage.Builder.newUninitializedMessageException(result)
}
return result
}

override fun buildPartial():com.example.delhitransit.GtfsRealtime.TimeRange {
val result = com.example.delhitransit.GtfsRealtime.TimeRange(this)
val from_bitField0_ = bitField0_
var to_bitField0_ = 0
if (from_bitField0_ and 0x00000001 != 0)
{
result.start = start
to_bitField0_ = to_bitField0_ or 0x00000001
}
if (from_bitField0_ and 0x00000002 != 0)
{
result.end = end
to_bitField0_ = to_bitField0_ or 0x00000002
}
result.bitField0_ = to_bitField0_
onBuilt()
return result
}

override fun clone():Builder {
return super.clone()
}

override fun setField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
value:Any):Builder {
return super.setField(field, value)
}

override fun clearField(
field:com.google.protobuf.Descriptors.FieldDescriptor):Builder {
return super.clearField(field)
}

override fun clearOneof(
oneof:com.google.protobuf.Descriptors.OneofDescriptor):Builder {
return super.clearOneof(oneof)
}

override fun setRepeatedField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
index:Int, value:Any):Builder {
return super.setRepeatedField(field, index, value)
}

override fun addRepeatedField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
value:Any):Builder {
return super.addRepeatedField(field, value)
}

override fun <Type> setExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.TimeRange, Type>,
value:Type):Builder {
return super.setExtension(extension, value)
}

override fun <Type> setExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.TimeRange, List<Type>>,
index:Int, value:Type):Builder {
return super.setExtension(extension, index, value)
}

override fun <Type> addExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.TimeRange, List<Type>>,
value:Type):Builder {
return super.addExtension(extension, value)
}

override fun <Type> clearExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.TimeRange, *>):Builder {
return super.clearExtension<Any>(extension)
}

override fun mergeFrom(other:com.google.protobuf.Message):Builder {
if (other is com.example.delhitransit.GtfsRealtime.TimeRange)
{
return mergeFrom(other)
}
else
{
super.mergeFrom(other)
return this
}
}

 fun mergeFrom(other:com.example.delhitransit.GtfsRealtime.TimeRange):Builder {
if (other === com.example.delhitransit.GtfsRealtime.TimeRange.defaultInstance)
return this
if (other.hasStart())
{
setStart(other.start)
}
if (other.hasEnd())
{
setEnd(other.end)
}
this.mergeExtensionFields(other)
this.mergeUnknownFields(other.unknownFields)
onChanged()
return this
}

override fun isInitialized():Boolean {
return if (!extensionsAreInitialized()) {
            false
        } else true
}

@Throws(java.io.IOException::class)
override fun mergeFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):Builder {
var parsedMessage:com.example.delhitransit.GtfsRealtime.TimeRange? = null
try
{
parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry)
}
catch (e:com.google.protobuf.InvalidProtocolBufferException) {
parsedMessage = e.unfinishedMessage as com.example.delhitransit.GtfsRealtime.TimeRange
throw e.unwrapIOException()
}
finally
{
if (parsedMessage != null)
{
mergeFrom(parsedMessage)
}
}
return this
}

/**
 * <pre>
 * Start time, in POSIX time (i.e., number of seconds since January 1st 1970
 * 00:00:00 UTC).
 * If missing, the interval starts at minus infinity.
</pre> *
 *
 * `optional uint64 start = 1;`
 */
            override fun hasStart():Boolean {
return bitField0_ and 0x00000001 != 0
}

/**
 * <pre>
 * Start time, in POSIX time (i.e., number of seconds since January 1st 1970
 * 00:00:00 UTC).
 * If missing, the interval starts at minus infinity.
</pre> *
 *
 * `optional uint64 start = 1;`
 */
             fun setStart(value:Long):Builder {
bitField0_ = bitField0_ or 0x00000001
start = value
onChanged()
return this
}

/**
 * <pre>
 * Start time, in POSIX time (i.e., number of seconds since January 1st 1970
 * 00:00:00 UTC).
 * If missing, the interval starts at minus infinity.
</pre> *
 *
 * `optional uint64 start = 1;`
 */
             fun clearStart():Builder {
bitField0_ = bitField0_ and 0x00000001.inv()
start = 0L
onChanged()
return this
}

/**
 * <pre>
 * End time, in POSIX time (i.e., number of seconds since January 1st 1970
 * 00:00:00 UTC).
 * If missing, the interval ends at plus infinity.
</pre> *
 *
 * `optional uint64 end = 2;`
 */
            override fun hasEnd():Boolean {
return bitField0_ and 0x00000002 != 0
}

/**
 * <pre>
 * End time, in POSIX time (i.e., number of seconds since January 1st 1970
 * 00:00:00 UTC).
 * If missing, the interval ends at plus infinity.
</pre> *
 *
 * `optional uint64 end = 2;`
 */
             fun setEnd(value:Long):Builder {
bitField0_ = bitField0_ or 0x00000002
end = value
onChanged()
return this
}

/**
 * <pre>
 * End time, in POSIX time (i.e., number of seconds since January 1st 1970
 * 00:00:00 UTC).
 * If missing, the interval ends at plus infinity.
</pre> *
 *
 * `optional uint64 end = 2;`
 */
             fun clearEnd():Builder {
bitField0_ = bitField0_ and 0x00000002.inv()
end = 0L
onChanged()
return this
}

override fun setUnknownFields(
unknownFields:com.google.protobuf.UnknownFieldSet):Builder {
return super.setUnknownFields(unknownFields)
}

override fun mergeUnknownFields(
unknownFields:com.google.protobuf.UnknownFieldSet):Builder {
return super.mergeUnknownFields(unknownFields)
}

companion object {
 val descriptor:com.google.protobuf.Descriptors.Descriptor
get() =com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TimeRange_descriptor
}


 // @@protoc_insertion_point(builder_scope:com.example.delhitransit.TimeRange)
        }

override fun getParserForType():com.google.protobuf.Parser<TimeRange> {
return PARSER
}

override fun getDefaultInstanceForType():com.example.delhitransit.GtfsRealtime.TimeRange {
return defaultInstance
}

companion object {
private val serialVersionUID = 0L

 val descriptor:com.google.protobuf.Descriptors.Descriptor
get() =com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TimeRange_descriptor
 val START_FIELD_NUMBER = 1

 val END_FIELD_NUMBER = 2

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:java.nio.ByteBuffer):com.example.delhitransit.GtfsRealtime.TimeRange {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:java.nio.ByteBuffer,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TimeRange {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:com.google.protobuf.ByteString):com.example.delhitransit.GtfsRealtime.TimeRange {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:com.google.protobuf.ByteString,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TimeRange {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(data:ByteArray):com.example.delhitransit.GtfsRealtime.TimeRange {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:ByteArray,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TimeRange {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseFrom(input:java.io.InputStream):com.example.delhitransit.GtfsRealtime.TimeRange {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:java.io.InputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TimeRange {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseDelimitedFrom(input:java.io.InputStream):com.example.delhitransit.GtfsRealtime.TimeRange {
return com.google.protobuf.GeneratedMessageV3
.parseDelimitedWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseDelimitedFrom(
input:java.io.InputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TimeRange {
return com.google.protobuf.GeneratedMessageV3
.parseDelimitedWithIOException(PARSER, input, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:com.google.protobuf.CodedInputStream):com.example.delhitransit.GtfsRealtime.TimeRange {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TimeRange {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input, extensionRegistry)
}

 fun newBuilder():Builder {
return defaultInstance.toBuilder()
}

 fun newBuilder(prototype:com.example.delhitransit.GtfsRealtime.TimeRange):Builder {
return defaultInstance.toBuilder().mergeFrom(prototype)
}

 // @@protoc_insertion_point(class_scope:com.example.delhitransit.TimeRange)
         val defaultInstance:com.example.delhitransit.GtfsRealtime.TimeRange

init{
defaultInstance = com.example.delhitransit.GtfsRealtime.TimeRange()
}

@Deprecated("")
 val PARSER:com.google.protobuf.Parser<TimeRange> = object:com.google.protobuf.AbstractParser<TimeRange>() {
@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
override fun parsePartialFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):TimeRange {
return TimeRange(input, extensionRegistry)
}
}

 fun parser():com.google.protobuf.Parser<TimeRange> {
return PARSER
}
}

}

 interface PositionOrBuilder:
 // @@protoc_insertion_point(interface_extends:com.example.delhitransit.Position)
            com.google.protobuf.GeneratedMessageV3.ExtendableMessageOrBuilder<Position> {

/**
 * <pre>
 * Degrees North, in the WGS-84 coordinate system.
</pre> *
 *
 * `required float latitude = 1;`
 */
         val latitude:Float

/**
 * <pre>
 * Degrees East, in the WGS-84 coordinate system.
</pre> *
 *
 * `required float longitude = 2;`
 */
         val longitude:Float

/**
 * <pre>
 * Bearing, in degrees, clockwise from North, i.e., 0 is North and 90 is East.
 * This can be the compass bearing, or the direction towards the next stop
 * or intermediate location.
 * This should not be direction deduced from the sequence of previous
 * positions, which can be computed from previous data.
</pre> *
 *
 * `optional float bearing = 3;`
 */
         val bearing:Float

/**
 * <pre>
 * Odometer value, in meters.
</pre> *
 *
 * `optional double odometer = 4;`
 */
         val odometer:Double

/**
 * <pre>
 * Momentary speed measured by the vehicle, in meters per second.
</pre> *
 *
 * `optional float speed = 5;`
 */
         val speed:Float

/**
 * <pre>
 * Degrees North, in the WGS-84 coordinate system.
</pre> *
 *
 * `required float latitude = 1;`
 */
         fun hasLatitude():Boolean

/**
 * <pre>
 * Degrees East, in the WGS-84 coordinate system.
</pre> *
 *
 * `required float longitude = 2;`
 */
         fun hasLongitude():Boolean

/**
 * <pre>
 * Bearing, in degrees, clockwise from North, i.e., 0 is North and 90 is East.
 * This can be the compass bearing, or the direction towards the next stop
 * or intermediate location.
 * This should not be direction deduced from the sequence of previous
 * positions, which can be computed from previous data.
</pre> *
 *
 * `optional float bearing = 3;`
 */
         fun hasBearing():Boolean

/**
 * <pre>
 * Odometer value, in meters.
</pre> *
 *
 * `optional double odometer = 4;`
 */
         fun hasOdometer():Boolean

/**
 * <pre>
 * Momentary speed measured by the vehicle, in meters per second.
</pre> *
 *
 * `optional float speed = 5;`
 */
         fun hasSpeed():Boolean
}

/**
 * <pre>
 * A position.
</pre> *
 *
 *
 * Protobuf type `com.example.delhitransit.Position`
 */
     class Position:com.google.protobuf.GeneratedMessageV3.ExtendableMessage<Position>,
 // @@protoc_insertion_point(message_implements:com.example.delhitransit.Position)
            PositionOrBuilder {

private var bitField0_:Int = 0
/**
 * <pre>
 * Degrees North, in the WGS-84 coordinate system.
</pre> *
 *
 * `required float latitude = 1;`
 */
        override var latitude:Float = 0.toFloat()
private set
/**
 * <pre>
 * Degrees East, in the WGS-84 coordinate system.
</pre> *
 *
 * `required float longitude = 2;`
 */
        override var longitude:Float = 0.toFloat()
private set
/**
 * <pre>
 * Bearing, in degrees, clockwise from North, i.e., 0 is North and 90 is East.
 * This can be the compass bearing, or the direction towards the next stop
 * or intermediate location.
 * This should not be direction deduced from the sequence of previous
 * positions, which can be computed from previous data.
</pre> *
 *
 * `optional float bearing = 3;`
 */
        override var bearing:Float = 0.toFloat()
private set
/**
 * <pre>
 * Odometer value, in meters.
</pre> *
 *
 * `optional double odometer = 4;`
 */
        override var odometer:Double = 0.toDouble()
private set
/**
 * <pre>
 * Momentary speed measured by the vehicle, in meters per second.
</pre> *
 *
 * `optional float speed = 5;`
 */
        override var speed:Float = 0.toFloat()
private set

private var memoizedIsInitialized:Byte = -1

 // Use Position.newBuilder() to construct.
        private constructor(builder:com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.example.delhitransit.GtfsRealtime.Position, *>) : super(builder) {}

private constructor() {}

 //        @java.lang.Override
 //        @SuppressWarnings({"unused"})
 //        protected java.lang.Object newInstance(
 //                UnusedPrivateParameter unused) {
 //            return new Position();
 //        }

        override fun getUnknownFields():com.google.protobuf.UnknownFieldSet {
return this.unknownFields
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
private constructor(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite?) : this() {
if (extensionRegistry == null)
{
throw java.lang.NullPointerException()
}
val mutable_bitField0_ = 0
val unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder()
try
{
var done = false
while (!done)
{
val tag = input.readTag()
when (tag) {
0 -> done = true
13 -> {
bitField0_ = bitField0_ or 0x00000001
latitude = input.readFloat()
}
21 -> {
bitField0_ = bitField0_ or 0x00000002
longitude = input.readFloat()
}
29 -> {
bitField0_ = bitField0_ or 0x00000004
bearing = input.readFloat()
}
33 -> {
bitField0_ = bitField0_ or 0x00000008
odometer = input.readDouble()
}
45 -> {
bitField0_ = bitField0_ or 0x00000010
speed = input.readFloat()
}
else -> {
if (!parseUnknownField(
input, unknownFields, extensionRegistry, tag))
{
done = true
}
}
}
}
}
catch (e:com.google.protobuf.InvalidProtocolBufferException) {
throw e.setUnfinishedMessage(this)
}
catch (e:java.io.IOException) {
throw com.google.protobuf.InvalidProtocolBufferException(
e).setUnfinishedMessage(this)
}
finally
{
this.unknownFields = unknownFields.build()
makeExtensionsImmutable()
}
}

override fun internalGetFieldAccessorTable():com.google.protobuf.GeneratedMessageV3.FieldAccessorTable {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_Position_fieldAccessorTable
.ensureFieldAccessorsInitialized(
com.example.delhitransit.GtfsRealtime.Position::class.java, com.example.delhitransit.GtfsRealtime.Position.Builder::class.java)
}

/**
 * <pre>
 * Degrees North, in the WGS-84 coordinate system.
</pre> *
 *
 * `required float latitude = 1;`
 */
        override fun hasLatitude():Boolean {
return bitField0_ and 0x00000001 != 0
}

/**
 * <pre>
 * Degrees East, in the WGS-84 coordinate system.
</pre> *
 *
 * `required float longitude = 2;`
 */
        override fun hasLongitude():Boolean {
return bitField0_ and 0x00000002 != 0
}

/**
 * <pre>
 * Bearing, in degrees, clockwise from North, i.e., 0 is North and 90 is East.
 * This can be the compass bearing, or the direction towards the next stop
 * or intermediate location.
 * This should not be direction deduced from the sequence of previous
 * positions, which can be computed from previous data.
</pre> *
 *
 * `optional float bearing = 3;`
 */
        override fun hasBearing():Boolean {
return bitField0_ and 0x00000004 != 0
}

/**
 * <pre>
 * Odometer value, in meters.
</pre> *
 *
 * `optional double odometer = 4;`
 */
        override fun hasOdometer():Boolean {
return bitField0_ and 0x00000008 != 0
}

/**
 * <pre>
 * Momentary speed measured by the vehicle, in meters per second.
</pre> *
 *
 * `optional float speed = 5;`
 */
        override fun hasSpeed():Boolean {
return bitField0_ and 0x00000010 != 0
}

override fun isInitialized():Boolean {
val isInitialized = memoizedIsInitialized
if (isInitialized.toInt() == 1) return true
if (isInitialized.toInt() == 0) return false

if (!hasLatitude())
{
memoizedIsInitialized = 0
return false
}
if (!hasLongitude())
{
memoizedIsInitialized = 0
return false
}
if (!extensionsAreInitialized())
{
memoizedIsInitialized = 0
return false
}
memoizedIsInitialized = 1
return true
}

@Throws(java.io.IOException::class)
override fun writeTo(output:com.google.protobuf.CodedOutputStream) {
val extensionWriter = newExtensionWriter()
if (bitField0_ and 0x00000001 != 0)
{
output.writeFloat(1, latitude)
}
if (bitField0_ and 0x00000002 != 0)
{
output.writeFloat(2, longitude)
}
if (bitField0_ and 0x00000004 != 0)
{
output.writeFloat(3, bearing)
}
if (bitField0_ and 0x00000008 != 0)
{
output.writeDouble(4, odometer)
}
if (bitField0_ and 0x00000010 != 0)
{
output.writeFloat(5, speed)
}
extensionWriter.writeUntil(2000, output)
unknownFields.writeTo(output)
}

override fun getSerializedSize():Int {
var size = memoizedSize
if (size != -1) return size

size = 0
if (bitField0_ and 0x00000001 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeFloatSize(1, latitude)
}
if (bitField0_ and 0x00000002 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeFloatSize(2, longitude)
}
if (bitField0_ and 0x00000004 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeFloatSize(3, bearing)
}
if (bitField0_ and 0x00000008 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeDoubleSize(4, odometer)
}
if (bitField0_ and 0x00000010 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeFloatSize(5, speed)
}
size += extensionsSerializedSize()
size += unknownFields.serializedSize
memoizedSize = size
return size
}

override fun equals(obj:Any?):Boolean {
if (obj === this)
{
return true
}
if (obj !is com.example.delhitransit.GtfsRealtime.Position)
{
return super.equals(obj)
}
val other = obj as com.example.delhitransit.GtfsRealtime.Position?

if (hasLatitude() != other!!.hasLatitude()) return false
if (hasLatitude())
{
if (java.lang.Float.floatToIntBits(latitude) != java.lang.Float.floatToIntBits(
other.latitude))
return false
}
if (hasLongitude() != other.hasLongitude()) return false
if (hasLongitude())
{
if (java.lang.Float.floatToIntBits(longitude) != java.lang.Float.floatToIntBits(
other.longitude))
return false
}
if (hasBearing() != other.hasBearing()) return false
if (hasBearing())
{
if (java.lang.Float.floatToIntBits(bearing) != java.lang.Float.floatToIntBits(
other.bearing))
return false
}
if (hasOdometer() != other.hasOdometer()) return false
if (hasOdometer())
{
if (java.lang.Double.doubleToLongBits(odometer) != java.lang.Double.doubleToLongBits(
other.odometer))
return false
}
if (hasSpeed() != other.hasSpeed()) return false
if (hasSpeed())
{
if (java.lang.Float.floatToIntBits(speed) != java.lang.Float.floatToIntBits(
other.speed))
return false
}
if (unknownFields != other.unknownFields) return false
return if (extensionFields != other.extensionFields) false else true
}

override fun hashCode():Int {
if (memoizedHashCode != 0)
{
return memoizedHashCode
}
var hash = 41
hash = 19 * hash + descriptor.hashCode()
if (hasLatitude())
{
hash = 37 * hash + LATITUDE_FIELD_NUMBER
hash = 53 * hash + java.lang.Float.floatToIntBits(
latitude)
}
if (hasLongitude())
{
hash = 37 * hash + LONGITUDE_FIELD_NUMBER
hash = 53 * hash + java.lang.Float.floatToIntBits(
longitude)
}
if (hasBearing())
{
hash = 37 * hash + BEARING_FIELD_NUMBER
hash = 53 * hash + java.lang.Float.floatToIntBits(
bearing)
}
if (hasOdometer())
{
hash = 37 * hash + ODOMETER_FIELD_NUMBER
hash = 53 * hash + com.google.protobuf.Internal.hashLong(
java.lang.Double.doubleToLongBits(odometer))
}
if (hasSpeed())
{
hash = 37 * hash + SPEED_FIELD_NUMBER
hash = 53 * hash + java.lang.Float.floatToIntBits(
speed)
}
hash = AbstractMessage.hashFields(hash, extensionFields)
hash = 29 * hash + unknownFields.hashCode()
memoizedHashCode = hash
return hash
}

override fun newBuilderForType():Builder {
return newBuilder()
}

override fun toBuilder():Builder {
return if (this === defaultInstance)
Builder()
else
Builder().mergeFrom(this)
}

override fun newBuilderForType(
parent:com.google.protobuf.GeneratedMessageV3.BuilderParent):Builder {
return Builder(parent)
}

/**
 * <pre>
 * A position.
</pre> *
 *
 *
 * Protobuf type `com.example.delhitransit.Position`
 */
         class Builder:com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.example.delhitransit.GtfsRealtime.Position, Builder>,
 // @@protoc_insertion_point(builder_implements:com.example.delhitransit.Position)
                com.example.delhitransit.GtfsRealtime.PositionOrBuilder {

private var bitField0_:Int = 0

/**
 * <pre>
 * Degrees North, in the WGS-84 coordinate system.
</pre> *
 *
 * `required float latitude = 1;`
 */
            override var latitude:Float = 0.toFloat()
private set

/**
 * <pre>
 * Degrees East, in the WGS-84 coordinate system.
</pre> *
 *
 * `required float longitude = 2;`
 */
            override var longitude:Float = 0.toFloat()
private set

/**
 * <pre>
 * Bearing, in degrees, clockwise from North, i.e., 0 is North and 90 is East.
 * This can be the compass bearing, or the direction towards the next stop
 * or intermediate location.
 * This should not be direction deduced from the sequence of previous
 * positions, which can be computed from previous data.
</pre> *
 *
 * `optional float bearing = 3;`
 */
            override var bearing:Float = 0.toFloat()
private set

/**
 * <pre>
 * Odometer value, in meters.
</pre> *
 *
 * `optional double odometer = 4;`
 */
            override var odometer:Double = 0.toDouble()
private set

/**
 * <pre>
 * Momentary speed measured by the vehicle, in meters per second.
</pre> *
 *
 * `optional float speed = 5;`
 */
            override var speed:Float = 0.toFloat()
private set

override fun internalGetFieldAccessorTable():com.google.protobuf.GeneratedMessageV3.FieldAccessorTable {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_Position_fieldAccessorTable
.ensureFieldAccessorsInitialized(
com.example.delhitransit.GtfsRealtime.Position::class.java, com.example.delhitransit.GtfsRealtime.Position.Builder::class.java)
}

 // Construct using com.example.delhitransit.GtfsRealtime.Position.newBuilder()
            private constructor() {
maybeForceBuilderInitialization()
}

private constructor(
parent:com.google.protobuf.GeneratedMessageV3.BuilderParent) : super(parent) {
maybeForceBuilderInitialization()
}

private fun maybeForceBuilderInitialization() {
if (com.google.protobuf.GeneratedMessageV3
.alwaysUseFieldBuilders)
{}
}

override fun clear():Builder {
super.clear()
latitude = 0f
bitField0_ = bitField0_ and 0x00000001.inv()
longitude = 0f
bitField0_ = bitField0_ and 0x00000002.inv()
bearing = 0f
bitField0_ = bitField0_ and 0x00000004.inv()
odometer = 0.0
bitField0_ = bitField0_ and 0x00000008.inv()
speed = 0f
bitField0_ = bitField0_ and 0x00000010.inv()
return this
}

override fun getDescriptorForType():com.google.protobuf.Descriptors.Descriptor {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_Position_descriptor
}

override fun getDefaultInstanceForType():com.example.delhitransit.GtfsRealtime.Position {
return com.example.delhitransit.GtfsRealtime.Position.defaultInstance
}

override fun build():com.example.delhitransit.GtfsRealtime.Position {
val result = buildPartial()
if (!result.isInitialized)
{
throw AbstractMessage.Builder.newUninitializedMessageException(result)
}
return result
}

override fun buildPartial():com.example.delhitransit.GtfsRealtime.Position {
val result = com.example.delhitransit.GtfsRealtime.Position(this)
val from_bitField0_ = bitField0_
var to_bitField0_ = 0
if (from_bitField0_ and 0x00000001 != 0)
{
result.latitude = latitude
to_bitField0_ = to_bitField0_ or 0x00000001
}
if (from_bitField0_ and 0x00000002 != 0)
{
result.longitude = longitude
to_bitField0_ = to_bitField0_ or 0x00000002
}
if (from_bitField0_ and 0x00000004 != 0)
{
result.bearing = bearing
to_bitField0_ = to_bitField0_ or 0x00000004
}
if (from_bitField0_ and 0x00000008 != 0)
{
result.odometer = odometer
to_bitField0_ = to_bitField0_ or 0x00000008
}
if (from_bitField0_ and 0x00000010 != 0)
{
result.speed = speed
to_bitField0_ = to_bitField0_ or 0x00000010
}
result.bitField0_ = to_bitField0_
onBuilt()
return result
}

override fun clone():Builder {
return super.clone()
}

override fun setField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
value:Any):Builder {
return super.setField(field, value)
}

override fun clearField(
field:com.google.protobuf.Descriptors.FieldDescriptor):Builder {
return super.clearField(field)
}

override fun clearOneof(
oneof:com.google.protobuf.Descriptors.OneofDescriptor):Builder {
return super.clearOneof(oneof)
}

override fun setRepeatedField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
index:Int, value:Any):Builder {
return super.setRepeatedField(field, index, value)
}

override fun addRepeatedField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
value:Any):Builder {
return super.addRepeatedField(field, value)
}

override fun <Type> setExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.Position, Type>,
value:Type):Builder {
return super.setExtension(extension, value)
}

override fun <Type> setExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.Position, List<Type>>,
index:Int, value:Type):Builder {
return super.setExtension(extension, index, value)
}

override fun <Type> addExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.Position, List<Type>>,
value:Type):Builder {
return super.addExtension(extension, value)
}

override fun <Type> clearExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.Position, *>):Builder {
return super.clearExtension<Any>(extension)
}

override fun mergeFrom(other:com.google.protobuf.Message):Builder {
if (other is com.example.delhitransit.GtfsRealtime.Position)
{
return mergeFrom(other)
}
else
{
super.mergeFrom(other)
return this
}
}

 fun mergeFrom(other:com.example.delhitransit.GtfsRealtime.Position?):Builder {
if (other === com.example.delhitransit.GtfsRealtime.Position.defaultInstance)
return this
if (other!!.hasLatitude())
{
setLatitude(other.latitude)
}
if (other.hasLongitude())
{
setLongitude(other.longitude)
}
if (other.hasBearing())
{
setBearing(other.bearing)
}
if (other.hasOdometer())
{
setOdometer(other.odometer)
}
if (other.hasSpeed())
{
setSpeed(other.speed)
}
this.mergeExtensionFields(other)
this.mergeUnknownFields(other.unknownFields)
onChanged()
return this
}

override fun isInitialized():Boolean {
if (!hasLatitude())
{
return false
}
if (!hasLongitude())
{
return false
}
return if (!extensionsAreInitialized()) {
            false
        } else true
}

@Throws(java.io.IOException::class)
override fun mergeFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):Builder {
var parsedMessage:com.example.delhitransit.GtfsRealtime.Position? = null
try
{
parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry)
}
catch (e:com.google.protobuf.InvalidProtocolBufferException) {
parsedMessage = e.unfinishedMessage as com.example.delhitransit.GtfsRealtime.Position
throw e.unwrapIOException()
}
finally
{
if (parsedMessage != null)
{
mergeFrom(parsedMessage)
}
}
return this
}

/**
 * <pre>
 * Degrees North, in the WGS-84 coordinate system.
</pre> *
 *
 * `required float latitude = 1;`
 */
            override fun hasLatitude():Boolean {
return bitField0_ and 0x00000001 != 0
}

/**
 * <pre>
 * Degrees North, in the WGS-84 coordinate system.
</pre> *
 *
 * `required float latitude = 1;`
 */
             fun setLatitude(value:Float):Builder {
bitField0_ = bitField0_ or 0x00000001
latitude = value
onChanged()
return this
}

/**
 * <pre>
 * Degrees North, in the WGS-84 coordinate system.
</pre> *
 *
 * `required float latitude = 1;`
 */
             fun clearLatitude():Builder {
bitField0_ = bitField0_ and 0x00000001.inv()
latitude = 0f
onChanged()
return this
}

/**
 * <pre>
 * Degrees East, in the WGS-84 coordinate system.
</pre> *
 *
 * `required float longitude = 2;`
 */
            override fun hasLongitude():Boolean {
return bitField0_ and 0x00000002 != 0
}

/**
 * <pre>
 * Degrees East, in the WGS-84 coordinate system.
</pre> *
 *
 * `required float longitude = 2;`
 */
             fun setLongitude(value:Float):Builder {
bitField0_ = bitField0_ or 0x00000002
longitude = value
onChanged()
return this
}

/**
 * <pre>
 * Degrees East, in the WGS-84 coordinate system.
</pre> *
 *
 * `required float longitude = 2;`
 */
             fun clearLongitude():Builder {
bitField0_ = bitField0_ and 0x00000002.inv()
longitude = 0f
onChanged()
return this
}

/**
 * <pre>
 * Bearing, in degrees, clockwise from North, i.e., 0 is North and 90 is East.
 * This can be the compass bearing, or the direction towards the next stop
 * or intermediate location.
 * This should not be direction deduced from the sequence of previous
 * positions, which can be computed from previous data.
</pre> *
 *
 * `optional float bearing = 3;`
 */
            override fun hasBearing():Boolean {
return bitField0_ and 0x00000004 != 0
}

/**
 * <pre>
 * Bearing, in degrees, clockwise from North, i.e., 0 is North and 90 is East.
 * This can be the compass bearing, or the direction towards the next stop
 * or intermediate location.
 * This should not be direction deduced from the sequence of previous
 * positions, which can be computed from previous data.
</pre> *
 *
 * `optional float bearing = 3;`
 */
             fun setBearing(value:Float):Builder {
bitField0_ = bitField0_ or 0x00000004
bearing = value
onChanged()
return this
}

/**
 * <pre>
 * Bearing, in degrees, clockwise from North, i.e., 0 is North and 90 is East.
 * This can be the compass bearing, or the direction towards the next stop
 * or intermediate location.
 * This should not be direction deduced from the sequence of previous
 * positions, which can be computed from previous data.
</pre> *
 *
 * `optional float bearing = 3;`
 */
             fun clearBearing():Builder {
bitField0_ = bitField0_ and 0x00000004.inv()
bearing = 0f
onChanged()
return this
}

/**
 * <pre>
 * Odometer value, in meters.
</pre> *
 *
 * `optional double odometer = 4;`
 */
            override fun hasOdometer():Boolean {
return bitField0_ and 0x00000008 != 0
}

/**
 * <pre>
 * Odometer value, in meters.
</pre> *
 *
 * `optional double odometer = 4;`
 */
             fun setOdometer(value:Double):Builder {
bitField0_ = bitField0_ or 0x00000008
odometer = value
onChanged()
return this
}

/**
 * <pre>
 * Odometer value, in meters.
</pre> *
 *
 * `optional double odometer = 4;`
 */
             fun clearOdometer():Builder {
bitField0_ = bitField0_ and 0x00000008.inv()
odometer = 0.0
onChanged()
return this
}

/**
 * <pre>
 * Momentary speed measured by the vehicle, in meters per second.
</pre> *
 *
 * `optional float speed = 5;`
 */
            override fun hasSpeed():Boolean {
return bitField0_ and 0x00000010 != 0
}

/**
 * <pre>
 * Momentary speed measured by the vehicle, in meters per second.
</pre> *
 *
 * `optional float speed = 5;`
 */
             fun setSpeed(value:Float):Builder {
bitField0_ = bitField0_ or 0x00000010
speed = value
onChanged()
return this
}

/**
 * <pre>
 * Momentary speed measured by the vehicle, in meters per second.
</pre> *
 *
 * `optional float speed = 5;`
 */
             fun clearSpeed():Builder {
bitField0_ = bitField0_ and 0x00000010.inv()
speed = 0f
onChanged()
return this
}

override fun setUnknownFields(
unknownFields:com.google.protobuf.UnknownFieldSet):Builder {
return super.setUnknownFields(unknownFields)
}

override fun mergeUnknownFields(
unknownFields:com.google.protobuf.UnknownFieldSet):Builder {
return super.mergeUnknownFields(unknownFields)
}

companion object {
 val descriptor:com.google.protobuf.Descriptors.Descriptor
get() =com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_Position_descriptor
}


 // @@protoc_insertion_point(builder_scope:com.example.delhitransit.Position)
        }

override fun getParserForType():com.google.protobuf.Parser<Position> {
return PARSER
}

override fun getDefaultInstanceForType():com.example.delhitransit.GtfsRealtime.Position {
return defaultInstance
}

companion object {
private val serialVersionUID = 0L

 val descriptor:com.google.protobuf.Descriptors.Descriptor
get() =com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_Position_descriptor
 val LATITUDE_FIELD_NUMBER = 1

 val LONGITUDE_FIELD_NUMBER = 2

 val BEARING_FIELD_NUMBER = 3

 val ODOMETER_FIELD_NUMBER = 4

 val SPEED_FIELD_NUMBER = 5

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:java.nio.ByteBuffer):com.example.delhitransit.GtfsRealtime.Position {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:java.nio.ByteBuffer,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.Position {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:com.google.protobuf.ByteString):com.example.delhitransit.GtfsRealtime.Position {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:com.google.protobuf.ByteString,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.Position {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(data:ByteArray):com.example.delhitransit.GtfsRealtime.Position {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:ByteArray,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.Position {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseFrom(input:java.io.InputStream):com.example.delhitransit.GtfsRealtime.Position {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:java.io.InputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.Position {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseDelimitedFrom(input:java.io.InputStream):com.example.delhitransit.GtfsRealtime.Position {
return com.google.protobuf.GeneratedMessageV3
.parseDelimitedWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseDelimitedFrom(
input:java.io.InputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.Position {
return com.google.protobuf.GeneratedMessageV3
.parseDelimitedWithIOException(PARSER, input, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:com.google.protobuf.CodedInputStream):com.example.delhitransit.GtfsRealtime.Position {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.Position {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input, extensionRegistry)
}

 fun newBuilder():Builder {
return defaultInstance.toBuilder()
}

 fun newBuilder(prototype:com.example.delhitransit.GtfsRealtime.Position):Builder {
return defaultInstance.toBuilder().mergeFrom(prototype)
}

 // @@protoc_insertion_point(class_scope:com.example.delhitransit.Position)
         val defaultInstance:com.example.delhitransit.GtfsRealtime.Position

init{
defaultInstance = com.example.delhitransit.GtfsRealtime.Position()
}

@Deprecated("")
 val PARSER:com.google.protobuf.Parser<Position> = object:com.google.protobuf.AbstractParser<Position>() {
@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
override fun parsePartialFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):Position {
return Position(input, extensionRegistry)
}
}

 fun parser():com.google.protobuf.Parser<Position> {
return PARSER
}
}

}

 interface TripDescriptorOrBuilder:
 // @@protoc_insertion_point(interface_extends:com.example.delhitransit.TripDescriptor)
            com.google.protobuf.GeneratedMessageV3.ExtendableMessageOrBuilder<TripDescriptor> {

/**
 * <pre>
 * The trip_id from the GTFS feed that this selector refers to.
 * For non frequency-based trips, this field is enough to uniquely identify
 * the trip. For frequency-based trip, start_time and start_date might also be
 * necessary.
</pre> *
 *
 * `optional string trip_id = 1;`
 */
         val tripId:java.lang.String

/**
 * <pre>
 * The trip_id from the GTFS feed that this selector refers to.
 * For non frequency-based trips, this field is enough to uniquely identify
 * the trip. For frequency-based trip, start_time and start_date might also be
 * necessary.
</pre> *
 *
 * `optional string trip_id = 1;`
 */
         val tripIdBytes:com.google.protobuf.ByteString

/**
 * <pre>
 * The route_id from the GTFS that this selector refers to.
</pre> *
 *
 * `optional string route_id = 5;`
 */
         val routeId:java.lang.String

/**
 * <pre>
 * The route_id from the GTFS that this selector refers to.
</pre> *
 *
 * `optional string route_id = 5;`
 */
         val routeIdBytes:com.google.protobuf.ByteString

/**
 * <pre>
 * The direction_id from the GTFS feed trips.txt file, indicating the
 * direction of travel for trips this selector refers to. This field is
 * still experimental, and subject to change. It may be formally adopted in
 * the future.
</pre> *
 *
 * `optional uint32 direction_id = 6;`
 */
         val directionId:Int

/**
 * <pre>
 * The initially scheduled start time of this trip instance.
 * When the trip_id corresponds to a non-frequency-based trip, this field
 * should either be omitted or be equal to the value in the GTFS feed. When
 * the trip_id corresponds to a frequency-based trip, the start_time must be
 * specified for trip updates and vehicle positions. If the trip corresponds
 * to exact_times=1 GTFS record, then start_time must be some multiple
 * (including zero) of headway_secs later than frequencies.txt start_time for
 * the corresponding time period. If the trip corresponds to exact_times=0,
 * then its start_time may be arbitrary, and is initially expected to be the
 * first departure of the trip. Once established, the start_time of this
 * frequency-based trip should be considered immutable, even if the first
 * departure time changes -- that time change may instead be reflected in a
 * StopTimeUpdate.
 * Format and semantics of the field is same as that of
 * GTFS/frequencies.txt/start_time, e.g., 11:15:35 or 25:15:35.
</pre> *
 *
 * `optional string start_time = 2;`
 */
         val startTime:java.lang.String

/**
 * <pre>
 * The initially scheduled start time of this trip instance.
 * When the trip_id corresponds to a non-frequency-based trip, this field
 * should either be omitted or be equal to the value in the GTFS feed. When
 * the trip_id corresponds to a frequency-based trip, the start_time must be
 * specified for trip updates and vehicle positions. If the trip corresponds
 * to exact_times=1 GTFS record, then start_time must be some multiple
 * (including zero) of headway_secs later than frequencies.txt start_time for
 * the corresponding time period. If the trip corresponds to exact_times=0,
 * then its start_time may be arbitrary, and is initially expected to be the
 * first departure of the trip. Once established, the start_time of this
 * frequency-based trip should be considered immutable, even if the first
 * departure time changes -- that time change may instead be reflected in a
 * StopTimeUpdate.
 * Format and semantics of the field is same as that of
 * GTFS/frequencies.txt/start_time, e.g., 11:15:35 or 25:15:35.
</pre> *
 *
 * `optional string start_time = 2;`
 */
         val startTimeBytes:com.google.protobuf.ByteString

/**
 * <pre>
 * The scheduled start date of this trip instance.
 * Must be provided to disambiguate trips that are so late as to collide with
 * a scheduled trip on a next day. For example, for a train that departs 8:00
 * and 20:00 every day, and is 12 hours late, there would be two distinct
 * trips on the same time.
 * This field can be provided but is not mandatory for schedules in which such
 * collisions are impossible - for example, a service running on hourly
 * schedule where a vehicle that is one hour late is not considered to be
 * related to schedule anymore.
 * In YYYYMMDD format.
</pre> *
 *
 * `optional string start_date = 3;`
 */
         val startDate:java.lang.String

/**
 * <pre>
 * The scheduled start date of this trip instance.
 * Must be provided to disambiguate trips that are so late as to collide with
 * a scheduled trip on a next day. For example, for a train that departs 8:00
 * and 20:00 every day, and is 12 hours late, there would be two distinct
 * trips on the same time.
 * This field can be provided but is not mandatory for schedules in which such
 * collisions are impossible - for example, a service running on hourly
 * schedule where a vehicle that is one hour late is not considered to be
 * related to schedule anymore.
 * In YYYYMMDD format.
</pre> *
 *
 * `optional string start_date = 3;`
 */
         val startDateBytes:com.google.protobuf.ByteString

/**
 * `optional .com.example.delhitransit.TripDescriptor.ScheduleRelationship schedule_relationship = 4;`
 */
         val scheduleRelationship:com.example.delhitransit.GtfsRealtime.TripDescriptor.ScheduleRelationship

/**
 * <pre>
 * The trip_id from the GTFS feed that this selector refers to.
 * For non frequency-based trips, this field is enough to uniquely identify
 * the trip. For frequency-based trip, start_time and start_date might also be
 * necessary.
</pre> *
 *
 * `optional string trip_id = 1;`
 */
         fun hasTripId():Boolean

/**
 * <pre>
 * The route_id from the GTFS that this selector refers to.
</pre> *
 *
 * `optional string route_id = 5;`
 */
         fun hasRouteId():Boolean

/**
 * <pre>
 * The direction_id from the GTFS feed trips.txt file, indicating the
 * direction of travel for trips this selector refers to. This field is
 * still experimental, and subject to change. It may be formally adopted in
 * the future.
</pre> *
 *
 * `optional uint32 direction_id = 6;`
 */
         fun hasDirectionId():Boolean

/**
 * <pre>
 * The initially scheduled start time of this trip instance.
 * When the trip_id corresponds to a non-frequency-based trip, this field
 * should either be omitted or be equal to the value in the GTFS feed. When
 * the trip_id corresponds to a frequency-based trip, the start_time must be
 * specified for trip updates and vehicle positions. If the trip corresponds
 * to exact_times=1 GTFS record, then start_time must be some multiple
 * (including zero) of headway_secs later than frequencies.txt start_time for
 * the corresponding time period. If the trip corresponds to exact_times=0,
 * then its start_time may be arbitrary, and is initially expected to be the
 * first departure of the trip. Once established, the start_time of this
 * frequency-based trip should be considered immutable, even if the first
 * departure time changes -- that time change may instead be reflected in a
 * StopTimeUpdate.
 * Format and semantics of the field is same as that of
 * GTFS/frequencies.txt/start_time, e.g., 11:15:35 or 25:15:35.
</pre> *
 *
 * `optional string start_time = 2;`
 */
         fun hasStartTime():Boolean

/**
 * <pre>
 * The scheduled start date of this trip instance.
 * Must be provided to disambiguate trips that are so late as to collide with
 * a scheduled trip on a next day. For example, for a train that departs 8:00
 * and 20:00 every day, and is 12 hours late, there would be two distinct
 * trips on the same time.
 * This field can be provided but is not mandatory for schedules in which such
 * collisions are impossible - for example, a service running on hourly
 * schedule where a vehicle that is one hour late is not considered to be
 * related to schedule anymore.
 * In YYYYMMDD format.
</pre> *
 *
 * `optional string start_date = 3;`
 */
         fun hasStartDate():Boolean

/**
 * `optional .com.example.delhitransit.TripDescriptor.ScheduleRelationship schedule_relationship = 4;`
 */
         fun hasScheduleRelationship():Boolean
}

/**
 * <pre>
 * A descriptor that identifies an instance of a GTFS trip, or all instances of
 * a trip along a route.
 * - To specify a single trip instance, the trip_id (and if necessary,
 * start_time) is set. If route_id is also set, then it should be same as one
 * that the given trip corresponds to.
 * - To specify all the trips along a given route, only the route_id should be
 * set. Note that if the trip_id is not known, then stop sequence ids in
 * TripUpdate are not sufficient, and stop_ids must be provided as well. In
 * addition, absolute arrival/departure times must be provided.
</pre> *
 *
 *
 * Protobuf type `com.example.delhitransit.TripDescriptor`
 */
     class TripDescriptor:com.google.protobuf.GeneratedMessageV3.ExtendableMessage<TripDescriptor>,
 // @@protoc_insertion_point(message_implements:com.example.delhitransit.TripDescriptor)
            TripDescriptorOrBuilder {

private var bitField0_:Int = 0
@Volatile private var tripId_:Any? = null

/**
 * <pre>
 * The trip_id from the GTFS feed that this selector refers to.
 * For non frequency-based trips, this field is enough to uniquely identify
 * the trip. For frequency-based trip, start_time and start_date might also be
 * necessary.
</pre> *
 *
 * `optional string trip_id = 1;`
 */
        override val tripId:java.lang.String
get() {
val ref = tripId_
if (ref is java.lang.String)
{
return ref
}
else
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
tripId_ = s
}
return s
}
}

/**
 * <pre>
 * The trip_id from the GTFS feed that this selector refers to.
 * For non frequency-based trips, this field is enough to uniquely identify
 * the trip. For frequency-based trip, start_time and start_date might also be
 * necessary.
</pre> *
 *
 * `optional string trip_id = 1;`
 */
        override val tripIdBytes:com.google.protobuf.ByteString
get() {
val ref = tripId_
if (ref is java.lang.String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
tripId_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}
@Volatile private var routeId_:Any? = null

/**
 * <pre>
 * The route_id from the GTFS that this selector refers to.
</pre> *
 *
 * `optional string route_id = 5;`
 */
        override val routeId:java.lang.String
get() {
val ref = routeId_
if (ref is java.lang.String)
{
return ref
}
else
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
routeId_ = s
}
return s
}
}

/**
 * <pre>
 * The route_id from the GTFS that this selector refers to.
</pre> *
 *
 * `optional string route_id = 5;`
 */
        override val routeIdBytes:com.google.protobuf.ByteString
get() {
val ref = routeId_
if (ref is java.lang.String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
routeId_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}
/**
 * <pre>
 * The direction_id from the GTFS feed trips.txt file, indicating the
 * direction of travel for trips this selector refers to. This field is
 * still experimental, and subject to change. It may be formally adopted in
 * the future.
</pre> *
 *
 * `optional uint32 direction_id = 6;`
 */
        override var directionId:Int = 0
private set
@Volatile private var startTime_:Any? = null

/**
 * <pre>
 * The initially scheduled start time of this trip instance.
 * When the trip_id corresponds to a non-frequency-based trip, this field
 * should either be omitted or be equal to the value in the GTFS feed. When
 * the trip_id corresponds to a frequency-based trip, the start_time must be
 * specified for trip updates and vehicle positions. If the trip corresponds
 * to exact_times=1 GTFS record, then start_time must be some multiple
 * (including zero) of headway_secs later than frequencies.txt start_time for
 * the corresponding time period. If the trip corresponds to exact_times=0,
 * then its start_time may be arbitrary, and is initially expected to be the
 * first departure of the trip. Once established, the start_time of this
 * frequency-based trip should be considered immutable, even if the first
 * departure time changes -- that time change may instead be reflected in a
 * StopTimeUpdate.
 * Format and semantics of the field is same as that of
 * GTFS/frequencies.txt/start_time, e.g., 11:15:35 or 25:15:35.
</pre> *
 *
 * `optional string start_time = 2;`
 */
        override val startTime:java.lang.String
get() {
val ref = startTime_
if (ref is java.lang.String)
{
return ref
}
else
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
startTime_ = s
}
return s
}
}

/**
 * <pre>
 * The initially scheduled start time of this trip instance.
 * When the trip_id corresponds to a non-frequency-based trip, this field
 * should either be omitted or be equal to the value in the GTFS feed. When
 * the trip_id corresponds to a frequency-based trip, the start_time must be
 * specified for trip updates and vehicle positions. If the trip corresponds
 * to exact_times=1 GTFS record, then start_time must be some multiple
 * (including zero) of headway_secs later than frequencies.txt start_time for
 * the corresponding time period. If the trip corresponds to exact_times=0,
 * then its start_time may be arbitrary, and is initially expected to be the
 * first departure of the trip. Once established, the start_time of this
 * frequency-based trip should be considered immutable, even if the first
 * departure time changes -- that time change may instead be reflected in a
 * StopTimeUpdate.
 * Format and semantics of the field is same as that of
 * GTFS/frequencies.txt/start_time, e.g., 11:15:35 or 25:15:35.
</pre> *
 *
 * `optional string start_time = 2;`
 */
        override val startTimeBytes:com.google.protobuf.ByteString
get() {
val ref = startTime_
if (ref is java.lang.String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
startTime_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}
@Volatile private var startDate_:Any? = null

/**
 * <pre>
 * The scheduled start date of this trip instance.
 * Must be provided to disambiguate trips that are so late as to collide with
 * a scheduled trip on a next day. For example, for a train that departs 8:00
 * and 20:00 every day, and is 12 hours late, there would be two distinct
 * trips on the same time.
 * This field can be provided but is not mandatory for schedules in which such
 * collisions are impossible - for example, a service running on hourly
 * schedule where a vehicle that is one hour late is not considered to be
 * related to schedule anymore.
 * In YYYYMMDD format.
</pre> *
 *
 * `optional string start_date = 3;`
 */
        override val startDate:java.lang.String
get() {
val ref = startDate_
if (ref is java.lang.String)
{
return ref
}
else
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
startDate_ = s
}
return s
}
}

/**
 * <pre>
 * The scheduled start date of this trip instance.
 * Must be provided to disambiguate trips that are so late as to collide with
 * a scheduled trip on a next day. For example, for a train that departs 8:00
 * and 20:00 every day, and is 12 hours late, there would be two distinct
 * trips on the same time.
 * This field can be provided but is not mandatory for schedules in which such
 * collisions are impossible - for example, a service running on hourly
 * schedule where a vehicle that is one hour late is not considered to be
 * related to schedule anymore.
 * In YYYYMMDD format.
</pre> *
 *
 * `optional string start_date = 3;`
 */
        override val startDateBytes:com.google.protobuf.ByteString
get() {
val ref = startDate_
if (ref is java.lang.String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
startDate_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}
private var scheduleRelationship_:Int = 0

/**
 * `optional .com.example.delhitransit.TripDescriptor.ScheduleRelationship schedule_relationship = 4;`
 */
        override val scheduleRelationship:com.example.delhitransit.GtfsRealtime.TripDescriptor.ScheduleRelationship
get() {
val result = com.example.delhitransit.GtfsRealtime.TripDescriptor.ScheduleRelationship.valueOf(scheduleRelationship_)
return result ?: com.example.delhitransit.GtfsRealtime.TripDescriptor.ScheduleRelationship.SCHEDULED
}

private var memoizedIsInitialized:Byte = -1

 // Use TripDescriptor.newBuilder() to construct.
        private constructor(builder:com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.example.delhitransit.GtfsRealtime.TripDescriptor, *>) : super(builder) {}

private constructor() {
tripId_ = ""
routeId_ = ""
startTime_ = ""
startDate_ = ""
scheduleRelationship_ = 0
}

 //        @java.lang.Override
 //        @SuppressWarnings({"unused"})
 //        protected java.lang.Object newInstance(
 //                UnusedPrivateParameter unused) {
 //            return new TripDescriptor();
 //        }

        override fun getUnknownFields():com.google.protobuf.UnknownFieldSet {
return this.unknownFields
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
private constructor(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite?) : this() {
if (extensionRegistry == null)
{
throw java.lang.NullPointerException()
}
val mutable_bitField0_ = 0
val unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder()
try
{
var done = false
while (!done)
{
val tag = input.readTag()
when (tag) {
0 -> done = true
10 -> {
val bs = input.readBytes()
bitField0_ = bitField0_ or 0x00000001
tripId_ = bs
}
18 -> {
val bs = input.readBytes()
bitField0_ = bitField0_ or 0x00000008
startTime_ = bs
}
26 -> {
val bs = input.readBytes()
bitField0_ = bitField0_ or 0x00000010
startDate_ = bs
}
32 -> {
val rawValue = input.readEnum()
val value = com.example.delhitransit.GtfsRealtime.TripDescriptor.ScheduleRelationship.valueOf(rawValue)
if (value == null)
{
unknownFields.mergeVarintField(4, rawValue)
}
else
{
bitField0_ = bitField0_ or 0x00000020
scheduleRelationship_ = rawValue
}
}
42 -> {
val bs = input.readBytes()
bitField0_ = bitField0_ or 0x00000002
routeId_ = bs
}
48 -> {
bitField0_ = bitField0_ or 0x00000004
directionId = input.readUInt32()
}
else -> {
if (!parseUnknownField(
input, unknownFields, extensionRegistry, tag))
{
done = true
}
}
}
}
}
catch (e:com.google.protobuf.InvalidProtocolBufferException) {
throw e.setUnfinishedMessage(this)
}
catch (e:java.io.IOException) {
throw com.google.protobuf.InvalidProtocolBufferException(
e).setUnfinishedMessage(this)
}
finally
{
this.unknownFields = unknownFields.build()
makeExtensionsImmutable()
}
}

override fun internalGetFieldAccessorTable():com.google.protobuf.GeneratedMessageV3.FieldAccessorTable {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TripDescriptor_fieldAccessorTable
.ensureFieldAccessorsInitialized(
com.example.delhitransit.GtfsRealtime.TripDescriptor::class.java, com.example.delhitransit.GtfsRealtime.TripDescriptor.Builder::class.java)
}

/**
 * <pre>
 * The relation between this trip and the static schedule. If a trip is done
 * in accordance with temporary schedule, not reflected in GTFS, then it
 * shouldn't be marked as SCHEDULED, but likely as ADDED.
</pre> *
 *
 *
 * Protobuf enum `com.example.delhitransit.TripDescriptor.ScheduleRelationship`
 */
         enum class ScheduleRelationship private constructor(private val value:Int):com.google.protobuf.ProtocolMessageEnum {
/**
 * <pre>
 * Trip that is running in accordance with its GTFS schedule, or is close
 * enough to the scheduled trip to be associated with it.
</pre> *
 *
 * `SCHEDULED = 0;`
 */
            SCHEDULED(0),
/**
 * <pre>
 * An extra trip that was added in addition to a running schedule, for
 * example, to replace a broken vehicle or to respond to sudden passenger
 * load.
</pre> *
 *
 * `ADDED = 1;`
 */
            ADDED(1),
/**
 * <pre>
 * A trip that is running with no schedule associated to it, for example, if
 * there is no schedule at all.
</pre> *
 *
 * `UNSCHEDULED = 2;`
 */
            UNSCHEDULED(2),
/**
 * <pre>
 * A trip that existed in the schedule but was removed.
</pre> *
 *
 * `CANCELED = 3;`
 */
            CANCELED(3);


override fun getNumber():Int {
return value
}

override fun getValueDescriptor():com.google.protobuf.Descriptors.EnumValueDescriptor {
return descriptor.values[ordinal]
}

override fun getDescriptorForType():com.google.protobuf.Descriptors.EnumDescriptor {
return descriptor
}

companion object {

/**
 * <pre>
 * Trip that is running in accordance with its GTFS schedule, or is close
 * enough to the scheduled trip to be associated with it.
</pre> *
 *
 * `SCHEDULED = 0;`
 */
             val SCHEDULED_VALUE = 0
/**
 * <pre>
 * An extra trip that was added in addition to a running schedule, for
 * example, to replace a broken vehicle or to respond to sudden passenger
 * load.
</pre> *
 *
 * `ADDED = 1;`
 */
             val ADDED_VALUE = 1
/**
 * <pre>
 * A trip that is running with no schedule associated to it, for example, if
 * there is no schedule at all.
</pre> *
 *
 * `UNSCHEDULED = 2;`
 */
             val UNSCHEDULED_VALUE = 2
/**
 * <pre>
 * A trip that existed in the schedule but was removed.
</pre> *
 *
 * `CANCELED = 3;`
 */
             val CANCELED_VALUE = 3


            @Deprecated("Use {@link #forNumber(int)} instead.")
 fun valueOf(value:Int):ScheduleRelationship? {
return forNumber(value)
}

 fun forNumber(value:Int):ScheduleRelationship? {
when (value) {
0 -> return SCHEDULED
1 -> return ADDED
2 -> return UNSCHEDULED
3 -> return CANCELED
else -> return null
}
}

 fun internalGetValueMap():com.google.protobuf.Internal.EnumLiteMap<ScheduleRelationship> {
return internalValueMap
}

private val internalValueMap = Internal.EnumLiteMap<ScheduleRelationship> { number -> ScheduleRelationship.forNumber(number) }

 val descriptor:com.google.protobuf.Descriptors.EnumDescriptor
get() =com.example.delhitransit.GtfsRealtime.TripDescriptor.descriptor.enumTypes[0]

private val VALUES = values()

 fun valueOf(
desc:com.google.protobuf.Descriptors.EnumValueDescriptor):ScheduleRelationship {
require(desc.type == descriptor) { "EnumValueDescriptor is not for this type." }
return VALUES[desc.index]
}
}

 // @@protoc_insertion_point(enum_scope:com.example.delhitransit.TripDescriptor.ScheduleRelationship)
        }

/**
 * <pre>
 * The trip_id from the GTFS feed that this selector refers to.
 * For non frequency-based trips, this field is enough to uniquely identify
 * the trip. For frequency-based trip, start_time and start_date might also be
 * necessary.
</pre> *
 *
 * `optional string trip_id = 1;`
 */
        override fun hasTripId():Boolean {
return bitField0_ and 0x00000001 != 0
}

/**
 * <pre>
 * The route_id from the GTFS that this selector refers to.
</pre> *
 *
 * `optional string route_id = 5;`
 */
        override fun hasRouteId():Boolean {
return bitField0_ and 0x00000002 != 0
}

/**
 * <pre>
 * The direction_id from the GTFS feed trips.txt file, indicating the
 * direction of travel for trips this selector refers to. This field is
 * still experimental, and subject to change. It may be formally adopted in
 * the future.
</pre> *
 *
 * `optional uint32 direction_id = 6;`
 */
        override fun hasDirectionId():Boolean {
return bitField0_ and 0x00000004 != 0
}

/**
 * <pre>
 * The initially scheduled start time of this trip instance.
 * When the trip_id corresponds to a non-frequency-based trip, this field
 * should either be omitted or be equal to the value in the GTFS feed. When
 * the trip_id corresponds to a frequency-based trip, the start_time must be
 * specified for trip updates and vehicle positions. If the trip corresponds
 * to exact_times=1 GTFS record, then start_time must be some multiple
 * (including zero) of headway_secs later than frequencies.txt start_time for
 * the corresponding time period. If the trip corresponds to exact_times=0,
 * then its start_time may be arbitrary, and is initially expected to be the
 * first departure of the trip. Once established, the start_time of this
 * frequency-based trip should be considered immutable, even if the first
 * departure time changes -- that time change may instead be reflected in a
 * StopTimeUpdate.
 * Format and semantics of the field is same as that of
 * GTFS/frequencies.txt/start_time, e.g., 11:15:35 or 25:15:35.
</pre> *
 *
 * `optional string start_time = 2;`
 */
        override fun hasStartTime():Boolean {
return bitField0_ and 0x00000008 != 0
}

/**
 * <pre>
 * The scheduled start date of this trip instance.
 * Must be provided to disambiguate trips that are so late as to collide with
 * a scheduled trip on a next day. For example, for a train that departs 8:00
 * and 20:00 every day, and is 12 hours late, there would be two distinct
 * trips on the same time.
 * This field can be provided but is not mandatory for schedules in which such
 * collisions are impossible - for example, a service running on hourly
 * schedule where a vehicle that is one hour late is not considered to be
 * related to schedule anymore.
 * In YYYYMMDD format.
</pre> *
 *
 * `optional string start_date = 3;`
 */
        override fun hasStartDate():Boolean {
return bitField0_ and 0x00000010 != 0
}

/**
 * `optional .com.example.delhitransit.TripDescriptor.ScheduleRelationship schedule_relationship = 4;`
 */
        override fun hasScheduleRelationship():Boolean {
return bitField0_ and 0x00000020 != 0
}

override fun isInitialized():Boolean {
val isInitialized = memoizedIsInitialized
if (isInitialized.toInt() == 1) return true
if (isInitialized.toInt() == 0) return false

if (!extensionsAreInitialized())
{
memoizedIsInitialized = 0
return false
}
memoizedIsInitialized = 1
return true
}

@Throws(java.io.IOException::class)
override fun writeTo(output:com.google.protobuf.CodedOutputStream) {
val extensionWriter = newExtensionWriter()
if (bitField0_ and 0x00000001 != 0)
{
com.google.protobuf.GeneratedMessageV3.writeString(output, 1, tripId_)
}
if (bitField0_ and 0x00000008 != 0)
{
com.google.protobuf.GeneratedMessageV3.writeString(output, 2, startTime_)
}
if (bitField0_ and 0x00000010 != 0)
{
com.google.protobuf.GeneratedMessageV3.writeString(output, 3, startDate_)
}
if (bitField0_ and 0x00000020 != 0)
{
output.writeEnum(4, scheduleRelationship_)
}
if (bitField0_ and 0x00000002 != 0)
{
com.google.protobuf.GeneratedMessageV3.writeString(output, 5, routeId_)
}
if (bitField0_ and 0x00000004 != 0)
{
output.writeUInt32(6, directionId)
}
extensionWriter.writeUntil(2000, output)
unknownFields.writeTo(output)
}

override fun getSerializedSize():Int {
var size = memoizedSize
if (size != -1) return size

size = 0
if (bitField0_ and 0x00000001 != 0)
{
size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, tripId_!!)
}
if (bitField0_ and 0x00000008 != 0)
{
size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, startTime_!!)
}
if (bitField0_ and 0x00000010 != 0)
{
size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, startDate_!!)
}
if (bitField0_ and 0x00000020 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeEnumSize(4, scheduleRelationship_)
}
if (bitField0_ and 0x00000002 != 0)
{
size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, routeId_!!)
}
if (bitField0_ and 0x00000004 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeUInt32Size(6, directionId)
}
size += extensionsSerializedSize()
size += unknownFields.serializedSize
memoizedSize = size
return size
}

override fun equals(obj:Any?):Boolean {
if (obj === this)
{
return true
}
if (obj !is com.example.delhitransit.GtfsRealtime.TripDescriptor)
{
return super.equals(obj)
}
val other = obj as com.example.delhitransit.GtfsRealtime.TripDescriptor?

if (hasTripId() != other!!.hasTripId()) return false
if (hasTripId())
{
if (tripId != other.tripId)
return false
}
if (hasRouteId() != other.hasRouteId()) return false
if (hasRouteId())
{
if (routeId != other.routeId)
return false
}
if (hasDirectionId() != other.hasDirectionId()) return false
if (hasDirectionId())
{
if (directionId != other.directionId)
return false
}
if (hasStartTime() != other.hasStartTime()) return false
if (hasStartTime())
{
if (startTime != other.startTime)
return false
}
if (hasStartDate() != other.hasStartDate()) return false
if (hasStartDate())
{
if (startDate != other.startDate)
return false
}
if (hasScheduleRelationship() != other.hasScheduleRelationship()) return false
if (hasScheduleRelationship())
{
if (scheduleRelationship_ != other.scheduleRelationship_) return false
}
if (unknownFields != other.unknownFields) return false
return if (extensionFields != other.extensionFields) false else true
}

override fun hashCode():Int {
if (memoizedHashCode != 0)
{
return memoizedHashCode
}
var hash = 41
hash = 19 * hash + descriptor.hashCode()
if (hasTripId())
{
hash = 37 * hash + TRIP_ID_FIELD_NUMBER
hash = 53 * hash + tripId.hashCode()
}
if (hasRouteId())
{
hash = 37 * hash + ROUTE_ID_FIELD_NUMBER
hash = 53 * hash + routeId.hashCode()
}
if (hasDirectionId())
{
hash = 37 * hash + DIRECTION_ID_FIELD_NUMBER
hash = 53 * hash + directionId
}
if (hasStartTime())
{
hash = 37 * hash + START_TIME_FIELD_NUMBER
hash = 53 * hash + startTime.hashCode()
}
if (hasStartDate())
{
hash = 37 * hash + START_DATE_FIELD_NUMBER
hash = 53 * hash + startDate.hashCode()
}
if (hasScheduleRelationship())
{
hash = 37 * hash + SCHEDULE_RELATIONSHIP_FIELD_NUMBER
hash = 53 * hash + scheduleRelationship_
}
hash = AbstractMessage.hashFields(hash, extensionFields)
hash = 29 * hash + unknownFields.hashCode()
memoizedHashCode = hash
return hash
}

override fun newBuilderForType():Builder {
return newBuilder()
}

override fun toBuilder():Builder {
return if (this === defaultInstance)
Builder()
else
Builder().mergeFrom(this)
}

override fun newBuilderForType(
parent:com.google.protobuf.GeneratedMessageV3.BuilderParent):Builder {
return Builder(parent)
}

/**
 * <pre>
 * A descriptor that identifies an instance of a GTFS trip, or all instances of
 * a trip along a route.
 * - To specify a single trip instance, the trip_id (and if necessary,
 * start_time) is set. If route_id is also set, then it should be same as one
 * that the given trip corresponds to.
 * - To specify all the trips along a given route, only the route_id should be
 * set. Note that if the trip_id is not known, then stop sequence ids in
 * TripUpdate are not sufficient, and stop_ids must be provided as well. In
 * addition, absolute arrival/departure times must be provided.
</pre> *
 *
 *
 * Protobuf type `com.example.delhitransit.TripDescriptor`
 */
         class Builder:com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.example.delhitransit.GtfsRealtime.TripDescriptor, Builder>,
 // @@protoc_insertion_point(builder_implements:com.example.delhitransit.TripDescriptor)
                com.example.delhitransit.GtfsRealtime.TripDescriptorOrBuilder {

private var bitField0_:Int = 0

private var tripId_:Any? = ""

/**
 * <pre>
 * The trip_id from the GTFS feed that this selector refers to.
 * For non frequency-based trips, this field is enough to uniquely identify
 * the trip. For frequency-based trip, start_time and start_date might also be
 * necessary.
</pre> *
 *
 * `optional string trip_id = 1;`
 */
            override val tripId:java.lang.String
get() {
val ref = tripId_
if (ref !is java.lang.String)
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
tripId_ = s
}
return s
}
else
{
return ref
}
}

/**
 * <pre>
 * The trip_id from the GTFS feed that this selector refers to.
 * For non frequency-based trips, this field is enough to uniquely identify
 * the trip. For frequency-based trip, start_time and start_date might also be
 * necessary.
</pre> *
 *
 * `optional string trip_id = 1;`
 */
            override val tripIdBytes:com.google.protobuf.ByteString
get() {
val ref = tripId_
if (ref is String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
tripId_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}

private var routeId_:Any? = ""

/**
 * <pre>
 * The route_id from the GTFS that this selector refers to.
</pre> *
 *
 * `optional string route_id = 5;`
 */
            override val routeId:java.lang.String
get() {
val ref = routeId_
if (ref !is java.lang.String)
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
routeId_ = s
}
return s
}
else
{
return ref
}
}

/**
 * <pre>
 * The route_id from the GTFS that this selector refers to.
</pre> *
 *
 * `optional string route_id = 5;`
 */
            override val routeIdBytes:com.google.protobuf.ByteString
get() {
val ref = routeId_
if (ref is String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
routeId_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}

/**
 * <pre>
 * The direction_id from the GTFS feed trips.txt file, indicating the
 * direction of travel for trips this selector refers to. This field is
 * still experimental, and subject to change. It may be formally adopted in
 * the future.
</pre> *
 *
 * `optional uint32 direction_id = 6;`
 */
            override var directionId:Int = 0
private set

private var startTime_:Any? = ""

/**
 * <pre>
 * The initially scheduled start time of this trip instance.
 * When the trip_id corresponds to a non-frequency-based trip, this field
 * should either be omitted or be equal to the value in the GTFS feed. When
 * the trip_id corresponds to a frequency-based trip, the start_time must be
 * specified for trip updates and vehicle positions. If the trip corresponds
 * to exact_times=1 GTFS record, then start_time must be some multiple
 * (including zero) of headway_secs later than frequencies.txt start_time for
 * the corresponding time period. If the trip corresponds to exact_times=0,
 * then its start_time may be arbitrary, and is initially expected to be the
 * first departure of the trip. Once established, the start_time of this
 * frequency-based trip should be considered immutable, even if the first
 * departure time changes -- that time change may instead be reflected in a
 * StopTimeUpdate.
 * Format and semantics of the field is same as that of
 * GTFS/frequencies.txt/start_time, e.g., 11:15:35 or 25:15:35.
</pre> *
 *
 * `optional string start_time = 2;`
 */
            override val startTime:java.lang.String
get() {
val ref = startTime_
if (ref !is java.lang.String)
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
startTime_ = s
}
return s
}
else
{
return ref
}
}

/**
 * <pre>
 * The initially scheduled start time of this trip instance.
 * When the trip_id corresponds to a non-frequency-based trip, this field
 * should either be omitted or be equal to the value in the GTFS feed. When
 * the trip_id corresponds to a frequency-based trip, the start_time must be
 * specified for trip updates and vehicle positions. If the trip corresponds
 * to exact_times=1 GTFS record, then start_time must be some multiple
 * (including zero) of headway_secs later than frequencies.txt start_time for
 * the corresponding time period. If the trip corresponds to exact_times=0,
 * then its start_time may be arbitrary, and is initially expected to be the
 * first departure of the trip. Once established, the start_time of this
 * frequency-based trip should be considered immutable, even if the first
 * departure time changes -- that time change may instead be reflected in a
 * StopTimeUpdate.
 * Format and semantics of the field is same as that of
 * GTFS/frequencies.txt/start_time, e.g., 11:15:35 or 25:15:35.
</pre> *
 *
 * `optional string start_time = 2;`
 */
            override val startTimeBytes:com.google.protobuf.ByteString
get() {
val ref = startTime_
if (ref is String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
startTime_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}

private var startDate_:Any? = ""

/**
 * <pre>
 * The scheduled start date of this trip instance.
 * Must be provided to disambiguate trips that are so late as to collide with
 * a scheduled trip on a next day. For example, for a train that departs 8:00
 * and 20:00 every day, and is 12 hours late, there would be two distinct
 * trips on the same time.
 * This field can be provided but is not mandatory for schedules in which such
 * collisions are impossible - for example, a service running on hourly
 * schedule where a vehicle that is one hour late is not considered to be
 * related to schedule anymore.
 * In YYYYMMDD format.
</pre> *
 *
 * `optional string start_date = 3;`
 */
            override val startDate:java.lang.String
get() {
val ref = startDate_
if (ref !is java.lang.String)
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
startDate_ = s
}
return s
}
else
{
return ref
}
}

/**
 * <pre>
 * The scheduled start date of this trip instance.
 * Must be provided to disambiguate trips that are so late as to collide with
 * a scheduled trip on a next day. For example, for a train that departs 8:00
 * and 20:00 every day, and is 12 hours late, there would be two distinct
 * trips on the same time.
 * This field can be provided but is not mandatory for schedules in which such
 * collisions are impossible - for example, a service running on hourly
 * schedule where a vehicle that is one hour late is not considered to be
 * related to schedule anymore.
 * In YYYYMMDD format.
</pre> *
 *
 * `optional string start_date = 3;`
 */
            override val startDateBytes:com.google.protobuf.ByteString
get() {
val ref = startDate_
if (ref is String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
startDate_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}

private var scheduleRelationship_ = 0

/**
 * `optional .com.example.delhitransit.TripDescriptor.ScheduleRelationship schedule_relationship = 4;`
 */
            override val scheduleRelationship:com.example.delhitransit.GtfsRealtime.TripDescriptor.ScheduleRelationship
get() {
val result = com.example.delhitransit.GtfsRealtime.TripDescriptor.ScheduleRelationship.valueOf(scheduleRelationship_)
return result ?: com.example.delhitransit.GtfsRealtime.TripDescriptor.ScheduleRelationship.SCHEDULED
}

override fun internalGetFieldAccessorTable():com.google.protobuf.GeneratedMessageV3.FieldAccessorTable {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TripDescriptor_fieldAccessorTable
.ensureFieldAccessorsInitialized(
com.example.delhitransit.GtfsRealtime.TripDescriptor::class.java, com.example.delhitransit.GtfsRealtime.TripDescriptor.Builder::class.java)
}

 // Construct using com.example.delhitransit.GtfsRealtime.TripDescriptor.newBuilder()
            private constructor() {
maybeForceBuilderInitialization()
}

private constructor(
parent:com.google.protobuf.GeneratedMessageV3.BuilderParent) : super(parent) {
maybeForceBuilderInitialization()
}

private fun maybeForceBuilderInitialization() {
if (com.google.protobuf.GeneratedMessageV3
.alwaysUseFieldBuilders)
{}
}

override fun clear():Builder {
super.clear()
tripId_ = ""
bitField0_ = bitField0_ and 0x00000001.inv()
routeId_ = ""
bitField0_ = bitField0_ and 0x00000002.inv()
directionId = 0
bitField0_ = bitField0_ and 0x00000004.inv()
startTime_ = ""
bitField0_ = bitField0_ and 0x00000008.inv()
startDate_ = ""
bitField0_ = bitField0_ and 0x00000010.inv()
scheduleRelationship_ = 0
bitField0_ = bitField0_ and 0x00000020.inv()
return this
}

override fun getDescriptorForType():com.google.protobuf.Descriptors.Descriptor {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TripDescriptor_descriptor
}

override fun getDefaultInstanceForType():com.example.delhitransit.GtfsRealtime.TripDescriptor {
return com.example.delhitransit.GtfsRealtime.TripDescriptor.defaultInstance
}

override fun build():com.example.delhitransit.GtfsRealtime.TripDescriptor {
val result = buildPartial()
if (!result.isInitialized)
{
throw AbstractMessage.Builder.newUninitializedMessageException(result)
}
return result
}

override fun buildPartial():com.example.delhitransit.GtfsRealtime.TripDescriptor {
val result = com.example.delhitransit.GtfsRealtime.TripDescriptor(this)
val from_bitField0_ = bitField0_
var to_bitField0_ = 0
if (from_bitField0_ and 0x00000001 != 0)
{
to_bitField0_ = to_bitField0_ or 0x00000001
}
result.tripId_ = tripId_
if (from_bitField0_ and 0x00000002 != 0)
{
to_bitField0_ = to_bitField0_ or 0x00000002
}
result.routeId_ = routeId_
if (from_bitField0_ and 0x00000004 != 0)
{
result.directionId = directionId
to_bitField0_ = to_bitField0_ or 0x00000004
}
if (from_bitField0_ and 0x00000008 != 0)
{
to_bitField0_ = to_bitField0_ or 0x00000008
}
result.startTime_ = startTime_
if (from_bitField0_ and 0x00000010 != 0)
{
to_bitField0_ = to_bitField0_ or 0x00000010
}
result.startDate_ = startDate_
if (from_bitField0_ and 0x00000020 != 0)
{
to_bitField0_ = to_bitField0_ or 0x00000020
}
result.scheduleRelationship_ = scheduleRelationship_
result.bitField0_ = to_bitField0_
onBuilt()
return result
}

override fun clone():Builder {
return super.clone()
}

override fun setField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
value:Any):Builder {
return super.setField(field, value)
}

override fun clearField(
field:com.google.protobuf.Descriptors.FieldDescriptor):Builder {
return super.clearField(field)
}

override fun clearOneof(
oneof:com.google.protobuf.Descriptors.OneofDescriptor):Builder {
return super.clearOneof(oneof)
}

override fun setRepeatedField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
index:Int, value:Any):Builder {
return super.setRepeatedField(field, index, value)
}

override fun addRepeatedField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
value:Any):Builder {
return super.addRepeatedField(field, value)
}

override fun <Type> setExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.TripDescriptor, Type>,
value:Type):Builder {
return super.setExtension(extension, value)
}

override fun <Type> setExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.TripDescriptor, List<Type>>,
index:Int, value:Type):Builder {
return super.setExtension(extension, index, value)
}

override fun <Type> addExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.TripDescriptor, List<Type>>,
value:Type):Builder {
return super.addExtension(extension, value)
}

override fun <Type> clearExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.TripDescriptor, *>):Builder {
return super.clearExtension<Any>(extension)
}

override fun mergeFrom(other:com.google.protobuf.Message):Builder {
if (other is com.example.delhitransit.GtfsRealtime.TripDescriptor)
{
return mergeFrom(other)
}
else
{
super.mergeFrom(other)
return this
}
}

 fun mergeFrom(other:com.example.delhitransit.GtfsRealtime.TripDescriptor?):Builder {
if (other === com.example.delhitransit.GtfsRealtime.TripDescriptor.defaultInstance)
return this
if (other!!.hasTripId())
{
bitField0_ = bitField0_ or 0x00000001
tripId_ = other.tripId_
onChanged()
}
if (other.hasRouteId())
{
bitField0_ = bitField0_ or 0x00000002
routeId_ = other.routeId_
onChanged()
}
if (other.hasDirectionId())
{
setDirectionId(other.directionId)
}
if (other.hasStartTime())
{
bitField0_ = bitField0_ or 0x00000008
startTime_ = other.startTime_
onChanged()
}
if (other.hasStartDate())
{
bitField0_ = bitField0_ or 0x00000010
startDate_ = other.startDate_
onChanged()
}
if (other.hasScheduleRelationship())
{
setScheduleRelationship(other.scheduleRelationship)
}
this.mergeExtensionFields(other)
this.mergeUnknownFields(other.unknownFields)
onChanged()
return this
}

override fun isInitialized():Boolean {
return if (!extensionsAreInitialized()) {
            false
        } else true
}

@Throws(java.io.IOException::class)
override fun mergeFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):Builder {
var parsedMessage:com.example.delhitransit.GtfsRealtime.TripDescriptor? = null
try
{
parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry)
}
catch (e:com.google.protobuf.InvalidProtocolBufferException) {
parsedMessage = e.unfinishedMessage as com.example.delhitransit.GtfsRealtime.TripDescriptor
throw e.unwrapIOException()
}
finally
{
if (parsedMessage != null)
{
mergeFrom(parsedMessage)
}
}
return this
}

/**
 * <pre>
 * The trip_id from the GTFS feed that this selector refers to.
 * For non frequency-based trips, this field is enough to uniquely identify
 * the trip. For frequency-based trip, start_time and start_date might also be
 * necessary.
</pre> *
 *
 * `optional string trip_id = 1;`
 */
            override fun hasTripId():Boolean {
return bitField0_ and 0x00000001 != 0
}

/**
 * <pre>
 * The trip_id from the GTFS feed that this selector refers to.
 * For non frequency-based trips, this field is enough to uniquely identify
 * the trip. For frequency-based trip, start_time and start_date might also be
 * necessary.
</pre> *
 *
 * `optional string trip_id = 1;`
 */
             fun setTripId(
value:java.lang.String?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000001
tripId_ = value
onChanged()
return this
}

/**
 * <pre>
 * The trip_id from the GTFS feed that this selector refers to.
 * For non frequency-based trips, this field is enough to uniquely identify
 * the trip. For frequency-based trip, start_time and start_date might also be
 * necessary.
</pre> *
 *
 * `optional string trip_id = 1;`
 */
             fun clearTripId():Builder {
bitField0_ = bitField0_ and 0x00000001.inv()
tripId_ = defaultInstance.tripId
onChanged()
return this
}

/**
 * <pre>
 * The trip_id from the GTFS feed that this selector refers to.
 * For non frequency-based trips, this field is enough to uniquely identify
 * the trip. For frequency-based trip, start_time and start_date might also be
 * necessary.
</pre> *
 *
 * `optional string trip_id = 1;`
 */
             fun setTripIdBytes(
value:com.google.protobuf.ByteString?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000001
tripId_ = value
onChanged()
return this
}

/**
 * <pre>
 * The route_id from the GTFS that this selector refers to.
</pre> *
 *
 * `optional string route_id = 5;`
 */
            override fun hasRouteId():Boolean {
return bitField0_ and 0x00000002 != 0
}

/**
 * <pre>
 * The route_id from the GTFS that this selector refers to.
</pre> *
 *
 * `optional string route_id = 5;`
 */
             fun setRouteId(
value:java.lang.String?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000002
routeId_ = value
onChanged()
return this
}

/**
 * <pre>
 * The route_id from the GTFS that this selector refers to.
</pre> *
 *
 * `optional string route_id = 5;`
 */
             fun clearRouteId():Builder {
bitField0_ = bitField0_ and 0x00000002.inv()
routeId_ = defaultInstance.routeId
onChanged()
return this
}

/**
 * <pre>
 * The route_id from the GTFS that this selector refers to.
</pre> *
 *
 * `optional string route_id = 5;`
 */
             fun setRouteIdBytes(
value:com.google.protobuf.ByteString?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000002
routeId_ = value
onChanged()
return this
}

/**
 * <pre>
 * The direction_id from the GTFS feed trips.txt file, indicating the
 * direction of travel for trips this selector refers to. This field is
 * still experimental, and subject to change. It may be formally adopted in
 * the future.
</pre> *
 *
 * `optional uint32 direction_id = 6;`
 */
            override fun hasDirectionId():Boolean {
return bitField0_ and 0x00000004 != 0
}

/**
 * <pre>
 * The direction_id from the GTFS feed trips.txt file, indicating the
 * direction of travel for trips this selector refers to. This field is
 * still experimental, and subject to change. It may be formally adopted in
 * the future.
</pre> *
 *
 * `optional uint32 direction_id = 6;`
 */
             fun setDirectionId(value:Int):Builder {
bitField0_ = bitField0_ or 0x00000004
directionId = value
onChanged()
return this
}

/**
 * <pre>
 * The direction_id from the GTFS feed trips.txt file, indicating the
 * direction of travel for trips this selector refers to. This field is
 * still experimental, and subject to change. It may be formally adopted in
 * the future.
</pre> *
 *
 * `optional uint32 direction_id = 6;`
 */
             fun clearDirectionId():Builder {
bitField0_ = bitField0_ and 0x00000004.inv()
directionId = 0
onChanged()
return this
}

/**
 * <pre>
 * The initially scheduled start time of this trip instance.
 * When the trip_id corresponds to a non-frequency-based trip, this field
 * should either be omitted or be equal to the value in the GTFS feed. When
 * the trip_id corresponds to a frequency-based trip, the start_time must be
 * specified for trip updates and vehicle positions. If the trip corresponds
 * to exact_times=1 GTFS record, then start_time must be some multiple
 * (including zero) of headway_secs later than frequencies.txt start_time for
 * the corresponding time period. If the trip corresponds to exact_times=0,
 * then its start_time may be arbitrary, and is initially expected to be the
 * first departure of the trip. Once established, the start_time of this
 * frequency-based trip should be considered immutable, even if the first
 * departure time changes -- that time change may instead be reflected in a
 * StopTimeUpdate.
 * Format and semantics of the field is same as that of
 * GTFS/frequencies.txt/start_time, e.g., 11:15:35 or 25:15:35.
</pre> *
 *
 * `optional string start_time = 2;`
 */
            override fun hasStartTime():Boolean {
return bitField0_ and 0x00000008 != 0
}

/**
 * <pre>
 * The initially scheduled start time of this trip instance.
 * When the trip_id corresponds to a non-frequency-based trip, this field
 * should either be omitted or be equal to the value in the GTFS feed. When
 * the trip_id corresponds to a frequency-based trip, the start_time must be
 * specified for trip updates and vehicle positions. If the trip corresponds
 * to exact_times=1 GTFS record, then start_time must be some multiple
 * (including zero) of headway_secs later than frequencies.txt start_time for
 * the corresponding time period. If the trip corresponds to exact_times=0,
 * then its start_time may be arbitrary, and is initially expected to be the
 * first departure of the trip. Once established, the start_time of this
 * frequency-based trip should be considered immutable, even if the first
 * departure time changes -- that time change may instead be reflected in a
 * StopTimeUpdate.
 * Format and semantics of the field is same as that of
 * GTFS/frequencies.txt/start_time, e.g., 11:15:35 or 25:15:35.
</pre> *
 *
 * `optional string start_time = 2;`
 */
             fun setStartTime(
value:java.lang.String?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000008
startTime_ = value
onChanged()
return this
}

/**
 * <pre>
 * The initially scheduled start time of this trip instance.
 * When the trip_id corresponds to a non-frequency-based trip, this field
 * should either be omitted or be equal to the value in the GTFS feed. When
 * the trip_id corresponds to a frequency-based trip, the start_time must be
 * specified for trip updates and vehicle positions. If the trip corresponds
 * to exact_times=1 GTFS record, then start_time must be some multiple
 * (including zero) of headway_secs later than frequencies.txt start_time for
 * the corresponding time period. If the trip corresponds to exact_times=0,
 * then its start_time may be arbitrary, and is initially expected to be the
 * first departure of the trip. Once established, the start_time of this
 * frequency-based trip should be considered immutable, even if the first
 * departure time changes -- that time change may instead be reflected in a
 * StopTimeUpdate.
 * Format and semantics of the field is same as that of
 * GTFS/frequencies.txt/start_time, e.g., 11:15:35 or 25:15:35.
</pre> *
 *
 * `optional string start_time = 2;`
 */
             fun clearStartTime():Builder {
bitField0_ = bitField0_ and 0x00000008.inv()
startTime_ = defaultInstance.startTime
onChanged()
return this
}

/**
 * <pre>
 * The initially scheduled start time of this trip instance.
 * When the trip_id corresponds to a non-frequency-based trip, this field
 * should either be omitted or be equal to the value in the GTFS feed. When
 * the trip_id corresponds to a frequency-based trip, the start_time must be
 * specified for trip updates and vehicle positions. If the trip corresponds
 * to exact_times=1 GTFS record, then start_time must be some multiple
 * (including zero) of headway_secs later than frequencies.txt start_time for
 * the corresponding time period. If the trip corresponds to exact_times=0,
 * then its start_time may be arbitrary, and is initially expected to be the
 * first departure of the trip. Once established, the start_time of this
 * frequency-based trip should be considered immutable, even if the first
 * departure time changes -- that time change may instead be reflected in a
 * StopTimeUpdate.
 * Format and semantics of the field is same as that of
 * GTFS/frequencies.txt/start_time, e.g., 11:15:35 or 25:15:35.
</pre> *
 *
 * `optional string start_time = 2;`
 */
             fun setStartTimeBytes(
value:com.google.protobuf.ByteString?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000008
startTime_ = value
onChanged()
return this
}

/**
 * <pre>
 * The scheduled start date of this trip instance.
 * Must be provided to disambiguate trips that are so late as to collide with
 * a scheduled trip on a next day. For example, for a train that departs 8:00
 * and 20:00 every day, and is 12 hours late, there would be two distinct
 * trips on the same time.
 * This field can be provided but is not mandatory for schedules in which such
 * collisions are impossible - for example, a service running on hourly
 * schedule where a vehicle that is one hour late is not considered to be
 * related to schedule anymore.
 * In YYYYMMDD format.
</pre> *
 *
 * `optional string start_date = 3;`
 */
            override fun hasStartDate():Boolean {
return bitField0_ and 0x00000010 != 0
}

/**
 * <pre>
 * The scheduled start date of this trip instance.
 * Must be provided to disambiguate trips that are so late as to collide with
 * a scheduled trip on a next day. For example, for a train that departs 8:00
 * and 20:00 every day, and is 12 hours late, there would be two distinct
 * trips on the same time.
 * This field can be provided but is not mandatory for schedules in which such
 * collisions are impossible - for example, a service running on hourly
 * schedule where a vehicle that is one hour late is not considered to be
 * related to schedule anymore.
 * In YYYYMMDD format.
</pre> *
 *
 * `optional string start_date = 3;`
 */
             fun setStartDate(
value:java.lang.String?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000010
startDate_ = value
onChanged()
return this
}

/**
 * <pre>
 * The scheduled start date of this trip instance.
 * Must be provided to disambiguate trips that are so late as to collide with
 * a scheduled trip on a next day. For example, for a train that departs 8:00
 * and 20:00 every day, and is 12 hours late, there would be two distinct
 * trips on the same time.
 * This field can be provided but is not mandatory for schedules in which such
 * collisions are impossible - for example, a service running on hourly
 * schedule where a vehicle that is one hour late is not considered to be
 * related to schedule anymore.
 * In YYYYMMDD format.
</pre> *
 *
 * `optional string start_date = 3;`
 */
             fun clearStartDate():Builder {
bitField0_ = bitField0_ and 0x00000010.inv()
startDate_ = defaultInstance.startDate
onChanged()
return this
}

/**
 * <pre>
 * The scheduled start date of this trip instance.
 * Must be provided to disambiguate trips that are so late as to collide with
 * a scheduled trip on a next day. For example, for a train that departs 8:00
 * and 20:00 every day, and is 12 hours late, there would be two distinct
 * trips on the same time.
 * This field can be provided but is not mandatory for schedules in which such
 * collisions are impossible - for example, a service running on hourly
 * schedule where a vehicle that is one hour late is not considered to be
 * related to schedule anymore.
 * In YYYYMMDD format.
</pre> *
 *
 * `optional string start_date = 3;`
 */
             fun setStartDateBytes(
value:com.google.protobuf.ByteString?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000010
startDate_ = value
onChanged()
return this
}

/**
 * `optional .com.example.delhitransit.TripDescriptor.ScheduleRelationship schedule_relationship = 4;`
 */
            override fun hasScheduleRelationship():Boolean {
return bitField0_ and 0x00000020 != 0
}

/**
 * `optional .com.example.delhitransit.TripDescriptor.ScheduleRelationship schedule_relationship = 4;`
 */
             fun setScheduleRelationship(value:com.example.delhitransit.GtfsRealtime.TripDescriptor.ScheduleRelationship?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000020
scheduleRelationship_ = value.number
onChanged()
return this
}

/**
 * `optional .com.example.delhitransit.TripDescriptor.ScheduleRelationship schedule_relationship = 4;`
 */
             fun clearScheduleRelationship():Builder {
bitField0_ = bitField0_ and 0x00000020.inv()
scheduleRelationship_ = 0
onChanged()
return this
}

override fun setUnknownFields(
unknownFields:com.google.protobuf.UnknownFieldSet):Builder {
return super.setUnknownFields(unknownFields)
}

override fun mergeUnknownFields(
unknownFields:com.google.protobuf.UnknownFieldSet):Builder {
return super.mergeUnknownFields(unknownFields)
}

companion object {
 val descriptor:com.google.protobuf.Descriptors.Descriptor
get() =com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TripDescriptor_descriptor
}


 // @@protoc_insertion_point(builder_scope:com.example.delhitransit.TripDescriptor)
        }

override fun getParserForType():com.google.protobuf.Parser<TripDescriptor> {
return PARSER
}

override fun getDefaultInstanceForType():com.example.delhitransit.GtfsRealtime.TripDescriptor {
return defaultInstance
}

companion object {
private val serialVersionUID = 0L

 val descriptor:com.google.protobuf.Descriptors.Descriptor
get() =com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TripDescriptor_descriptor
 val TRIP_ID_FIELD_NUMBER = 1

 val ROUTE_ID_FIELD_NUMBER = 5

 val DIRECTION_ID_FIELD_NUMBER = 6

 val START_TIME_FIELD_NUMBER = 2

 val START_DATE_FIELD_NUMBER = 3

 val SCHEDULE_RELATIONSHIP_FIELD_NUMBER = 4

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:java.nio.ByteBuffer):com.example.delhitransit.GtfsRealtime.TripDescriptor {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:java.nio.ByteBuffer,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TripDescriptor {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:com.google.protobuf.ByteString):com.example.delhitransit.GtfsRealtime.TripDescriptor {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:com.google.protobuf.ByteString,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TripDescriptor {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(data:ByteArray):com.example.delhitransit.GtfsRealtime.TripDescriptor {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:ByteArray,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TripDescriptor {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseFrom(input:java.io.InputStream):com.example.delhitransit.GtfsRealtime.TripDescriptor {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:java.io.InputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TripDescriptor {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseDelimitedFrom(input:java.io.InputStream):com.example.delhitransit.GtfsRealtime.TripDescriptor {
return com.google.protobuf.GeneratedMessageV3
.parseDelimitedWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseDelimitedFrom(
input:java.io.InputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TripDescriptor {
return com.google.protobuf.GeneratedMessageV3
.parseDelimitedWithIOException(PARSER, input, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:com.google.protobuf.CodedInputStream):com.example.delhitransit.GtfsRealtime.TripDescriptor {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TripDescriptor {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input, extensionRegistry)
}

 fun newBuilder():Builder {
return defaultInstance.toBuilder()
}

 fun newBuilder(prototype:com.example.delhitransit.GtfsRealtime.TripDescriptor):Builder {
return defaultInstance.toBuilder().mergeFrom(prototype)
}

 // @@protoc_insertion_point(class_scope:com.example.delhitransit.TripDescriptor)
         val defaultInstance:com.example.delhitransit.GtfsRealtime.TripDescriptor

init{
defaultInstance = com.example.delhitransit.GtfsRealtime.TripDescriptor()
}

@Deprecated("")
 val PARSER:com.google.protobuf.Parser<TripDescriptor> = object:com.google.protobuf.AbstractParser<TripDescriptor>() {
@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
override fun parsePartialFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):TripDescriptor {
return TripDescriptor(input, extensionRegistry)
}
}

 fun parser():com.google.protobuf.Parser<TripDescriptor> {
return PARSER
}
}

}

 interface VehicleDescriptorOrBuilder:
 // @@protoc_insertion_point(interface_extends:com.example.delhitransit.VehicleDescriptor)
            com.google.protobuf.GeneratedMessageV3.ExtendableMessageOrBuilder<VehicleDescriptor> {

/**
 * <pre>
 * Internal system identification of the vehicle. Should be unique per
 * vehicle, and can be used for tracking the vehicle as it proceeds through
 * the system.
</pre> *
 *
 * `optional string id = 1;`
 */
         val id:java.lang.String

/**
 * <pre>
 * Internal system identification of the vehicle. Should be unique per
 * vehicle, and can be used for tracking the vehicle as it proceeds through
 * the system.
</pre> *
 *
 * `optional string id = 1;`
 */
         val idBytes:com.google.protobuf.ByteString

/**
 * <pre>
 * User visible label, i.e., something that must be shown to the passenger to
 * help identify the correct vehicle.
</pre> *
 *
 * `optional string label = 2;`
 */
         val label:java.lang.String

/**
 * <pre>
 * User visible label, i.e., something that must be shown to the passenger to
 * help identify the correct vehicle.
</pre> *
 *
 * `optional string label = 2;`
 */
         val labelBytes:com.google.protobuf.ByteString

/**
 * <pre>
 * The license plate of the vehicle.
</pre> *
 *
 * `optional string license_plate = 3;`
 */
         val licensePlate:java.lang.String

/**
 * <pre>
 * The license plate of the vehicle.
</pre> *
 *
 * `optional string license_plate = 3;`
 */
         val licensePlateBytes:com.google.protobuf.ByteString

/**
 * <pre>
 * Internal system identification of the vehicle. Should be unique per
 * vehicle, and can be used for tracking the vehicle as it proceeds through
 * the system.
</pre> *
 *
 * `optional string id = 1;`
 */
         fun hasId():Boolean

/**
 * <pre>
 * User visible label, i.e., something that must be shown to the passenger to
 * help identify the correct vehicle.
</pre> *
 *
 * `optional string label = 2;`
 */
         fun hasLabel():Boolean

/**
 * <pre>
 * The license plate of the vehicle.
</pre> *
 *
 * `optional string license_plate = 3;`
 */
         fun hasLicensePlate():Boolean
}

/**
 * <pre>
 * Identification information for the vehicle performing the trip.
</pre> *
 *
 *
 * Protobuf type `com.example.delhitransit.VehicleDescriptor`
 */
     class VehicleDescriptor:com.google.protobuf.GeneratedMessageV3.ExtendableMessage<VehicleDescriptor>,
 // @@protoc_insertion_point(message_implements:com.example.delhitransit.VehicleDescriptor)
            VehicleDescriptorOrBuilder {

private var bitField0_:Int = 0
@Volatile private var id_:Any? = null

/**
 * <pre>
 * Internal system identification of the vehicle. Should be unique per
 * vehicle, and can be used for tracking the vehicle as it proceeds through
 * the system.
</pre> *
 *
 * `optional string id = 1;`
 */
        override val id:java.lang.String
get() {
val ref = id_
if (ref is java.lang.String)
{
return ref
}
else
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
id_ = s
}
return s
}
}

/**
 * <pre>
 * Internal system identification of the vehicle. Should be unique per
 * vehicle, and can be used for tracking the vehicle as it proceeds through
 * the system.
</pre> *
 *
 * `optional string id = 1;`
 */
        override val idBytes:com.google.protobuf.ByteString
get() {
val ref = id_
if (ref is java.lang.String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
id_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}
@Volatile private var label_:Any? = null

/**
 * <pre>
 * User visible label, i.e., something that must be shown to the passenger to
 * help identify the correct vehicle.
</pre> *
 *
 * `optional string label = 2;`
 */
        override val label:java.lang.String
get() {
val ref = label_
if (ref is java.lang.String)
{
return ref
}
else
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
label_ = s
}
return s
}
}

/**
 * <pre>
 * User visible label, i.e., something that must be shown to the passenger to
 * help identify the correct vehicle.
</pre> *
 *
 * `optional string label = 2;`
 */
        override val labelBytes:com.google.protobuf.ByteString
get() {
val ref = label_
if (ref is java.lang.String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
label_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}
@Volatile private var licensePlate_:Any? = null

/**
 * <pre>
 * The license plate of the vehicle.
</pre> *
 *
 * `optional string license_plate = 3;`
 */
        override val licensePlate:java.lang.String
get() {
val ref = licensePlate_
if (ref is java.lang.String)
{
return ref
}
else
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
licensePlate_ = s
}
return s
}
}

/**
 * <pre>
 * The license plate of the vehicle.
</pre> *
 *
 * `optional string license_plate = 3;`
 */
        override val licensePlateBytes:com.google.protobuf.ByteString
get() {
val ref = licensePlate_
if (ref is java.lang.String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
licensePlate_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}

private var memoizedIsInitialized:Byte = -1

 // Use VehicleDescriptor.newBuilder() to construct.
        private constructor(builder:com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.example.delhitransit.GtfsRealtime.VehicleDescriptor, *>) : super(builder) {}

private constructor() {
id_ = ""
label_ = ""
licensePlate_ = ""
}

 //        @java.lang.Override
 //        @SuppressWarnings({"unused"})
 //        protected java.lang.Object newInstance(
 //                UnusedPrivateParameter unused) {
 //            return new VehicleDescriptor();
 //        }

        override fun getUnknownFields():com.google.protobuf.UnknownFieldSet {
return this.unknownFields
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
private constructor(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite?) : this() {
if (extensionRegistry == null)
{
throw java.lang.NullPointerException()
}
val mutable_bitField0_ = 0
val unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder()
try
{
var done = false
while (!done)
{
val tag = input.readTag()
when (tag) {
0 -> done = true
10 -> {
val bs = input.readBytes()
bitField0_ = bitField0_ or 0x00000001
id_ = bs
}
18 -> {
val bs = input.readBytes()
bitField0_ = bitField0_ or 0x00000002
label_ = bs
}
26 -> {
val bs = input.readBytes()
bitField0_ = bitField0_ or 0x00000004
licensePlate_ = bs
}
else -> {
if (!parseUnknownField(
input, unknownFields, extensionRegistry, tag))
{
done = true
}
}
}
}
}
catch (e:com.google.protobuf.InvalidProtocolBufferException) {
throw e.setUnfinishedMessage(this)
}
catch (e:java.io.IOException) {
throw com.google.protobuf.InvalidProtocolBufferException(
e).setUnfinishedMessage(this)
}
finally
{
this.unknownFields = unknownFields.build()
makeExtensionsImmutable()
}
}

override fun internalGetFieldAccessorTable():com.google.protobuf.GeneratedMessageV3.FieldAccessorTable {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_VehicleDescriptor_fieldAccessorTable
.ensureFieldAccessorsInitialized(
com.example.delhitransit.GtfsRealtime.VehicleDescriptor::class.java, com.example.delhitransit.GtfsRealtime.VehicleDescriptor.Builder::class.java)
}

/**
 * <pre>
 * Internal system identification of the vehicle. Should be unique per
 * vehicle, and can be used for tracking the vehicle as it proceeds through
 * the system.
</pre> *
 *
 * `optional string id = 1;`
 */
        override fun hasId():Boolean {
return bitField0_ and 0x00000001 != 0
}

/**
 * <pre>
 * User visible label, i.e., something that must be shown to the passenger to
 * help identify the correct vehicle.
</pre> *
 *
 * `optional string label = 2;`
 */
        override fun hasLabel():Boolean {
return bitField0_ and 0x00000002 != 0
}

/**
 * <pre>
 * The license plate of the vehicle.
</pre> *
 *
 * `optional string license_plate = 3;`
 */
        override fun hasLicensePlate():Boolean {
return bitField0_ and 0x00000004 != 0
}

override fun isInitialized():Boolean {
val isInitialized = memoizedIsInitialized
if (isInitialized.toInt() == 1) return true
if (isInitialized.toInt() == 0) return false

if (!extensionsAreInitialized())
{
memoizedIsInitialized = 0
return false
}
memoizedIsInitialized = 1
return true
}

@Throws(java.io.IOException::class)
override fun writeTo(output:com.google.protobuf.CodedOutputStream) {
val extensionWriter = newExtensionWriter()
if (bitField0_ and 0x00000001 != 0)
{
com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_)
}
if (bitField0_ and 0x00000002 != 0)
{
com.google.protobuf.GeneratedMessageV3.writeString(output, 2, label_)
}
if (bitField0_ and 0x00000004 != 0)
{
com.google.protobuf.GeneratedMessageV3.writeString(output, 3, licensePlate_)
}
extensionWriter.writeUntil(2000, output)
unknownFields.writeTo(output)
}

override fun getSerializedSize():Int {
var size = memoizedSize
if (size != -1) return size

size = 0
if (bitField0_ and 0x00000001 != 0)
{
size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_!!)
}
if (bitField0_ and 0x00000002 != 0)
{
size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, label_!!)
}
if (bitField0_ and 0x00000004 != 0)
{
size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, licensePlate_!!)
}
size += extensionsSerializedSize()
size += unknownFields.serializedSize
memoizedSize = size
return size
}

override fun equals(obj:Any?):Boolean {
if (obj === this)
{
return true
}
if (obj !is com.example.delhitransit.GtfsRealtime.VehicleDescriptor)
{
return super.equals(obj)
}
val other = obj as com.example.delhitransit.GtfsRealtime.VehicleDescriptor?

if (hasId() != other!!.hasId()) return false
if (hasId())
{
if (id != other.id)
return false
}
if (hasLabel() != other.hasLabel()) return false
if (hasLabel())
{
if (label != other.label)
return false
}
if (hasLicensePlate() != other.hasLicensePlate()) return false
if (hasLicensePlate())
{
if (licensePlate != other.licensePlate)
return false
}
if (unknownFields != other.unknownFields) return false
return if (extensionFields != other.extensionFields) false else true
}

override fun hashCode():Int {
if (memoizedHashCode != 0)
{
return memoizedHashCode
}
var hash = 41
hash = 19 * hash + descriptor.hashCode()
if (hasId())
{
hash = 37 * hash + ID_FIELD_NUMBER
hash = 53 * hash + id.hashCode()
}
if (hasLabel())
{
hash = 37 * hash + LABEL_FIELD_NUMBER
hash = 53 * hash + label.hashCode()
}
if (hasLicensePlate())
{
hash = 37 * hash + LICENSE_PLATE_FIELD_NUMBER
hash = 53 * hash + licensePlate.hashCode()
}
hash = AbstractMessage.hashFields(hash, extensionFields)
hash = 29 * hash + unknownFields.hashCode()
memoizedHashCode = hash
return hash
}

override fun newBuilderForType():Builder {
return newBuilder()
}

override fun toBuilder():Builder {
return if (this === defaultInstance)
Builder()
else
Builder().mergeFrom(this)
}

override fun newBuilderForType(
parent:com.google.protobuf.GeneratedMessageV3.BuilderParent):Builder {
return Builder(parent)
}

/**
 * <pre>
 * Identification information for the vehicle performing the trip.
</pre> *
 *
 *
 * Protobuf type `com.example.delhitransit.VehicleDescriptor`
 */
         class Builder:com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.example.delhitransit.GtfsRealtime.VehicleDescriptor, Builder>,
 // @@protoc_insertion_point(builder_implements:com.example.delhitransit.VehicleDescriptor)
                com.example.delhitransit.GtfsRealtime.VehicleDescriptorOrBuilder {

private var bitField0_:Int = 0

private var id_:Any? = ""

/**
 * <pre>
 * Internal system identification of the vehicle. Should be unique per
 * vehicle, and can be used for tracking the vehicle as it proceeds through
 * the system.
</pre> *
 *
 * `optional string id = 1;`
 */
            override val id:java.lang.String
get() {
val ref = id_
if (ref !is java.lang.String)
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
id_ = s
}
return s
}
else
{
return ref
}
}

/**
 * <pre>
 * Internal system identification of the vehicle. Should be unique per
 * vehicle, and can be used for tracking the vehicle as it proceeds through
 * the system.
</pre> *
 *
 * `optional string id = 1;`
 */
            override val idBytes:com.google.protobuf.ByteString
get() {
val ref = id_
if (ref is String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
id_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}

private var label_:Any? = ""

/**
 * <pre>
 * User visible label, i.e., something that must be shown to the passenger to
 * help identify the correct vehicle.
</pre> *
 *
 * `optional string label = 2;`
 */
            override val label:java.lang.String
get() {
val ref = label_
if (ref !is java.lang.String)
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
label_ = s
}
return s
}
else
{
return ref
}
}

/**
 * <pre>
 * User visible label, i.e., something that must be shown to the passenger to
 * help identify the correct vehicle.
</pre> *
 *
 * `optional string label = 2;`
 */
            override val labelBytes:com.google.protobuf.ByteString
get() {
val ref = label_
if (ref is String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
label_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}

private var licensePlate_:Any? = ""

/**
 * <pre>
 * The license plate of the vehicle.
</pre> *
 *
 * `optional string license_plate = 3;`
 */
            override val licensePlate:java.lang.String
get() {
val ref = licensePlate_
if (ref !is java.lang.String)
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
licensePlate_ = s
}
return s
}
else
{
return ref
}
}

/**
 * <pre>
 * The license plate of the vehicle.
</pre> *
 *
 * `optional string license_plate = 3;`
 */
            override val licensePlateBytes:com.google.protobuf.ByteString
get() {
val ref = licensePlate_
if (ref is String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
licensePlate_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}

override fun internalGetFieldAccessorTable():com.google.protobuf.GeneratedMessageV3.FieldAccessorTable {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_VehicleDescriptor_fieldAccessorTable
.ensureFieldAccessorsInitialized(
com.example.delhitransit.GtfsRealtime.VehicleDescriptor::class.java, com.example.delhitransit.GtfsRealtime.VehicleDescriptor.Builder::class.java)
}

 // Construct using com.example.delhitransit.GtfsRealtime.VehicleDescriptor.newBuilder()
            private constructor() {
maybeForceBuilderInitialization()
}

private constructor(
parent:com.google.protobuf.GeneratedMessageV3.BuilderParent) : super(parent) {
maybeForceBuilderInitialization()
}

private fun maybeForceBuilderInitialization() {
if (com.google.protobuf.GeneratedMessageV3
.alwaysUseFieldBuilders)
{}
}

override fun clear():Builder {
super.clear()
id_ = ""
bitField0_ = bitField0_ and 0x00000001.inv()
label_ = ""
bitField0_ = bitField0_ and 0x00000002.inv()
licensePlate_ = ""
bitField0_ = bitField0_ and 0x00000004.inv()
return this
}

override fun getDescriptorForType():com.google.protobuf.Descriptors.Descriptor {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_VehicleDescriptor_descriptor
}

override fun getDefaultInstanceForType():com.example.delhitransit.GtfsRealtime.VehicleDescriptor {
return com.example.delhitransit.GtfsRealtime.VehicleDescriptor.defaultInstance
}

override fun build():com.example.delhitransit.GtfsRealtime.VehicleDescriptor {
val result = buildPartial()
if (!result.isInitialized)
{
throw AbstractMessage.Builder.newUninitializedMessageException(result)
}
return result
}

override fun buildPartial():com.example.delhitransit.GtfsRealtime.VehicleDescriptor {
val result = com.example.delhitransit.GtfsRealtime.VehicleDescriptor(this)
val from_bitField0_ = bitField0_
var to_bitField0_ = 0
if (from_bitField0_ and 0x00000001 != 0)
{
to_bitField0_ = to_bitField0_ or 0x00000001
}
result.id_ = id_
if (from_bitField0_ and 0x00000002 != 0)
{
to_bitField0_ = to_bitField0_ or 0x00000002
}
result.label_ = label_
if (from_bitField0_ and 0x00000004 != 0)
{
to_bitField0_ = to_bitField0_ or 0x00000004
}
result.licensePlate_ = licensePlate_
result.bitField0_ = to_bitField0_
onBuilt()
return result
}

override fun clone():Builder {
return super.clone()
}

override fun setField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
value:Any):Builder {
return super.setField(field, value)
}

override fun clearField(
field:com.google.protobuf.Descriptors.FieldDescriptor):Builder {
return super.clearField(field)
}

override fun clearOneof(
oneof:com.google.protobuf.Descriptors.OneofDescriptor):Builder {
return super.clearOneof(oneof)
}

override fun setRepeatedField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
index:Int, value:Any):Builder {
return super.setRepeatedField(field, index, value)
}

override fun addRepeatedField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
value:Any):Builder {
return super.addRepeatedField(field, value)
}

override fun <Type> setExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.VehicleDescriptor, Type>,
value:Type):Builder {
return super.setExtension(extension, value)
}

override fun <Type> setExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.VehicleDescriptor, List<Type>>,
index:Int, value:Type):Builder {
return super.setExtension(extension, index, value)
}

override fun <Type> addExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.VehicleDescriptor, List<Type>>,
value:Type):Builder {
return super.addExtension(extension, value)
}

override fun <Type> clearExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.VehicleDescriptor, *>):Builder {
return super.clearExtension<Any>(extension)
}

override fun mergeFrom(other:com.google.protobuf.Message):Builder {
if (other is com.example.delhitransit.GtfsRealtime.VehicleDescriptor)
{
return mergeFrom(other)
}
else
{
super.mergeFrom(other)
return this
}
}

 fun mergeFrom(other:com.example.delhitransit.GtfsRealtime.VehicleDescriptor?):Builder {
if (other === com.example.delhitransit.GtfsRealtime.VehicleDescriptor.defaultInstance)
return this
if (other!!.hasId())
{
bitField0_ = bitField0_ or 0x00000001
id_ = other.id_
onChanged()
}
if (other.hasLabel())
{
bitField0_ = bitField0_ or 0x00000002
label_ = other.label_
onChanged()
}
if (other.hasLicensePlate())
{
bitField0_ = bitField0_ or 0x00000004
licensePlate_ = other.licensePlate_
onChanged()
}
this.mergeExtensionFields(other)
this.mergeUnknownFields(other.unknownFields)
onChanged()
return this
}

override fun isInitialized():Boolean {
return if (!extensionsAreInitialized()) {
            false
        } else true
}

@Throws(java.io.IOException::class)
override fun mergeFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):Builder {
var parsedMessage:com.example.delhitransit.GtfsRealtime.VehicleDescriptor? = null
try
{
parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry)
}
catch (e:com.google.protobuf.InvalidProtocolBufferException) {
parsedMessage = e.unfinishedMessage as com.example.delhitransit.GtfsRealtime.VehicleDescriptor
throw e.unwrapIOException()
}
finally
{
if (parsedMessage != null)
{
mergeFrom(parsedMessage)
}
}
return this
}

/**
 * <pre>
 * Internal system identification of the vehicle. Should be unique per
 * vehicle, and can be used for tracking the vehicle as it proceeds through
 * the system.
</pre> *
 *
 * `optional string id = 1;`
 */
            override fun hasId():Boolean {
return bitField0_ and 0x00000001 != 0
}

/**
 * <pre>
 * Internal system identification of the vehicle. Should be unique per
 * vehicle, and can be used for tracking the vehicle as it proceeds through
 * the system.
</pre> *
 *
 * `optional string id = 1;`
 */
             fun setId(
value:java.lang.String?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000001
id_ = value
onChanged()
return this
}

/**
 * <pre>
 * Internal system identification of the vehicle. Should be unique per
 * vehicle, and can be used for tracking the vehicle as it proceeds through
 * the system.
</pre> *
 *
 * `optional string id = 1;`
 */
             fun clearId():Builder {
bitField0_ = bitField0_ and 0x00000001.inv()
id_ = defaultInstance.id
onChanged()
return this
}

/**
 * <pre>
 * Internal system identification of the vehicle. Should be unique per
 * vehicle, and can be used for tracking the vehicle as it proceeds through
 * the system.
</pre> *
 *
 * `optional string id = 1;`
 */
             fun setIdBytes(
value:com.google.protobuf.ByteString?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000001
id_ = value
onChanged()
return this
}

/**
 * <pre>
 * User visible label, i.e., something that must be shown to the passenger to
 * help identify the correct vehicle.
</pre> *
 *
 * `optional string label = 2;`
 */
            override fun hasLabel():Boolean {
return bitField0_ and 0x00000002 != 0
}

/**
 * <pre>
 * User visible label, i.e., something that must be shown to the passenger to
 * help identify the correct vehicle.
</pre> *
 *
 * `optional string label = 2;`
 */
             fun setLabel(
value:java.lang.String?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000002
label_ = value
onChanged()
return this
}

/**
 * <pre>
 * User visible label, i.e., something that must be shown to the passenger to
 * help identify the correct vehicle.
</pre> *
 *
 * `optional string label = 2;`
 */
             fun clearLabel():Builder {
bitField0_ = bitField0_ and 0x00000002.inv()
label_ = defaultInstance.label
onChanged()
return this
}

/**
 * <pre>
 * User visible label, i.e., something that must be shown to the passenger to
 * help identify the correct vehicle.
</pre> *
 *
 * `optional string label = 2;`
 */
             fun setLabelBytes(
value:com.google.protobuf.ByteString?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000002
label_ = value
onChanged()
return this
}

/**
 * <pre>
 * The license plate of the vehicle.
</pre> *
 *
 * `optional string license_plate = 3;`
 */
            override fun hasLicensePlate():Boolean {
return bitField0_ and 0x00000004 != 0
}

/**
 * <pre>
 * The license plate of the vehicle.
</pre> *
 *
 * `optional string license_plate = 3;`
 */
             fun setLicensePlate(
value:java.lang.String?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000004
licensePlate_ = value
onChanged()
return this
}

/**
 * <pre>
 * The license plate of the vehicle.
</pre> *
 *
 * `optional string license_plate = 3;`
 */
             fun clearLicensePlate():Builder {
bitField0_ = bitField0_ and 0x00000004.inv()
licensePlate_ = defaultInstance.licensePlate
onChanged()
return this
}

/**
 * <pre>
 * The license plate of the vehicle.
</pre> *
 *
 * `optional string license_plate = 3;`
 */
             fun setLicensePlateBytes(
value:com.google.protobuf.ByteString?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000004
licensePlate_ = value
onChanged()
return this
}

override fun setUnknownFields(
unknownFields:com.google.protobuf.UnknownFieldSet):Builder {
return super.setUnknownFields(unknownFields)
}

override fun mergeUnknownFields(
unknownFields:com.google.protobuf.UnknownFieldSet):Builder {
return super.mergeUnknownFields(unknownFields)
}

companion object {
 val descriptor:com.google.protobuf.Descriptors.Descriptor
get() =com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_VehicleDescriptor_descriptor
}


 // @@protoc_insertion_point(builder_scope:com.example.delhitransit.VehicleDescriptor)
        }

override fun getParserForType():com.google.protobuf.Parser<VehicleDescriptor> {
return PARSER
}

override fun getDefaultInstanceForType():com.example.delhitransit.GtfsRealtime.VehicleDescriptor {
return defaultInstance
}

companion object {
private val serialVersionUID = 0L

 val descriptor:com.google.protobuf.Descriptors.Descriptor
get() =com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_VehicleDescriptor_descriptor
 val ID_FIELD_NUMBER = 1

 val LABEL_FIELD_NUMBER = 2

 val LICENSE_PLATE_FIELD_NUMBER = 3

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:java.nio.ByteBuffer):com.example.delhitransit.GtfsRealtime.VehicleDescriptor {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:java.nio.ByteBuffer,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.VehicleDescriptor {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:com.google.protobuf.ByteString):com.example.delhitransit.GtfsRealtime.VehicleDescriptor {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:com.google.protobuf.ByteString,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.VehicleDescriptor {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(data:ByteArray):com.example.delhitransit.GtfsRealtime.VehicleDescriptor {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:ByteArray,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.VehicleDescriptor {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseFrom(input:java.io.InputStream):com.example.delhitransit.GtfsRealtime.VehicleDescriptor {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:java.io.InputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.VehicleDescriptor {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseDelimitedFrom(input:java.io.InputStream):com.example.delhitransit.GtfsRealtime.VehicleDescriptor {
return com.google.protobuf.GeneratedMessageV3
.parseDelimitedWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseDelimitedFrom(
input:java.io.InputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.VehicleDescriptor {
return com.google.protobuf.GeneratedMessageV3
.parseDelimitedWithIOException(PARSER, input, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:com.google.protobuf.CodedInputStream):com.example.delhitransit.GtfsRealtime.VehicleDescriptor {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.VehicleDescriptor {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input, extensionRegistry)
}

 fun newBuilder():Builder {
return defaultInstance.toBuilder()
}

 fun newBuilder(prototype:com.example.delhitransit.GtfsRealtime.VehicleDescriptor):Builder {
return defaultInstance.toBuilder().mergeFrom(prototype)
}

 // @@protoc_insertion_point(class_scope:com.example.delhitransit.VehicleDescriptor)
         val defaultInstance:com.example.delhitransit.GtfsRealtime.VehicleDescriptor

init{
defaultInstance = com.example.delhitransit.GtfsRealtime.VehicleDescriptor()
}

@Deprecated("")
 val PARSER:com.google.protobuf.Parser<VehicleDescriptor> = object:com.google.protobuf.AbstractParser<VehicleDescriptor>() {
@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
override fun parsePartialFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):VehicleDescriptor {
return VehicleDescriptor(input, extensionRegistry)
}
}

 fun parser():com.google.protobuf.Parser<VehicleDescriptor> {
return PARSER
}
}

}

 interface EntitySelectorOrBuilder:
 // @@protoc_insertion_point(interface_extends:com.example.delhitransit.EntitySelector)
            com.google.protobuf.GeneratedMessageV3.ExtendableMessageOrBuilder<EntitySelector> {

/**
 * <pre>
 * The values of the fields should correspond to the appropriate fields in the
 * GTFS feed.
 * At least one specifier must be given. If several are given, then the
 * matching has to apply to all the given specifiers.
</pre> *
 *
 * `optional string agency_id = 1;`
 */
         val agencyId:java.lang.String

/**
 * <pre>
 * The values of the fields should correspond to the appropriate fields in the
 * GTFS feed.
 * At least one specifier must be given. If several are given, then the
 * matching has to apply to all the given specifiers.
</pre> *
 *
 * `optional string agency_id = 1;`
 */
         val agencyIdBytes:com.google.protobuf.ByteString

/**
 * `optional string route_id = 2;`
 */
         val routeId:java.lang.String

/**
 * `optional string route_id = 2;`
 */
         val routeIdBytes:com.google.protobuf.ByteString

/**
 * <pre>
 * corresponds to route_type in GTFS.
</pre> *
 *
 * `optional int32 route_type = 3;`
 */
         val routeType:Int

/**
 * `optional .com.example.delhitransit.TripDescriptor trip = 4;`
 */
         val trip:com.example.delhitransit.GtfsRealtime.TripDescriptor

/**
 * `optional .com.example.delhitransit.TripDescriptor trip = 4;`
 */
         val tripOrBuilder:com.example.delhitransit.GtfsRealtime.TripDescriptorOrBuilder

/**
 * `optional string stop_id = 5;`
 */
         val stopId:java.lang.String

/**
 * `optional string stop_id = 5;`
 */
         val stopIdBytes:com.google.protobuf.ByteString

/**
 * <pre>
 * The values of the fields should correspond to the appropriate fields in the
 * GTFS feed.
 * At least one specifier must be given. If several are given, then the
 * matching has to apply to all the given specifiers.
</pre> *
 *
 * `optional string agency_id = 1;`
 */
         fun hasAgencyId():Boolean

/**
 * `optional string route_id = 2;`
 */
         fun hasRouteId():Boolean

/**
 * <pre>
 * corresponds to route_type in GTFS.
</pre> *
 *
 * `optional int32 route_type = 3;`
 */
         fun hasRouteType():Boolean

/**
 * `optional .com.example.delhitransit.TripDescriptor trip = 4;`
 */
         fun hasTrip():Boolean

/**
 * `optional string stop_id = 5;`
 */
         fun hasStopId():Boolean
}

/**
 * <pre>
 * A selector for an entity in a GTFS feed.
</pre> *
 *
 *
 * Protobuf type `com.example.delhitransit.EntitySelector`
 */
     class EntitySelector:com.google.protobuf.GeneratedMessageV3.ExtendableMessage<EntitySelector>,
 // @@protoc_insertion_point(message_implements:com.example.delhitransit.EntitySelector)
            EntitySelectorOrBuilder {

private var bitField0_:Int = 0
@Volatile private var agencyId_:Any? = null

/**
 * <pre>
 * The values of the fields should correspond to the appropriate fields in the
 * GTFS feed.
 * At least one specifier must be given. If several are given, then the
 * matching has to apply to all the given specifiers.
</pre> *
 *
 * `optional string agency_id = 1;`
 */
        override val agencyId:java.lang.String
get() {
val ref = agencyId_
if (ref is java.lang.String)
{
return ref
}
else
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
agencyId_ = s
}
return s
}
}

/**
 * <pre>
 * The values of the fields should correspond to the appropriate fields in the
 * GTFS feed.
 * At least one specifier must be given. If several are given, then the
 * matching has to apply to all the given specifiers.
</pre> *
 *
 * `optional string agency_id = 1;`
 */
        override val agencyIdBytes:com.google.protobuf.ByteString
get() {
val ref = agencyId_
if (ref is java.lang.String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
agencyId_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}
@Volatile private var routeId_:Any? = null

/**
 * `optional string route_id = 2;`
 */
        override val routeId:java.lang.String
get() {
val ref = routeId_
if (ref is java.lang.String)
{
return ref
}
else
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
routeId_ = s
}
return s
}
}

/**
 * `optional string route_id = 2;`
 */
        override val routeIdBytes:com.google.protobuf.ByteString
get() {
val ref = routeId_
if (ref is java.lang.String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
routeId_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}
/**
 * <pre>
 * corresponds to route_type in GTFS.
</pre> *
 *
 * `optional int32 route_type = 3;`
 */
        override var routeType:Int = 0
private set
private var trip_:com.example.delhitransit.GtfsRealtime.TripDescriptor? = null

/**
 * `optional .com.example.delhitransit.TripDescriptor trip = 4;`
 */
        override val trip:com.example.delhitransit.GtfsRealtime.TripDescriptor
get() =if (trip_ == null) com.example.delhitransit.GtfsRealtime.TripDescriptor.defaultInstance else trip_

/**
 * `optional .com.example.delhitransit.TripDescriptor trip = 4;`
 */
        override val tripOrBuilder:com.example.delhitransit.GtfsRealtime.TripDescriptorOrBuilder
get() =if (trip_ == null) com.example.delhitransit.GtfsRealtime.TripDescriptor.defaultInstance else trip_
@Volatile private var stopId_:Any? = null

/**
 * `optional string stop_id = 5;`
 */
        override val stopId:java.lang.String
get() {
val ref = stopId_
if (ref is java.lang.String)
{
return ref
}
else
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
stopId_ = s
}
return s
}
}

/**
 * `optional string stop_id = 5;`
 */
        override val stopIdBytes:com.google.protobuf.ByteString
get() {
val ref = stopId_
if (ref is java.lang.String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
stopId_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}

private var memoizedIsInitialized:Byte = -1

 // Use EntitySelector.newBuilder() to construct.
        private constructor(builder:com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.example.delhitransit.GtfsRealtime.EntitySelector, *>) : super(builder) {}

private constructor() {
agencyId_ = ""
routeId_ = ""
stopId_ = ""
}

 //        @java.lang.Override
 //        @SuppressWarnings({"unused"})
 //        protected java.lang.Object newInstance(
 //                UnusedPrivateParameter unused) {
 //            return new EntitySelector();
 //        }

        override fun getUnknownFields():com.google.protobuf.UnknownFieldSet {
return this.unknownFields
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
private constructor(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite?) : this() {
if (extensionRegistry == null)
{
throw java.lang.NullPointerException()
}
val mutable_bitField0_ = 0
val unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder()
try
{
var done = false
while (!done)
{
val tag = input.readTag()
when (tag) {
0 -> done = true
10 -> {
val bs = input.readBytes()
bitField0_ = bitField0_ or 0x00000001
agencyId_ = bs
}
18 -> {
val bs = input.readBytes()
bitField0_ = bitField0_ or 0x00000002
routeId_ = bs
}
24 -> {
bitField0_ = bitField0_ or 0x00000004
routeType = input.readInt32()
}
34 -> {
var subBuilder:com.example.delhitransit.GtfsRealtime.TripDescriptor.Builder? = null
if (bitField0_ and 0x00000008 != 0)
{
subBuilder = trip_!!.toBuilder()
}
trip_ = input.readMessage(com.example.delhitransit.GtfsRealtime.TripDescriptor.PARSER, extensionRegistry)
if (subBuilder != null)
{
subBuilder.mergeFrom(trip_)
trip_ = subBuilder.buildPartial()
}
bitField0_ = bitField0_ or 0x00000008
}
42 -> {
val bs = input.readBytes()
bitField0_ = bitField0_ or 0x00000010
stopId_ = bs
}
else -> {
if (!parseUnknownField(
input, unknownFields, extensionRegistry, tag))
{
done = true
}
}
}
}
}
catch (e:com.google.protobuf.InvalidProtocolBufferException) {
throw e.setUnfinishedMessage(this)
}
catch (e:java.io.IOException) {
throw com.google.protobuf.InvalidProtocolBufferException(
e).setUnfinishedMessage(this)
}
finally
{
this.unknownFields = unknownFields.build()
makeExtensionsImmutable()
}
}

override fun internalGetFieldAccessorTable():com.google.protobuf.GeneratedMessageV3.FieldAccessorTable {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_EntitySelector_fieldAccessorTable
.ensureFieldAccessorsInitialized(
com.example.delhitransit.GtfsRealtime.EntitySelector::class.java, com.example.delhitransit.GtfsRealtime.EntitySelector.Builder::class.java)
}

/**
 * <pre>
 * The values of the fields should correspond to the appropriate fields in the
 * GTFS feed.
 * At least one specifier must be given. If several are given, then the
 * matching has to apply to all the given specifiers.
</pre> *
 *
 * `optional string agency_id = 1;`
 */
        override fun hasAgencyId():Boolean {
return bitField0_ and 0x00000001 != 0
}

/**
 * `optional string route_id = 2;`
 */
        override fun hasRouteId():Boolean {
return bitField0_ and 0x00000002 != 0
}

/**
 * <pre>
 * corresponds to route_type in GTFS.
</pre> *
 *
 * `optional int32 route_type = 3;`
 */
        override fun hasRouteType():Boolean {
return bitField0_ and 0x00000004 != 0
}

/**
 * `optional .com.example.delhitransit.TripDescriptor trip = 4;`
 */
        override fun hasTrip():Boolean {
return bitField0_ and 0x00000008 != 0
}

/**
 * `optional string stop_id = 5;`
 */
        override fun hasStopId():Boolean {
return bitField0_ and 0x00000010 != 0
}

override fun isInitialized():Boolean {
val isInitialized = memoizedIsInitialized
if (isInitialized.toInt() == 1) return true
if (isInitialized.toInt() == 0) return false

if (hasTrip())
{
if (!trip.isInitialized)
{
memoizedIsInitialized = 0
return false
}
}
if (!extensionsAreInitialized())
{
memoizedIsInitialized = 0
return false
}
memoizedIsInitialized = 1
return true
}

@Throws(java.io.IOException::class)
override fun writeTo(output:com.google.protobuf.CodedOutputStream) {
val extensionWriter = newExtensionWriter()
if (bitField0_ and 0x00000001 != 0)
{
com.google.protobuf.GeneratedMessageV3.writeString(output, 1, agencyId_)
}
if (bitField0_ and 0x00000002 != 0)
{
com.google.protobuf.GeneratedMessageV3.writeString(output, 2, routeId_)
}
if (bitField0_ and 0x00000004 != 0)
{
output.writeInt32(3, routeType)
}
if (bitField0_ and 0x00000008 != 0)
{
output.writeMessage(4, trip)
}
if (bitField0_ and 0x00000010 != 0)
{
com.google.protobuf.GeneratedMessageV3.writeString(output, 5, stopId_)
}
extensionWriter.writeUntil(2000, output)
unknownFields.writeTo(output)
}

override fun getSerializedSize():Int {
var size = memoizedSize
if (size != -1) return size

size = 0
if (bitField0_ and 0x00000001 != 0)
{
size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, agencyId_!!)
}
if (bitField0_ and 0x00000002 != 0)
{
size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, routeId_!!)
}
if (bitField0_ and 0x00000004 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeInt32Size(3, routeType)
}
if (bitField0_ and 0x00000008 != 0)
{
size += com.google.protobuf.CodedOutputStream
.computeMessageSize(4, trip)
}
if (bitField0_ and 0x00000010 != 0)
{
size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, stopId_!!)
}
size += extensionsSerializedSize()
size += unknownFields.serializedSize
memoizedSize = size
return size
}

override fun equals(obj:Any?):Boolean {
if (obj === this)
{
return true
}
if (obj !is com.example.delhitransit.GtfsRealtime.EntitySelector)
{
return super.equals(obj)
}
val other = obj as com.example.delhitransit.GtfsRealtime.EntitySelector?

if (hasAgencyId() != other!!.hasAgencyId()) return false
if (hasAgencyId())
{
if (agencyId != other.agencyId)
return false
}
if (hasRouteId() != other.hasRouteId()) return false
if (hasRouteId())
{
if (routeId != other.routeId)
return false
}
if (hasRouteType() != other.hasRouteType()) return false
if (hasRouteType())
{
if (routeType != other.routeType)
return false
}
if (hasTrip() != other.hasTrip()) return false
if (hasTrip())
{
if (trip != other.trip)
return false
}
if (hasStopId() != other.hasStopId()) return false
if (hasStopId())
{
if (stopId != other.stopId)
return false
}
if (unknownFields != other.unknownFields) return false
return if (extensionFields != other.extensionFields) false else true
}

override fun hashCode():Int {
if (memoizedHashCode != 0)
{
return memoizedHashCode
}
var hash = 41
hash = 19 * hash + descriptor.hashCode()
if (hasAgencyId())
{
hash = 37 * hash + AGENCY_ID_FIELD_NUMBER
hash = 53 * hash + agencyId.hashCode()
}
if (hasRouteId())
{
hash = 37 * hash + ROUTE_ID_FIELD_NUMBER
hash = 53 * hash + routeId.hashCode()
}
if (hasRouteType())
{
hash = 37 * hash + ROUTE_TYPE_FIELD_NUMBER
hash = 53 * hash + routeType
}
if (hasTrip())
{
hash = 37 * hash + TRIP_FIELD_NUMBER
hash = 53 * hash + trip.hashCode()
}
if (hasStopId())
{
hash = 37 * hash + STOP_ID_FIELD_NUMBER
hash = 53 * hash + stopId.hashCode()
}
hash = AbstractMessage.hashFields(hash, extensionFields)
hash = 29 * hash + unknownFields.hashCode()
memoizedHashCode = hash
return hash
}

override fun newBuilderForType():Builder {
return newBuilder()
}

override fun toBuilder():Builder {
return if (this === defaultInstance)
Builder()
else
Builder().mergeFrom(this)
}

override fun newBuilderForType(
parent:com.google.protobuf.GeneratedMessageV3.BuilderParent):Builder {
return Builder(parent)
}

/**
 * <pre>
 * A selector for an entity in a GTFS feed.
</pre> *
 *
 *
 * Protobuf type `com.example.delhitransit.EntitySelector`
 */
         class Builder:com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.example.delhitransit.GtfsRealtime.EntitySelector, Builder>,
 // @@protoc_insertion_point(builder_implements:com.example.delhitransit.EntitySelector)
                com.example.delhitransit.GtfsRealtime.EntitySelectorOrBuilder {

private var bitField0_:Int = 0

private var agencyId_:Any? = ""

/**
 * <pre>
 * The values of the fields should correspond to the appropriate fields in the
 * GTFS feed.
 * At least one specifier must be given. If several are given, then the
 * matching has to apply to all the given specifiers.
</pre> *
 *
 * `optional string agency_id = 1;`
 */
            override val agencyId:java.lang.String
get() {
val ref = agencyId_
if (ref !is java.lang.String)
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
agencyId_ = s
}
return s
}
else
{
return ref
}
}

/**
 * <pre>
 * The values of the fields should correspond to the appropriate fields in the
 * GTFS feed.
 * At least one specifier must be given. If several are given, then the
 * matching has to apply to all the given specifiers.
</pre> *
 *
 * `optional string agency_id = 1;`
 */
            override val agencyIdBytes:com.google.protobuf.ByteString
get() {
val ref = agencyId_
if (ref is String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
agencyId_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}

private var routeId_:Any? = ""

/**
 * `optional string route_id = 2;`
 */
            override val routeId:java.lang.String
get() {
val ref = routeId_
if (ref !is java.lang.String)
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
routeId_ = s
}
return s
}
else
{
return ref
}
}

/**
 * `optional string route_id = 2;`
 */
            override val routeIdBytes:com.google.protobuf.ByteString
get() {
val ref = routeId_
if (ref is String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
routeId_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}

/**
 * <pre>
 * corresponds to route_type in GTFS.
</pre> *
 *
 * `optional int32 route_type = 3;`
 */
            override var routeType:Int = 0
private set

private var trip_:com.example.delhitransit.GtfsRealtime.TripDescriptor? = null
private var tripBuilder_:com.google.protobuf.SingleFieldBuilderV3<com.example.delhitransit.GtfsRealtime.TripDescriptor, com.example.delhitransit.GtfsRealtime.TripDescriptor.Builder, com.example.delhitransit.GtfsRealtime.TripDescriptorOrBuilder>? = null

/**
 * `optional .com.example.delhitransit.TripDescriptor trip = 4;`
 */
            override val trip:com.example.delhitransit.GtfsRealtime.TripDescriptor
get() =if (tripBuilder_ == null) {
            if (trip_ == null) com.example.delhitransit.GtfsRealtime.TripDescriptor.defaultInstance else trip_
        } else {
            tripBuilder_!!.message
        }

/**
 * `optional .com.example.delhitransit.TripDescriptor trip = 4;`
 */
             val tripBuilder:com.example.delhitransit.GtfsRealtime.TripDescriptor.Builder
get() {
bitField0_ = bitField0_ or 0x00000008
onChanged()
return tripFieldBuilder.builder
}

/**
 * `optional .com.example.delhitransit.TripDescriptor trip = 4;`
 */
            override val tripOrBuilder:com.example.delhitransit.GtfsRealtime.TripDescriptorOrBuilder
get() =if (tripBuilder_ != null) {
            tripBuilder_!!.messageOrBuilder
        } else {
            if (trip_ == null)
                com.example.delhitransit.GtfsRealtime.TripDescriptor.defaultInstance
            else
                trip_
        }

/**
 * `optional .com.example.delhitransit.TripDescriptor trip = 4;`
 */
            private val tripFieldBuilder:com.google.protobuf.SingleFieldBuilderV3<com.example.delhitransit.GtfsRealtime.TripDescriptor, com.example.delhitransit.GtfsRealtime.TripDescriptor.Builder, com.example.delhitransit.GtfsRealtime.TripDescriptorOrBuilder>
get() {
if (tripBuilder_ == null)
{
tripBuilder_ = com.google.protobuf.SingleFieldBuilderV3(
trip,
parentForChildren,
isClean)
trip_ = null
}
return tripBuilder_
}

private var stopId_:Any? = ""

/**
 * `optional string stop_id = 5;`
 */
            override val stopId:java.lang.String
get() {
val ref = stopId_
if (ref !is java.lang.String)
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
stopId_ = s
}
return s
}
else
{
return ref
}
}

/**
 * `optional string stop_id = 5;`
 */
            override val stopIdBytes:com.google.protobuf.ByteString
get() {
val ref = stopId_
if (ref is String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
stopId_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}

override fun internalGetFieldAccessorTable():com.google.protobuf.GeneratedMessageV3.FieldAccessorTable {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_EntitySelector_fieldAccessorTable
.ensureFieldAccessorsInitialized(
com.example.delhitransit.GtfsRealtime.EntitySelector::class.java, com.example.delhitransit.GtfsRealtime.EntitySelector.Builder::class.java)
}

 // Construct using com.example.delhitransit.GtfsRealtime.EntitySelector.newBuilder()
            private constructor() {
maybeForceBuilderInitialization()
}

private constructor(
parent:com.google.protobuf.GeneratedMessageV3.BuilderParent) : super(parent) {
maybeForceBuilderInitialization()
}

private fun maybeForceBuilderInitialization() {
if (com.google.protobuf.GeneratedMessageV3
.alwaysUseFieldBuilders)
{
tripFieldBuilder
}
}

override fun clear():Builder {
super.clear()
agencyId_ = ""
bitField0_ = bitField0_ and 0x00000001.inv()
routeId_ = ""
bitField0_ = bitField0_ and 0x00000002.inv()
routeType = 0
bitField0_ = bitField0_ and 0x00000004.inv()
if (tripBuilder_ == null)
{
trip_ = null
}
else
{
tripBuilder_!!.clear()
}
bitField0_ = bitField0_ and 0x00000008.inv()
stopId_ = ""
bitField0_ = bitField0_ and 0x00000010.inv()
return this
}

override fun getDescriptorForType():com.google.protobuf.Descriptors.Descriptor {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_EntitySelector_descriptor
}

override fun getDefaultInstanceForType():com.example.delhitransit.GtfsRealtime.EntitySelector {
return com.example.delhitransit.GtfsRealtime.EntitySelector.defaultInstance
}

override fun build():com.example.delhitransit.GtfsRealtime.EntitySelector {
val result = buildPartial()
if (!result.isInitialized)
{
throw AbstractMessage.Builder.newUninitializedMessageException(result)
}
return result
}

override fun buildPartial():com.example.delhitransit.GtfsRealtime.EntitySelector {
val result = com.example.delhitransit.GtfsRealtime.EntitySelector(this)
val from_bitField0_ = bitField0_
var to_bitField0_ = 0
if (from_bitField0_ and 0x00000001 != 0)
{
to_bitField0_ = to_bitField0_ or 0x00000001
}
result.agencyId_ = agencyId_
if (from_bitField0_ and 0x00000002 != 0)
{
to_bitField0_ = to_bitField0_ or 0x00000002
}
result.routeId_ = routeId_
if (from_bitField0_ and 0x00000004 != 0)
{
result.routeType = routeType
to_bitField0_ = to_bitField0_ or 0x00000004
}
if (from_bitField0_ and 0x00000008 != 0)
{
if (tripBuilder_ == null)
{
result.trip_ = trip_
}
else
{
result.trip_ = tripBuilder_!!.build()
}
to_bitField0_ = to_bitField0_ or 0x00000008
}
if (from_bitField0_ and 0x00000010 != 0)
{
to_bitField0_ = to_bitField0_ or 0x00000010
}
result.stopId_ = stopId_
result.bitField0_ = to_bitField0_
onBuilt()
return result
}

override fun clone():Builder {
return super.clone()
}

override fun setField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
value:Any):Builder {
return super.setField(field, value)
}

override fun clearField(
field:com.google.protobuf.Descriptors.FieldDescriptor):Builder {
return super.clearField(field)
}

override fun clearOneof(
oneof:com.google.protobuf.Descriptors.OneofDescriptor):Builder {
return super.clearOneof(oneof)
}

override fun setRepeatedField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
index:Int, value:Any):Builder {
return super.setRepeatedField(field, index, value)
}

override fun addRepeatedField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
value:Any):Builder {
return super.addRepeatedField(field, value)
}

override fun <Type> setExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.EntitySelector, Type>,
value:Type):Builder {
return super.setExtension(extension, value)
}

override fun <Type> setExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.EntitySelector, List<Type>>,
index:Int, value:Type):Builder {
return super.setExtension(extension, index, value)
}

override fun <Type> addExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.EntitySelector, List<Type>>,
value:Type):Builder {
return super.addExtension(extension, value)
}

override fun <Type> clearExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.EntitySelector, *>):Builder {
return super.clearExtension<Any>(extension)
}

override fun mergeFrom(other:com.google.protobuf.Message):Builder {
if (other is com.example.delhitransit.GtfsRealtime.EntitySelector)
{
return mergeFrom(other)
}
else
{
super.mergeFrom(other)
return this
}
}

 fun mergeFrom(other:com.example.delhitransit.GtfsRealtime.EntitySelector):Builder {
if (other === com.example.delhitransit.GtfsRealtime.EntitySelector.defaultInstance)
return this
if (other.hasAgencyId())
{
bitField0_ = bitField0_ or 0x00000001
agencyId_ = other.agencyId_
onChanged()
}
if (other.hasRouteId())
{
bitField0_ = bitField0_ or 0x00000002
routeId_ = other.routeId_
onChanged()
}
if (other.hasRouteType())
{
setRouteType(other.routeType)
}
if (other.hasTrip())
{
mergeTrip(other.trip)
}
if (other.hasStopId())
{
bitField0_ = bitField0_ or 0x00000010
stopId_ = other.stopId_
onChanged()
}
this.mergeExtensionFields(other)
this.mergeUnknownFields(other.unknownFields)
onChanged()
return this
}

override fun isInitialized():Boolean {
if (hasTrip())
{
if (!trip.isInitialized)
{
return false
}
}
return if (!extensionsAreInitialized()) {
            false
        } else true
}

@Throws(java.io.IOException::class)
override fun mergeFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):Builder {
var parsedMessage:com.example.delhitransit.GtfsRealtime.EntitySelector? = null
try
{
parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry)
}
catch (e:com.google.protobuf.InvalidProtocolBufferException) {
parsedMessage = e.unfinishedMessage as com.example.delhitransit.GtfsRealtime.EntitySelector
throw e.unwrapIOException()
}
finally
{
if (parsedMessage != null)
{
mergeFrom(parsedMessage)
}
}
return this
}

/**
 * <pre>
 * The values of the fields should correspond to the appropriate fields in the
 * GTFS feed.
 * At least one specifier must be given. If several are given, then the
 * matching has to apply to all the given specifiers.
</pre> *
 *
 * `optional string agency_id = 1;`
 */
            override fun hasAgencyId():Boolean {
return bitField0_ and 0x00000001 != 0
}

/**
 * <pre>
 * The values of the fields should correspond to the appropriate fields in the
 * GTFS feed.
 * At least one specifier must be given. If several are given, then the
 * matching has to apply to all the given specifiers.
</pre> *
 *
 * `optional string agency_id = 1;`
 */
             fun setAgencyId(
value:java.lang.String?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000001
agencyId_ = value
onChanged()
return this
}

/**
 * <pre>
 * The values of the fields should correspond to the appropriate fields in the
 * GTFS feed.
 * At least one specifier must be given. If several are given, then the
 * matching has to apply to all the given specifiers.
</pre> *
 *
 * `optional string agency_id = 1;`
 */
             fun clearAgencyId():Builder {
bitField0_ = bitField0_ and 0x00000001.inv()
agencyId_ = defaultInstance.agencyId
onChanged()
return this
}

/**
 * <pre>
 * The values of the fields should correspond to the appropriate fields in the
 * GTFS feed.
 * At least one specifier must be given. If several are given, then the
 * matching has to apply to all the given specifiers.
</pre> *
 *
 * `optional string agency_id = 1;`
 */
             fun setAgencyIdBytes(
value:com.google.protobuf.ByteString?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000001
agencyId_ = value
onChanged()
return this
}

/**
 * `optional string route_id = 2;`
 */
            override fun hasRouteId():Boolean {
return bitField0_ and 0x00000002 != 0
}

/**
 * `optional string route_id = 2;`
 */
             fun setRouteId(
value:java.lang.String?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000002
routeId_ = value
onChanged()
return this
}

/**
 * `optional string route_id = 2;`
 */
             fun clearRouteId():Builder {
bitField0_ = bitField0_ and 0x00000002.inv()
routeId_ = defaultInstance.routeId
onChanged()
return this
}

/**
 * `optional string route_id = 2;`
 */
             fun setRouteIdBytes(
value:com.google.protobuf.ByteString?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000002
routeId_ = value
onChanged()
return this
}

/**
 * <pre>
 * corresponds to route_type in GTFS.
</pre> *
 *
 * `optional int32 route_type = 3;`
 */
            override fun hasRouteType():Boolean {
return bitField0_ and 0x00000004 != 0
}

/**
 * <pre>
 * corresponds to route_type in GTFS.
</pre> *
 *
 * `optional int32 route_type = 3;`
 */
             fun setRouteType(value:Int):Builder {
bitField0_ = bitField0_ or 0x00000004
routeType = value
onChanged()
return this
}

/**
 * <pre>
 * corresponds to route_type in GTFS.
</pre> *
 *
 * `optional int32 route_type = 3;`
 */
             fun clearRouteType():Builder {
bitField0_ = bitField0_ and 0x00000004.inv()
routeType = 0
onChanged()
return this
}

/**
 * `optional .com.example.delhitransit.TripDescriptor trip = 4;`
 */
            override fun hasTrip():Boolean {
return bitField0_ and 0x00000008 != 0
}

/**
 * `optional .com.example.delhitransit.TripDescriptor trip = 4;`
 */
             fun setTrip(value:com.example.delhitransit.GtfsRealtime.TripDescriptor?):Builder {
if (tripBuilder_ == null)
{
if (value == null)
{
throw NullPointerException()
}
trip_ = value
onChanged()
}
else
{
tripBuilder_!!.setMessage(value!!)
}
bitField0_ = bitField0_ or 0x00000008
return this
}

/**
 * `optional .com.example.delhitransit.TripDescriptor trip = 4;`
 */
             fun setTrip(
builderForValue:com.example.delhitransit.GtfsRealtime.TripDescriptor.Builder):Builder {
if (tripBuilder_ == null)
{
trip_ = builderForValue.build()
onChanged()
}
else
{
tripBuilder_!!.setMessage(builderForValue.build())
}
bitField0_ = bitField0_ or 0x00000008
return this
}

/**
 * `optional .com.example.delhitransit.TripDescriptor trip = 4;`
 */
             fun mergeTrip(value:com.example.delhitransit.GtfsRealtime.TripDescriptor):Builder {
if (tripBuilder_ == null)
{
if (bitField0_ and 0x00000008 != 0 &&
trip_ != null &&
trip_ !== com.example.delhitransit.GtfsRealtime.TripDescriptor.defaultInstance)
{
trip_ = com.example.delhitransit.GtfsRealtime.TripDescriptor.newBuilder(trip_).mergeFrom(value).buildPartial()
}
else
{
trip_ = value
}
onChanged()
}
else
{
tripBuilder_!!.mergeFrom(value)
}
bitField0_ = bitField0_ or 0x00000008
return this
}

/**
 * `optional .com.example.delhitransit.TripDescriptor trip = 4;`
 */
             fun clearTrip():Builder {
if (tripBuilder_ == null)
{
trip_ = null
onChanged()
}
else
{
tripBuilder_!!.clear()
}
bitField0_ = bitField0_ and 0x00000008.inv()
return this
}

/**
 * `optional string stop_id = 5;`
 */
            override fun hasStopId():Boolean {
return bitField0_ and 0x00000010 != 0
}

/**
 * `optional string stop_id = 5;`
 */
             fun setStopId(
value:java.lang.String?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000010
stopId_ = value
onChanged()
return this
}

/**
 * `optional string stop_id = 5;`
 */
             fun clearStopId():Builder {
bitField0_ = bitField0_ and 0x00000010.inv()
stopId_ = defaultInstance.stopId
onChanged()
return this
}

/**
 * `optional string stop_id = 5;`
 */
             fun setStopIdBytes(
value:com.google.protobuf.ByteString?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000010
stopId_ = value
onChanged()
return this
}

override fun setUnknownFields(
unknownFields:com.google.protobuf.UnknownFieldSet):Builder {
return super.setUnknownFields(unknownFields)
}

override fun mergeUnknownFields(
unknownFields:com.google.protobuf.UnknownFieldSet):Builder {
return super.mergeUnknownFields(unknownFields)
}

companion object {
 val descriptor:com.google.protobuf.Descriptors.Descriptor
get() =com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_EntitySelector_descriptor
}


 // @@protoc_insertion_point(builder_scope:com.example.delhitransit.EntitySelector)
        }

override fun getParserForType():com.google.protobuf.Parser<EntitySelector> {
return PARSER
}

override fun getDefaultInstanceForType():com.example.delhitransit.GtfsRealtime.EntitySelector {
return defaultInstance
}

companion object {
private val serialVersionUID = 0L

 val descriptor:com.google.protobuf.Descriptors.Descriptor
get() =com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_EntitySelector_descriptor
 val AGENCY_ID_FIELD_NUMBER = 1

 val ROUTE_ID_FIELD_NUMBER = 2

 val ROUTE_TYPE_FIELD_NUMBER = 3

 val TRIP_FIELD_NUMBER = 4

 val STOP_ID_FIELD_NUMBER = 5

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:java.nio.ByteBuffer):com.example.delhitransit.GtfsRealtime.EntitySelector {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:java.nio.ByteBuffer,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.EntitySelector {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:com.google.protobuf.ByteString):com.example.delhitransit.GtfsRealtime.EntitySelector {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:com.google.protobuf.ByteString,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.EntitySelector {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(data:ByteArray):com.example.delhitransit.GtfsRealtime.EntitySelector {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:ByteArray,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.EntitySelector {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseFrom(input:java.io.InputStream):com.example.delhitransit.GtfsRealtime.EntitySelector {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:java.io.InputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.EntitySelector {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseDelimitedFrom(input:java.io.InputStream):com.example.delhitransit.GtfsRealtime.EntitySelector {
return com.google.protobuf.GeneratedMessageV3
.parseDelimitedWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseDelimitedFrom(
input:java.io.InputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.EntitySelector {
return com.google.protobuf.GeneratedMessageV3
.parseDelimitedWithIOException(PARSER, input, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:com.google.protobuf.CodedInputStream):com.example.delhitransit.GtfsRealtime.EntitySelector {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.EntitySelector {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input, extensionRegistry)
}

 fun newBuilder():Builder {
return defaultInstance.toBuilder()
}

 fun newBuilder(prototype:com.example.delhitransit.GtfsRealtime.EntitySelector):Builder {
return defaultInstance.toBuilder().mergeFrom(prototype)
}

 // @@protoc_insertion_point(class_scope:com.example.delhitransit.EntitySelector)
         val defaultInstance:com.example.delhitransit.GtfsRealtime.EntitySelector

init{
defaultInstance = com.example.delhitransit.GtfsRealtime.EntitySelector()
}

@Deprecated("")
 val PARSER:com.google.protobuf.Parser<EntitySelector> = object:com.google.protobuf.AbstractParser<EntitySelector>() {
@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
override fun parsePartialFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):EntitySelector {
return EntitySelector(input, extensionRegistry)
}
}

 fun parser():com.google.protobuf.Parser<EntitySelector> {
return PARSER
}
}

}

 interface TranslatedStringOrBuilder:
 // @@protoc_insertion_point(interface_extends:com.example.delhitransit.TranslatedString)
            com.google.protobuf.GeneratedMessageV3.ExtendableMessageOrBuilder<TranslatedString> {

/**
 * <pre>
 * At least one translation must be provided.
</pre> *
 *
 * `repeated .com.example.delhitransit.TranslatedString.Translation translation = 1;`
 */
         val translationList:List<com.example.delhitransit.GtfsRealtime.TranslatedString.Translation>

/**
 * <pre>
 * At least one translation must be provided.
</pre> *
 *
 * `repeated .com.example.delhitransit.TranslatedString.Translation translation = 1;`
 */
         val translationCount:Int

/**
 * <pre>
 * At least one translation must be provided.
</pre> *
 *
 * `repeated .com.example.delhitransit.TranslatedString.Translation translation = 1;`
 */
         val translationOrBuilderList:List< com.example.delhitransit.GtfsRealtime.TranslatedString.TranslationOrBuilder>

/**
 * <pre>
 * At least one translation must be provided.
</pre> *
 *
 * `repeated .com.example.delhitransit.TranslatedString.Translation translation = 1;`
 */
         fun getTranslation(index:Int):com.example.delhitransit.GtfsRealtime.TranslatedString.Translation

/**
 * <pre>
 * At least one translation must be provided.
</pre> *
 *
 * `repeated .com.example.delhitransit.TranslatedString.Translation translation = 1;`
 */
         fun getTranslationOrBuilder(
index:Int):com.example.delhitransit.GtfsRealtime.TranslatedString.TranslationOrBuilder
}

/**
 * <pre>
 * An internationalized message containing per-language versions of a snippet of
 * text or a URL.
 * One of the strings from a message will be picked up. The resolution proceeds
 * as follows:
 * 1. If the UI language matches the language code of a translation,
 * the first matching translation is picked.
 * 2. If a default UI language (e.g., English) matches the language code of a
 * translation, the first matching translation is picked.
 * 3. If some translation has an unspecified language code, that translation is
 * picked.
</pre> *
 *
 *
 * Protobuf type `com.example.delhitransit.TranslatedString`
 */
     class TranslatedString:com.google.protobuf.GeneratedMessageV3.ExtendableMessage<TranslatedString>,
 // @@protoc_insertion_point(message_implements:com.example.delhitransit.TranslatedString)
            TranslatedStringOrBuilder {
private var translation_:MutableList<com.example.delhitransit.GtfsRealtime.TranslatedString.Translation>? = null

/**
 * <pre>
 * At least one translation must be provided.
</pre> *
 *
 * `repeated .com.example.delhitransit.TranslatedString.Translation translation = 1;`
 */
        override val translationList:List<com.example.delhitransit.GtfsRealtime.TranslatedString.Translation>?
get() =translation_

/**
 * <pre>
 * At least one translation must be provided.
</pre> *
 *
 * `repeated .com.example.delhitransit.TranslatedString.Translation translation = 1;`
 */
        override val translationOrBuilderList:List< com.example.delhitransit.GtfsRealtime.TranslatedString.TranslationOrBuilder>?
get() =translation_

/**
 * <pre>
 * At least one translation must be provided.
</pre> *
 *
 * `repeated .com.example.delhitransit.TranslatedString.Translation translation = 1;`
 */
        override val translationCount:Int
get() =translation_!!.size

private var memoizedIsInitialized:Byte = -1

 // Use TranslatedString.newBuilder() to construct.
        private constructor(builder:com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.example.delhitransit.GtfsRealtime.TranslatedString, *>) : super(builder) {}

private constructor() {
translation_ = emptyList<Translation>()
}

 //        @java.lang.Override
 //        @SuppressWarnings({"unused"})
 //        protected java.lang.Object newInstance(
 //                UnusedPrivateParameter unused) {
 //            return new TranslatedString();
 //        }

        override fun getUnknownFields():com.google.protobuf.UnknownFieldSet {
return this.unknownFields
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
private constructor(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite?) : this() {
if (extensionRegistry == null)
{
throw java.lang.NullPointerException()
}
var mutable_bitField0_ = 0
val unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder()
try
{
var done = false
while (!done)
{
val tag = input.readTag()
when (tag) {
0 -> done = true
10 -> {
if (mutable_bitField0_ and 0x00000001 == 0)
{
translation_ = java.util.ArrayList()
mutable_bitField0_ = mutable_bitField0_ or 0x00000001
}
translation_!!.add(
input.readMessage(com.example.delhitransit.GtfsRealtime.TranslatedString.Translation.PARSER, extensionRegistry))
}
else -> {
if (!parseUnknownField(
input, unknownFields, extensionRegistry, tag))
{
done = true
}
}
}
}
}
catch (e:com.google.protobuf.InvalidProtocolBufferException) {
throw e.setUnfinishedMessage(this)
}
catch (e:java.io.IOException) {
throw com.google.protobuf.InvalidProtocolBufferException(
e).setUnfinishedMessage(this)
}
finally
{
if (mutable_bitField0_ and 0x00000001 != 0)
{
translation_ = java.util.Collections.unmodifiableList(translation_!!)
}
this.unknownFields = unknownFields.build()
makeExtensionsImmutable()
}
}

override fun internalGetFieldAccessorTable():com.google.protobuf.GeneratedMessageV3.FieldAccessorTable {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TranslatedString_fieldAccessorTable
.ensureFieldAccessorsInitialized(
com.example.delhitransit.GtfsRealtime.TranslatedString::class.java, com.example.delhitransit.GtfsRealtime.TranslatedString.Builder::class.java)
}

 interface TranslationOrBuilder:
 // @@protoc_insertion_point(interface_extends:com.example.delhitransit.TranslatedString.Translation)
                com.google.protobuf.GeneratedMessageV3.ExtendableMessageOrBuilder<Translation> {

/**
 * <pre>
 * A UTF-8 string containing the message.
</pre> *
 *
 * `required string text = 1;`
 */
             val text:java.lang.String

/**
 * <pre>
 * A UTF-8 string containing the message.
</pre> *
 *
 * `required string text = 1;`
 */
             val textBytes:com.google.protobuf.ByteString

/**
 * <pre>
 * BCP-47 language code. Can be omitted if the language is unknown or if
 * no i18n is done at all for the feed. At most one translation is
 * allowed to have an unspecified language tag.
</pre> *
 *
 * `optional string language = 2;`
 */
             val language:java.lang.String

/**
 * <pre>
 * BCP-47 language code. Can be omitted if the language is unknown or if
 * no i18n is done at all for the feed. At most one translation is
 * allowed to have an unspecified language tag.
</pre> *
 *
 * `optional string language = 2;`
 */
             val languageBytes:com.google.protobuf.ByteString

/**
 * <pre>
 * A UTF-8 string containing the message.
</pre> *
 *
 * `required string text = 1;`
 */
             fun hasText():Boolean

/**
 * <pre>
 * BCP-47 language code. Can be omitted if the language is unknown or if
 * no i18n is done at all for the feed. At most one translation is
 * allowed to have an unspecified language tag.
</pre> *
 *
 * `optional string language = 2;`
 */
             fun hasLanguage():Boolean
}

/**
 * Protobuf type `com.example.delhitransit.TranslatedString.Translation`
 */
         class Translation:com.google.protobuf.GeneratedMessageV3.ExtendableMessage<Translation>,
 // @@protoc_insertion_point(message_implements:com.example.delhitransit.TranslatedString.Translation)
                TranslationOrBuilder {

private var bitField0_:Int = 0
@Volatile private var text_:Any? = null

/**
 * <pre>
 * A UTF-8 string containing the message.
</pre> *
 *
 * `required string text = 1;`
 */
            override val text:java.lang.String
get() {
val ref = text_
if (ref is java.lang.String)
{
return ref
}
else
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
text_ = s
}
return s
}
}

/**
 * <pre>
 * A UTF-8 string containing the message.
</pre> *
 *
 * `required string text = 1;`
 */
            override val textBytes:com.google.protobuf.ByteString
get() {
val ref = text_
if (ref is java.lang.String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
text_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}
@Volatile private var language_:Any? = null

/**
 * <pre>
 * BCP-47 language code. Can be omitted if the language is unknown or if
 * no i18n is done at all for the feed. At most one translation is
 * allowed to have an unspecified language tag.
</pre> *
 *
 * `optional string language = 2;`
 */
            override val language:java.lang.String
get() {
val ref = language_
if (ref is java.lang.String)
{
return ref
}
else
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
language_ = s
}
return s
}
}

/**
 * <pre>
 * BCP-47 language code. Can be omitted if the language is unknown or if
 * no i18n is done at all for the feed. At most one translation is
 * allowed to have an unspecified language tag.
</pre> *
 *
 * `optional string language = 2;`
 */
            override val languageBytes:com.google.protobuf.ByteString
get() {
val ref = language_
if (ref is java.lang.String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
language_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}

private var memoizedIsInitialized:Byte = -1

 // Use Translation.newBuilder() to construct.
            private constructor(builder:com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.example.delhitransit.GtfsRealtime.TranslatedString.Translation, *>) : super(builder) {}

private constructor() {
text_ = ""
language_ = ""
}

 //            @java.lang.Override
 //            @SuppressWarnings({"unused"})
 //            protected java.lang.Object newInstance(
 //                    UnusedPrivateParameter unused) {
 //                return new Translation();
 //            }

            override fun getUnknownFields():com.google.protobuf.UnknownFieldSet {
return this.unknownFields
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
private constructor(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite?) : this() {
if (extensionRegistry == null)
{
throw java.lang.NullPointerException()
}
val mutable_bitField0_ = 0
val unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder()
try
{
var done = false
while (!done)
{
val tag = input.readTag()
when (tag) {
0 -> done = true
10 -> {
val bs = input.readBytes()
bitField0_ = bitField0_ or 0x00000001
text_ = bs
}
18 -> {
val bs = input.readBytes()
bitField0_ = bitField0_ or 0x00000002
language_ = bs
}
else -> {
if (!parseUnknownField(
input, unknownFields, extensionRegistry, tag))
{
done = true
}
}
}
}
}
catch (e:com.google.protobuf.InvalidProtocolBufferException) {
throw e.setUnfinishedMessage(this)
}
catch (e:java.io.IOException) {
throw com.google.protobuf.InvalidProtocolBufferException(
e).setUnfinishedMessage(this)
}
finally
{
this.unknownFields = unknownFields.build()
makeExtensionsImmutable()
}
}

override fun internalGetFieldAccessorTable():com.google.protobuf.GeneratedMessageV3.FieldAccessorTable {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TranslatedString_Translation_fieldAccessorTable
.ensureFieldAccessorsInitialized(
com.example.delhitransit.GtfsRealtime.TranslatedString.Translation::class.java, com.example.delhitransit.GtfsRealtime.TranslatedString.Translation.Builder::class.java)
}

/**
 * <pre>
 * A UTF-8 string containing the message.
</pre> *
 *
 * `required string text = 1;`
 */
            override fun hasText():Boolean {
return bitField0_ and 0x00000001 != 0
}

/**
 * <pre>
 * BCP-47 language code. Can be omitted if the language is unknown or if
 * no i18n is done at all for the feed. At most one translation is
 * allowed to have an unspecified language tag.
</pre> *
 *
 * `optional string language = 2;`
 */
            override fun hasLanguage():Boolean {
return bitField0_ and 0x00000002 != 0
}

override fun isInitialized():Boolean {
val isInitialized = memoizedIsInitialized
if (isInitialized.toInt() == 1) return true
if (isInitialized.toInt() == 0) return false

if (!hasText())
{
memoizedIsInitialized = 0
return false
}
if (!extensionsAreInitialized())
{
memoizedIsInitialized = 0
return false
}
memoizedIsInitialized = 1
return true
}

@Throws(java.io.IOException::class)
override fun writeTo(output:com.google.protobuf.CodedOutputStream) {
val extensionWriter = newExtensionWriter()
if (bitField0_ and 0x00000001 != 0)
{
com.google.protobuf.GeneratedMessageV3.writeString(output, 1, text_)
}
if (bitField0_ and 0x00000002 != 0)
{
com.google.protobuf.GeneratedMessageV3.writeString(output, 2, language_)
}
extensionWriter.writeUntil(2000, output)
unknownFields.writeTo(output)
}

override fun getSerializedSize():Int {
var size = memoizedSize
if (size != -1) return size

size = 0
if (bitField0_ and 0x00000001 != 0)
{
size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, text_!!)
}
if (bitField0_ and 0x00000002 != 0)
{
size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, language_!!)
}
size += extensionsSerializedSize()
size += unknownFields.serializedSize
memoizedSize = size
return size
}

override fun equals(obj:Any?):Boolean {
if (obj === this)
{
return true
}
if (obj !is com.example.delhitransit.GtfsRealtime.TranslatedString.Translation)
{
return super.equals(obj)
}
val other = obj as com.example.delhitransit.GtfsRealtime.TranslatedString.Translation?

if (hasText() != other!!.hasText()) return false
if (hasText())
{
if (text != other.text)
return false
}
if (hasLanguage() != other.hasLanguage()) return false
if (hasLanguage())
{
if (language != other.language)
return false
}
if (unknownFields != other.unknownFields) return false
return if (extensionFields != other.extensionFields) false else true
}

override fun hashCode():Int {
if (memoizedHashCode != 0)
{
return memoizedHashCode
}
var hash = 41
hash = 19 * hash + descriptor.hashCode()
if (hasText())
{
hash = 37 * hash + TEXT_FIELD_NUMBER
hash = 53 * hash + text.hashCode()
}
if (hasLanguage())
{
hash = 37 * hash + LANGUAGE_FIELD_NUMBER
hash = 53 * hash + language.hashCode()
}
hash = AbstractMessage.hashFields(hash, extensionFields)
hash = 29 * hash + unknownFields.hashCode()
memoizedHashCode = hash
return hash
}

override fun newBuilderForType():Builder {
return newBuilder()
}

override fun toBuilder():Builder {
return if (this === defaultInstance)
Builder()
else
Builder().mergeFrom(this)
}

override fun newBuilderForType(
parent:com.google.protobuf.GeneratedMessageV3.BuilderParent):Builder {
return Builder(parent)
}

/**
 * Protobuf type `com.example.delhitransit.TranslatedString.Translation`
 */
             class Builder:com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.example.delhitransit.GtfsRealtime.TranslatedString.Translation, Builder>,
 // @@protoc_insertion_point(builder_implements:com.example.delhitransit.TranslatedString.Translation)
                    com.example.delhitransit.GtfsRealtime.TranslatedString.TranslationOrBuilder {

private var bitField0_:Int = 0

private var text_:Any? = ""

/**
 * <pre>
 * A UTF-8 string containing the message.
</pre> *
 *
 * `required string text = 1;`
 */
                override val text:java.lang.String
get() {
val ref = text_
if (ref !is java.lang.String)
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
text_ = s
}
return s
}
else
{
return ref
}
}

/**
 * <pre>
 * A UTF-8 string containing the message.
</pre> *
 *
 * `required string text = 1;`
 */
                override val textBytes:com.google.protobuf.ByteString
get() {
val ref = text_
if (ref is String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
text_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}

private var language_:Any? = ""

/**
 * <pre>
 * BCP-47 language code. Can be omitted if the language is unknown or if
 * no i18n is done at all for the feed. At most one translation is
 * allowed to have an unspecified language tag.
</pre> *
 *
 * `optional string language = 2;`
 */
                override val language:java.lang.String
get() {
val ref = language_
if (ref !is java.lang.String)
{
val bs = ref as com.google.protobuf.ByteString?
val s = bs!!.toStringUtf8()
if (bs.isValidUtf8)
{
language_ = s
}
return s
}
else
{
return ref
}
}

/**
 * <pre>
 * BCP-47 language code. Can be omitted if the language is unknown or if
 * no i18n is done at all for the feed. At most one translation is
 * allowed to have an unspecified language tag.
</pre> *
 *
 * `optional string language = 2;`
 */
                override val languageBytes:com.google.protobuf.ByteString
get() {
val ref = language_
if (ref is String)
{
val b = com.google.protobuf.ByteString.copyFromUtf8(
(ref as java.lang.String?)!!)
language_ = b
return b
}
else
{
return ref as com.google.protobuf.ByteString?
}
}

override fun internalGetFieldAccessorTable():com.google.protobuf.GeneratedMessageV3.FieldAccessorTable {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TranslatedString_Translation_fieldAccessorTable
.ensureFieldAccessorsInitialized(
com.example.delhitransit.GtfsRealtime.TranslatedString.Translation::class.java, com.example.delhitransit.GtfsRealtime.TranslatedString.Translation.Builder::class.java)
}

 // Construct using com.example.delhitransit.GtfsRealtime.TranslatedString.Translation.newBuilder()
                private constructor() {
maybeForceBuilderInitialization()
}

private constructor(
parent:com.google.protobuf.GeneratedMessageV3.BuilderParent) : super(parent) {
maybeForceBuilderInitialization()
}

private fun maybeForceBuilderInitialization() {
if (com.google.protobuf.GeneratedMessageV3
.alwaysUseFieldBuilders)
{}
}

override fun clear():Builder {
super.clear()
text_ = ""
bitField0_ = bitField0_ and 0x00000001.inv()
language_ = ""
bitField0_ = bitField0_ and 0x00000002.inv()
return this
}

override fun getDescriptorForType():com.google.protobuf.Descriptors.Descriptor {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TranslatedString_Translation_descriptor
}

override fun getDefaultInstanceForType():com.example.delhitransit.GtfsRealtime.TranslatedString.Translation {
return com.example.delhitransit.GtfsRealtime.TranslatedString.Translation.defaultInstance
}

override fun build():com.example.delhitransit.GtfsRealtime.TranslatedString.Translation {
val result = buildPartial()
if (!result.isInitialized)
{
throw AbstractMessage.Builder.newUninitializedMessageException(result)
}
return result
}

override fun buildPartial():com.example.delhitransit.GtfsRealtime.TranslatedString.Translation {
val result = com.example.delhitransit.GtfsRealtime.TranslatedString.Translation(this)
val from_bitField0_ = bitField0_
var to_bitField0_ = 0
if (from_bitField0_ and 0x00000001 != 0)
{
to_bitField0_ = to_bitField0_ or 0x00000001
}
result.text_ = text_
if (from_bitField0_ and 0x00000002 != 0)
{
to_bitField0_ = to_bitField0_ or 0x00000002
}
result.language_ = language_
result.bitField0_ = to_bitField0_
onBuilt()
return result
}

override fun clone():Builder {
return super.clone()
}

override fun setField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
value:Any):Builder {
return super.setField(field, value)
}

override fun clearField(
field:com.google.protobuf.Descriptors.FieldDescriptor):Builder {
return super.clearField(field)
}

override fun clearOneof(
oneof:com.google.protobuf.Descriptors.OneofDescriptor):Builder {
return super.clearOneof(oneof)
}

override fun setRepeatedField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
index:Int, value:Any):Builder {
return super.setRepeatedField(field, index, value)
}

override fun addRepeatedField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
value:Any):Builder {
return super.addRepeatedField(field, value)
}

override fun <Type> setExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.TranslatedString.Translation, Type>,
value:Type):Builder {
return super.setExtension(extension, value)
}

override fun <Type> setExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.TranslatedString.Translation, List<Type>>,
index:Int, value:Type):Builder {
return super.setExtension(extension, index, value)
}

override fun <Type> addExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.TranslatedString.Translation, List<Type>>,
value:Type):Builder {
return super.addExtension(extension, value)
}

override fun <Type> clearExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.TranslatedString.Translation, *>):Builder {
return super.clearExtension<Any>(extension)
}

override fun mergeFrom(other:com.google.protobuf.Message):Builder {
if (other is com.example.delhitransit.GtfsRealtime.TranslatedString.Translation)
{
return mergeFrom(other)
}
else
{
super.mergeFrom(other)
return this
}
}

 fun mergeFrom(other:com.example.delhitransit.GtfsRealtime.TranslatedString.Translation):Builder {
if (other === com.example.delhitransit.GtfsRealtime.TranslatedString.Translation.defaultInstance)
return this
if (other.hasText())
{
bitField0_ = bitField0_ or 0x00000001
text_ = other.text_
onChanged()
}
if (other.hasLanguage())
{
bitField0_ = bitField0_ or 0x00000002
language_ = other.language_
onChanged()
}
this.mergeExtensionFields(other)
this.mergeUnknownFields(other.unknownFields)
onChanged()
return this
}

override fun isInitialized():Boolean {
if (!hasText())
{
return false
}
return if (!extensionsAreInitialized()) {
            false
        } else true
}

@Throws(java.io.IOException::class)
override fun mergeFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):Builder {
var parsedMessage:com.example.delhitransit.GtfsRealtime.TranslatedString.Translation? = null
try
{
parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry)
}
catch (e:com.google.protobuf.InvalidProtocolBufferException) {
parsedMessage = e.unfinishedMessage as com.example.delhitransit.GtfsRealtime.TranslatedString.Translation
throw e.unwrapIOException()
}
finally
{
if (parsedMessage != null)
{
mergeFrom(parsedMessage)
}
}
return this
}

/**
 * <pre>
 * A UTF-8 string containing the message.
</pre> *
 *
 * `required string text = 1;`
 */
                override fun hasText():Boolean {
return bitField0_ and 0x00000001 != 0
}

/**
 * <pre>
 * A UTF-8 string containing the message.
</pre> *
 *
 * `required string text = 1;`
 */
                 fun setText(
value:java.lang.String?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000001
text_ = value
onChanged()
return this
}

/**
 * <pre>
 * A UTF-8 string containing the message.
</pre> *
 *
 * `required string text = 1;`
 */
                 fun clearText():Builder {
bitField0_ = bitField0_ and 0x00000001.inv()
text_ = defaultInstance.text
onChanged()
return this
}

/**
 * <pre>
 * A UTF-8 string containing the message.
</pre> *
 *
 * `required string text = 1;`
 */
                 fun setTextBytes(
value:com.google.protobuf.ByteString?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000001
text_ = value
onChanged()
return this
}

/**
 * <pre>
 * BCP-47 language code. Can be omitted if the language is unknown or if
 * no i18n is done at all for the feed. At most one translation is
 * allowed to have an unspecified language tag.
</pre> *
 *
 * `optional string language = 2;`
 */
                override fun hasLanguage():Boolean {
return bitField0_ and 0x00000002 != 0
}

/**
 * <pre>
 * BCP-47 language code. Can be omitted if the language is unknown or if
 * no i18n is done at all for the feed. At most one translation is
 * allowed to have an unspecified language tag.
</pre> *
 *
 * `optional string language = 2;`
 */
                 fun setLanguage(
value:java.lang.String?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000002
language_ = value
onChanged()
return this
}

/**
 * <pre>
 * BCP-47 language code. Can be omitted if the language is unknown or if
 * no i18n is done at all for the feed. At most one translation is
 * allowed to have an unspecified language tag.
</pre> *
 *
 * `optional string language = 2;`
 */
                 fun clearLanguage():Builder {
bitField0_ = bitField0_ and 0x00000002.inv()
language_ = defaultInstance.language
onChanged()
return this
}

/**
 * <pre>
 * BCP-47 language code. Can be omitted if the language is unknown or if
 * no i18n is done at all for the feed. At most one translation is
 * allowed to have an unspecified language tag.
</pre> *
 *
 * `optional string language = 2;`
 */
                 fun setLanguageBytes(
value:com.google.protobuf.ByteString?):Builder {
if (value == null)
{
throw NullPointerException()
}
bitField0_ = bitField0_ or 0x00000002
language_ = value
onChanged()
return this
}

override fun setUnknownFields(
unknownFields:com.google.protobuf.UnknownFieldSet):Builder {
return super.setUnknownFields(unknownFields)
}

override fun mergeUnknownFields(
unknownFields:com.google.protobuf.UnknownFieldSet):Builder {
return super.mergeUnknownFields(unknownFields)
}

companion object {
 val descriptor:com.google.protobuf.Descriptors.Descriptor
get() =com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TranslatedString_Translation_descriptor
}


 // @@protoc_insertion_point(builder_scope:com.example.delhitransit.TranslatedString.Translation)
            }

override fun getParserForType():com.google.protobuf.Parser<Translation> {
return PARSER
}

override fun getDefaultInstanceForType():com.example.delhitransit.GtfsRealtime.TranslatedString.Translation {
return defaultInstance
}

companion object {
private val serialVersionUID = 0L

 val descriptor:com.google.protobuf.Descriptors.Descriptor
get() =com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TranslatedString_Translation_descriptor
 val TEXT_FIELD_NUMBER = 1

 val LANGUAGE_FIELD_NUMBER = 2

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:java.nio.ByteBuffer):com.example.delhitransit.GtfsRealtime.TranslatedString.Translation {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:java.nio.ByteBuffer,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TranslatedString.Translation {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:com.google.protobuf.ByteString):com.example.delhitransit.GtfsRealtime.TranslatedString.Translation {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:com.google.protobuf.ByteString,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TranslatedString.Translation {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(data:ByteArray):com.example.delhitransit.GtfsRealtime.TranslatedString.Translation {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:ByteArray,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TranslatedString.Translation {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseFrom(input:java.io.InputStream):com.example.delhitransit.GtfsRealtime.TranslatedString.Translation {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:java.io.InputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TranslatedString.Translation {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseDelimitedFrom(input:java.io.InputStream):com.example.delhitransit.GtfsRealtime.TranslatedString.Translation {
return com.google.protobuf.GeneratedMessageV3
.parseDelimitedWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseDelimitedFrom(
input:java.io.InputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TranslatedString.Translation {
return com.google.protobuf.GeneratedMessageV3
.parseDelimitedWithIOException(PARSER, input, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:com.google.protobuf.CodedInputStream):com.example.delhitransit.GtfsRealtime.TranslatedString.Translation {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TranslatedString.Translation {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input, extensionRegistry)
}

 fun newBuilder():Builder {
return defaultInstance.toBuilder()
}

 fun newBuilder(prototype:com.example.delhitransit.GtfsRealtime.TranslatedString.Translation):Builder {
return defaultInstance.toBuilder().mergeFrom(prototype)
}

 // @@protoc_insertion_point(class_scope:com.example.delhitransit.TranslatedString.Translation)
             val defaultInstance:com.example.delhitransit.GtfsRealtime.TranslatedString.Translation

init{
defaultInstance = com.example.delhitransit.GtfsRealtime.TranslatedString.Translation()
}

@Deprecated("")
 val PARSER:com.google.protobuf.Parser<Translation> = object:com.google.protobuf.AbstractParser<Translation>() {
@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
override fun parsePartialFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):Translation {
return Translation(input, extensionRegistry)
}
}

 fun parser():com.google.protobuf.Parser<Translation> {
return PARSER
}
}

}

/**
 * <pre>
 * At least one translation must be provided.
</pre> *
 *
 * `repeated .com.example.delhitransit.TranslatedString.Translation translation = 1;`
 */
        override fun getTranslation(index:Int):com.example.delhitransit.GtfsRealtime.TranslatedString.Translation {
return translation_!![index]
}

/**
 * <pre>
 * At least one translation must be provided.
</pre> *
 *
 * `repeated .com.example.delhitransit.TranslatedString.Translation translation = 1;`
 */
        override fun getTranslationOrBuilder(
index:Int):com.example.delhitransit.GtfsRealtime.TranslatedString.TranslationOrBuilder {
return translation_!![index]
}

override fun isInitialized():Boolean {
val isInitialized = memoizedIsInitialized
if (isInitialized.toInt() == 1) return true
if (isInitialized.toInt() == 0) return false

for (i in 0 until translationCount)
{
if (!getTranslation(i).isInitialized)
{
memoizedIsInitialized = 0
return false
}
}
if (!extensionsAreInitialized())
{
memoizedIsInitialized = 0
return false
}
memoizedIsInitialized = 1
return true
}

@Throws(java.io.IOException::class)
override fun writeTo(output:com.google.protobuf.CodedOutputStream) {
val extensionWriter = newExtensionWriter()
for (i in translation_!!.indices)
{
output.writeMessage(1, translation_!![i])
}
extensionWriter.writeUntil(2000, output)
unknownFields.writeTo(output)
}

override fun getSerializedSize():Int {
var size = memoizedSize
if (size != -1) return size

size = 0
for (i in translation_!!.indices)
{
size += com.google.protobuf.CodedOutputStream
.computeMessageSize(1, translation_!![i])
}
size += extensionsSerializedSize()
size += unknownFields.serializedSize
memoizedSize = size
return size
}

override fun equals(obj:Any?):Boolean {
if (obj === this)
{
return true
}
if (obj !is com.example.delhitransit.GtfsRealtime.TranslatedString)
{
return super.equals(obj)
}
val other = obj as com.example.delhitransit.GtfsRealtime.TranslatedString?

if (translationList != other!!.translationList)
return false
if (unknownFields != other.unknownFields) return false
return if (extensionFields != other.extensionFields) false else true
}

override fun hashCode():Int {
if (memoizedHashCode != 0)
{
return memoizedHashCode
}
var hash = 41
hash = 19 * hash + descriptor.hashCode()
if (translationCount > 0)
{
hash = 37 * hash + TRANSLATION_FIELD_NUMBER
hash = 53 * hash + translationList!!.hashCode()
}
hash = AbstractMessage.hashFields(hash, extensionFields)
hash = 29 * hash + unknownFields.hashCode()
memoizedHashCode = hash
return hash
}

override fun newBuilderForType():Builder {
return newBuilder()
}

override fun toBuilder():Builder {
return if (this === defaultInstance)
Builder()
else
Builder().mergeFrom(this)
}

override fun newBuilderForType(
parent:com.google.protobuf.GeneratedMessageV3.BuilderParent):Builder {
return Builder(parent)
}

/**
 * <pre>
 * An internationalized message containing per-language versions of a snippet of
 * text or a URL.
 * One of the strings from a message will be picked up. The resolution proceeds
 * as follows:
 * 1. If the UI language matches the language code of a translation,
 * the first matching translation is picked.
 * 2. If a default UI language (e.g., English) matches the language code of a
 * translation, the first matching translation is picked.
 * 3. If some translation has an unspecified language code, that translation is
 * picked.
</pre> *
 *
 *
 * Protobuf type `com.example.delhitransit.TranslatedString`
 */
         class Builder:com.google.protobuf.GeneratedMessageV3.ExtendableBuilder<com.example.delhitransit.GtfsRealtime.TranslatedString, Builder>,
 // @@protoc_insertion_point(builder_implements:com.example.delhitransit.TranslatedString)
                com.example.delhitransit.GtfsRealtime.TranslatedStringOrBuilder {

private var bitField0_:Int = 0

private var translation_:MutableList<com.example.delhitransit.GtfsRealtime.TranslatedString.Translation>? = emptyList<com.example.delhitransit.GtfsRealtime.TranslatedString.Translation>()

private var translationBuilder_:com.google.protobuf.RepeatedFieldBuilderV3<com.example.delhitransit.GtfsRealtime.TranslatedString.Translation, com.example.delhitransit.GtfsRealtime.TranslatedString.Translation.Builder, com.example.delhitransit.GtfsRealtime.TranslatedString.TranslationOrBuilder>? = null

/**
 * <pre>
 * At least one translation must be provided.
</pre> *
 *
 * `repeated .com.example.delhitransit.TranslatedString.Translation translation = 1;`
 */
            override val translationList:List<com.example.delhitransit.GtfsRealtime.TranslatedString.Translation>
get() =if (translationBuilder_ == null) {
            java.util.Collections.unmodifiableList(translation_!!)
        } else {
            translationBuilder_!!.messageList
        }

/**
 * <pre>
 * At least one translation must be provided.
</pre> *
 *
 * `repeated .com.example.delhitransit.TranslatedString.Translation translation = 1;`
 */
            override val translationCount:Int
get() =if (translationBuilder_ == null) {
            translation_!!.size
        } else {
            translationBuilder_!!.count
        }

/**
 * <pre>
 * At least one translation must be provided.
</pre> *
 *
 * `repeated .com.example.delhitransit.TranslatedString.Translation translation = 1;`
 */
            override val translationOrBuilderList:List< com.example.delhitransit.GtfsRealtime.TranslatedString.TranslationOrBuilder>
get() =if (translationBuilder_ != null) {
            translationBuilder_!!.messageOrBuilderList
        } else {
            java.util.Collections.unmodifiableList(translation_!!)
        }

/**
 * <pre>
 * At least one translation must be provided.
</pre> *
 *
 * `repeated .com.example.delhitransit.TranslatedString.Translation translation = 1;`
 */
             val translationBuilderList:List<com.example.delhitransit.GtfsRealtime.TranslatedString.Translation.Builder>
get() =translationFieldBuilder.builderList

private val translationFieldBuilder:com.google.protobuf.RepeatedFieldBuilderV3<com.example.delhitransit.GtfsRealtime.TranslatedString.Translation, com.example.delhitransit.GtfsRealtime.TranslatedString.Translation.Builder, com.example.delhitransit.GtfsRealtime.TranslatedString.TranslationOrBuilder>
get() {
if (translationBuilder_ == null)
{
translationBuilder_ = com.google.protobuf.RepeatedFieldBuilderV3(
translation_,
bitField0_ and 0x00000001 != 0,
parentForChildren,
isClean)
translation_ = null
}
return translationBuilder_
}

override fun internalGetFieldAccessorTable():com.google.protobuf.GeneratedMessageV3.FieldAccessorTable {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TranslatedString_fieldAccessorTable
.ensureFieldAccessorsInitialized(
com.example.delhitransit.GtfsRealtime.TranslatedString::class.java, com.example.delhitransit.GtfsRealtime.TranslatedString.Builder::class.java)
}

 // Construct using com.example.delhitransit.GtfsRealtime.TranslatedString.newBuilder()
            private constructor() {
maybeForceBuilderInitialization()
}

private constructor(
parent:com.google.protobuf.GeneratedMessageV3.BuilderParent) : super(parent) {
maybeForceBuilderInitialization()
}

private fun maybeForceBuilderInitialization() {
if (com.google.protobuf.GeneratedMessageV3
.alwaysUseFieldBuilders)
{
translationFieldBuilder
}
}

override fun clear():Builder {
super.clear()
if (translationBuilder_ == null)
{
translation_ = emptyList<Translation>()
bitField0_ = bitField0_ and 0x00000001.inv()
}
else
{
translationBuilder_!!.clear()
}
return this
}

override fun getDescriptorForType():com.google.protobuf.Descriptors.Descriptor {
return com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TranslatedString_descriptor
}

override fun getDefaultInstanceForType():com.example.delhitransit.GtfsRealtime.TranslatedString {
return com.example.delhitransit.GtfsRealtime.TranslatedString.defaultInstance
}

override fun build():com.example.delhitransit.GtfsRealtime.TranslatedString {
val result = buildPartial()
if (!result.isInitialized)
{
throw AbstractMessage.Builder.newUninitializedMessageException(result)
}
return result
}

override fun buildPartial():com.example.delhitransit.GtfsRealtime.TranslatedString {
val result = com.example.delhitransit.GtfsRealtime.TranslatedString(this)
val from_bitField0_ = bitField0_
if (translationBuilder_ == null)
{
if (bitField0_ and 0x00000001 != 0)
{
translation_ = java.util.Collections.unmodifiableList(translation_!!)
bitField0_ = bitField0_ and 0x00000001.inv()
}
result.translation_ = translation_
}
else
{
result.translation_ = translationBuilder_!!.build()
}
onBuilt()
return result
}

override fun clone():Builder {
return super.clone()
}

override fun setField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
value:Any):Builder {
return super.setField(field, value)
}

override fun clearField(
field:com.google.protobuf.Descriptors.FieldDescriptor):Builder {
return super.clearField(field)
}

override fun clearOneof(
oneof:com.google.protobuf.Descriptors.OneofDescriptor):Builder {
return super.clearOneof(oneof)
}

override fun setRepeatedField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
index:Int, value:Any):Builder {
return super.setRepeatedField(field, index, value)
}

override fun addRepeatedField(
field:com.google.protobuf.Descriptors.FieldDescriptor,
value:Any):Builder {
return super.addRepeatedField(field, value)
}

override fun <Type> setExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.TranslatedString, Type>,
value:Type):Builder {
return super.setExtension(extension, value)
}

override fun <Type> setExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.TranslatedString, List<Type>>,
index:Int, value:Type):Builder {
return super.setExtension(extension, index, value)
}

override fun <Type> addExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.TranslatedString, List<Type>>,
value:Type):Builder {
return super.addExtension(extension, value)
}

override fun <Type> clearExtension(
extension:com.google.protobuf.GeneratedMessage.GeneratedExtension<com.example.delhitransit.GtfsRealtime.TranslatedString, *>):Builder {
return super.clearExtension<Any>(extension)
}

override fun mergeFrom(other:com.google.protobuf.Message):Builder {
if (other is com.example.delhitransit.GtfsRealtime.TranslatedString)
{
return mergeFrom(other)
}
else
{
super.mergeFrom(other)
return this
}
}

 fun mergeFrom(other:com.example.delhitransit.GtfsRealtime.TranslatedString?):Builder {
if (other === com.example.delhitransit.GtfsRealtime.TranslatedString.defaultInstance)
return this
if (translationBuilder_ == null)
{
if (!other!!.translation_!!.isEmpty())
{
if (translation_!!.isEmpty())
{
translation_ = other.translation_
bitField0_ = bitField0_ and 0x00000001.inv()
}
else
{
ensureTranslationIsMutable()
translation_!!.addAll(other.translation_!!)
}
onChanged()
}
}
else
{
if (!other!!.translation_!!.isEmpty())
{
if (translationBuilder_!!.isEmpty)
{
translationBuilder_!!.dispose()
translationBuilder_ = null
translation_ = other.translation_
bitField0_ = bitField0_ and 0x00000001.inv()
translationBuilder_ = if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders)
translationFieldBuilder
else
null
}
else
{
translationBuilder_!!.addAllMessages(other.translation_!!)
}
}
}
this.mergeExtensionFields(other)
this.mergeUnknownFields(other.unknownFields)
onChanged()
return this
}

override fun isInitialized():Boolean {
for (i in 0 until translationCount)
{
if (!getTranslation(i).isInitialized)
{
return false
}
}
return if (!extensionsAreInitialized()) {
            false
        } else true
}

@Throws(java.io.IOException::class)
override fun mergeFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):Builder {
var parsedMessage:com.example.delhitransit.GtfsRealtime.TranslatedString? = null
try
{
parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry)
}
catch (e:com.google.protobuf.InvalidProtocolBufferException) {
parsedMessage = e.unfinishedMessage as com.example.delhitransit.GtfsRealtime.TranslatedString
throw e.unwrapIOException()
}
finally
{
if (parsedMessage != null)
{
mergeFrom(parsedMessage)
}
}
return this
}

private fun ensureTranslationIsMutable() {
if (bitField0_ and 0x00000001 == 0)
{
translation_ = java.util.ArrayList(translation_!!)
bitField0_ = bitField0_ or 0x00000001
}
}

/**
 * <pre>
 * At least one translation must be provided.
</pre> *
 *
 * `repeated .com.example.delhitransit.TranslatedString.Translation translation = 1;`
 */
            override fun getTranslation(index:Int):com.example.delhitransit.GtfsRealtime.TranslatedString.Translation {
return if (translationBuilder_ == null) {
            translation_!![index]
        } else {
            translationBuilder_!!.getMessage(index)
        }
}

/**
 * <pre>
 * At least one translation must be provided.
</pre> *
 *
 * `repeated .com.example.delhitransit.TranslatedString.Translation translation = 1;`
 */
             fun setTranslation(
index:Int, value:com.example.delhitransit.GtfsRealtime.TranslatedString.Translation?):Builder {
if (translationBuilder_ == null)
{
if (value == null)
{
throw NullPointerException()
}
ensureTranslationIsMutable()
translation_!![index] = value
onChanged()
}
else
{
translationBuilder_!!.setMessage(index, value!!)
}
return this
}

/**
 * <pre>
 * At least one translation must be provided.
</pre> *
 *
 * `repeated .com.example.delhitransit.TranslatedString.Translation translation = 1;`
 */
             fun setTranslation(
index:Int, builderForValue:com.example.delhitransit.GtfsRealtime.TranslatedString.Translation.Builder):Builder {
if (translationBuilder_ == null)
{
ensureTranslationIsMutable()
translation_!![index] = builderForValue.build()
onChanged()
}
else
{
translationBuilder_!!.setMessage(index, builderForValue.build())
}
return this
}

/**
 * <pre>
 * At least one translation must be provided.
</pre> *
 *
 * `repeated .com.example.delhitransit.TranslatedString.Translation translation = 1;`
 */
             fun addTranslation(value:com.example.delhitransit.GtfsRealtime.TranslatedString.Translation?):Builder {
if (translationBuilder_ == null)
{
if (value == null)
{
throw NullPointerException()
}
ensureTranslationIsMutable()
translation_!!.add(value)
onChanged()
}
else
{
translationBuilder_!!.addMessage(value!!)
}
return this
}

/**
 * <pre>
 * At least one translation must be provided.
</pre> *
 *
 * `repeated .com.example.delhitransit.TranslatedString.Translation translation = 1;`
 */
             fun addTranslation(
index:Int, value:com.example.delhitransit.GtfsRealtime.TranslatedString.Translation?):Builder {
if (translationBuilder_ == null)
{
if (value == null)
{
throw NullPointerException()
}
ensureTranslationIsMutable()
translation_!!.add(index, value)
onChanged()
}
else
{
translationBuilder_!!.addMessage(index, value!!)
}
return this
}

/**
 * <pre>
 * At least one translation must be provided.
</pre> *
 *
 * `repeated .com.example.delhitransit.TranslatedString.Translation translation = 1;`
 */
             fun addTranslation(
builderForValue:com.example.delhitransit.GtfsRealtime.TranslatedString.Translation.Builder):Builder {
if (translationBuilder_ == null)
{
ensureTranslationIsMutable()
translation_!!.add(builderForValue.build())
onChanged()
}
else
{
translationBuilder_!!.addMessage(builderForValue.build())
}
return this
}

/**
 * <pre>
 * At least one translation must be provided.
</pre> *
 *
 * `repeated .com.example.delhitransit.TranslatedString.Translation translation = 1;`
 */
             fun addTranslation(
index:Int, builderForValue:com.example.delhitransit.GtfsRealtime.TranslatedString.Translation.Builder):Builder {
if (translationBuilder_ == null)
{
ensureTranslationIsMutable()
translation_!!.add(index, builderForValue.build())
onChanged()
}
else
{
translationBuilder_!!.addMessage(index, builderForValue.build())
}
return this
}

/**
 * <pre>
 * At least one translation must be provided.
</pre> *
 *
 * `repeated .com.example.delhitransit.TranslatedString.Translation translation = 1;`
 */
             fun addAllTranslation(
values:Iterable< com.example.delhitransit.GtfsRealtime.TranslatedString.Translation>):Builder {
if (translationBuilder_ == null)
{
ensureTranslationIsMutable()
com.google.protobuf.AbstractMessageLite.Builder.addAll(
values, translation_!!)
onChanged()
}
else
{
translationBuilder_!!.addAllMessages(values)
}
return this
}

/**
 * <pre>
 * At least one translation must be provided.
</pre> *
 *
 * `repeated .com.example.delhitransit.TranslatedString.Translation translation = 1;`
 */
             fun clearTranslation():Builder {
if (translationBuilder_ == null)
{
translation_ = emptyList<Translation>()
bitField0_ = bitField0_ and 0x00000001.inv()
onChanged()
}
else
{
translationBuilder_!!.clear()
}
return this
}

/**
 * <pre>
 * At least one translation must be provided.
</pre> *
 *
 * `repeated .com.example.delhitransit.TranslatedString.Translation translation = 1;`
 */
             fun removeTranslation(index:Int):Builder {
if (translationBuilder_ == null)
{
ensureTranslationIsMutable()
translation_!!.removeAt(index)
onChanged()
}
else
{
translationBuilder_!!.remove(index)
}
return this
}

/**
 * <pre>
 * At least one translation must be provided.
</pre> *
 *
 * `repeated .com.example.delhitransit.TranslatedString.Translation translation = 1;`
 */
             fun getTranslationBuilder(
index:Int):com.example.delhitransit.GtfsRealtime.TranslatedString.Translation.Builder {
return translationFieldBuilder.getBuilder(index)
}

/**
 * <pre>
 * At least one translation must be provided.
</pre> *
 *
 * `repeated .com.example.delhitransit.TranslatedString.Translation translation = 1;`
 */
            override fun getTranslationOrBuilder(
index:Int):com.example.delhitransit.GtfsRealtime.TranslatedString.TranslationOrBuilder {
return if (translationBuilder_ == null) {
            translation_!![index]
        } else {
            translationBuilder_!!.getMessageOrBuilder(index)
        }
}

/**
 * <pre>
 * At least one translation must be provided.
</pre> *
 *
 * `repeated .com.example.delhitransit.TranslatedString.Translation translation = 1;`
 */
             fun addTranslationBuilder():com.example.delhitransit.GtfsRealtime.TranslatedString.Translation.Builder {
return translationFieldBuilder.addBuilder(
com.example.delhitransit.GtfsRealtime.TranslatedString.Translation.defaultInstance)
}

/**
 * <pre>
 * At least one translation must be provided.
</pre> *
 *
 * `repeated .com.example.delhitransit.TranslatedString.Translation translation = 1;`
 */
             fun addTranslationBuilder(
index:Int):com.example.delhitransit.GtfsRealtime.TranslatedString.Translation.Builder {
return translationFieldBuilder.addBuilder(
index, com.example.delhitransit.GtfsRealtime.TranslatedString.Translation.defaultInstance)
}

override fun setUnknownFields(
unknownFields:com.google.protobuf.UnknownFieldSet):Builder {
return super.setUnknownFields(unknownFields)
}

override fun mergeUnknownFields(
unknownFields:com.google.protobuf.UnknownFieldSet):Builder {
return super.mergeUnknownFields(unknownFields)
}

companion object {
 val descriptor:com.google.protobuf.Descriptors.Descriptor
get() =com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TranslatedString_descriptor
}


 // @@protoc_insertion_point(builder_scope:com.example.delhitransit.TranslatedString)
        }

override fun getParserForType():com.google.protobuf.Parser<TranslatedString> {
return PARSER
}

override fun getDefaultInstanceForType():com.example.delhitransit.GtfsRealtime.TranslatedString {
return defaultInstance
}

companion object {
private val serialVersionUID = 0L

 val descriptor:com.google.protobuf.Descriptors.Descriptor
get() =com.example.delhitransit.GtfsRealtime.internal_static_com_example_delhitransit_TranslatedString_descriptor

 val TRANSLATION_FIELD_NUMBER = 1

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:java.nio.ByteBuffer):com.example.delhitransit.GtfsRealtime.TranslatedString {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:java.nio.ByteBuffer,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TranslatedString {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:com.google.protobuf.ByteString):com.example.delhitransit.GtfsRealtime.TranslatedString {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:com.google.protobuf.ByteString,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TranslatedString {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(data:ByteArray):com.example.delhitransit.GtfsRealtime.TranslatedString {
return PARSER.parseFrom(data)
}

@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
 fun parseFrom(
data:ByteArray,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TranslatedString {
return PARSER.parseFrom(data, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseFrom(input:java.io.InputStream):com.example.delhitransit.GtfsRealtime.TranslatedString {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:java.io.InputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TranslatedString {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseDelimitedFrom(input:java.io.InputStream):com.example.delhitransit.GtfsRealtime.TranslatedString {
return com.google.protobuf.GeneratedMessageV3
.parseDelimitedWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseDelimitedFrom(
input:java.io.InputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TranslatedString {
return com.google.protobuf.GeneratedMessageV3
.parseDelimitedWithIOException(PARSER, input, extensionRegistry)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:com.google.protobuf.CodedInputStream):com.example.delhitransit.GtfsRealtime.TranslatedString {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input)
}

@Throws(java.io.IOException::class)
 fun parseFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):com.example.delhitransit.GtfsRealtime.TranslatedString {
return com.google.protobuf.GeneratedMessageV3
.parseWithIOException(PARSER, input, extensionRegistry)
}

 fun newBuilder():Builder {
return defaultInstance.toBuilder()
}

 fun newBuilder(prototype:com.example.delhitransit.GtfsRealtime.TranslatedString):Builder {
return defaultInstance.toBuilder().mergeFrom(prototype)
}

 // @@protoc_insertion_point(class_scope:com.example.delhitransit.TranslatedString)
         val defaultInstance:com.example.delhitransit.GtfsRealtime.TranslatedString

init{
defaultInstance = com.example.delhitransit.GtfsRealtime.TranslatedString()
}

@Deprecated("")
 val PARSER:com.google.protobuf.Parser<TranslatedString> = object:com.google.protobuf.AbstractParser<TranslatedString>() {
@Throws(com.google.protobuf.InvalidProtocolBufferException::class)
override fun parsePartialFrom(
input:com.google.protobuf.CodedInputStream,
extensionRegistry:com.google.protobuf.ExtensionRegistryLite):TranslatedString {
return TranslatedString(input, extensionRegistry)
}
}

 fun parser():com.google.protobuf.Parser<TranslatedString> {
return PARSER
}
}

}

init{
val descriptorData = arrayOf<java.lang.String>("\n\u0013gtfs-realtime.proto\u0012\u0018com.example.delhi" +
"transit\"\u0081\u0001\n\u000bFeedMessage\u00124\n\u0006header\u0018\u0001 \u0002(\u000b2" +
"$.com.example.delhitransit.FeedHeader\u00124\n" +
"\u0006entity\u0018\u0002 \u0003(\u000b2$.com.example.delhitransit" +
".FeedEntity*\u0006\u0008\u00e8\u0007\u0010\u00d0\u000f\"\u00d7\u0001\n\nFeedHeader\u0012\u001d\n\u0015gt" +
"fs_realtime_version\u0018\u0001 \u0002(\t\u0012Y\n\u000eincremental" +
"ity\u0018\u0002 \u0001(\u000e23.com.example.delhitransit.Fee" +
"dHeader.Incrementality:\u000cFULL_DATASET\u0012\u0011\n\t" +
"timestamp\u0018\u0003 \u0001(\u0004\"4\n\u000eIncrementality\u0012\u0010\n\u000cFUL" +
"L_DATASET\u0010\u0000\u0012\u0010\n\u000cDIFFERENTIAL\u0010\u0001*\u0006\u0008\u00e8\u0007\u0010\u00d0\u000f\"\u00e2\u0001" +
"\n\nFeedEntity\u0012\n\n\u0002id\u0018\u0001 \u0002(\t\u0012\u0019\n\nis_deleted\u0018\u0002" +
" \u0001(\u0008:\u0005false\u00129\n\u000btrip_update\u0018\u0003 \u0001(\u000b2$.com.e" +
"xample.delhitransit.TripUpdate\u0012:\n\u0007vehicl" +
"e\u0018\u0004 \u0001(\u000b2).com.example.delhitransit.Vehic" +
"lePosition\u0012.\n\u0005alert\u0018\u0005 \u0001(\u000b2\u001f.com.example." +
"delhitransit.Alert*\u0006\u0008\u00e8\u0007\u0010\u00d0\u000f\"\u00ca\u0005\n\nTripUpdat" +
"e\u00126\n\u0004trip\u0018\u0001 \u0002(\u000b2(.com.example.delhitrans" +
"it.TripDescriptor\u0012<\n\u0007vehicle\u0018\u0003 \u0001(\u000b2+.com" +
".example.delhitransit.VehicleDescriptor\u0012" +
"M\n\u0010stop_time_update\u0018\u0002 \u0003(\u000b23.com.example." +
"delhitransit.TripUpdate.StopTimeUpdate\u0012\u0011" +
"\n\ttimestamp\u0018\u0004 \u0001(\u0004\u0012\r\n\u0005delay\u0018\u0005 \u0001(\u0005\u001aI\n\rStop" +
"TimeEvent\u0012\r\n\u0005delay\u0018\u0001 \u0001(\u0005\u0012\u000c\n\u0004time\u0018\u0002 \u0001(\u0003\u0012\u0013" +
"\n\u000buncertainty\u0018\u0003 \u0001(\u0005*\u0006\u0008\u00e8\u0007\u0010\u00d0\u000f\u001a\u0081\u0003\n\u000eStopTime" +
"Update\u0012\u0015\n\rstop_sequence\u0018\u0001 \u0001(\r\u0012\u000f\n\u0007stop_id" +
"\u0018\u0004 \u0001(\t\u0012C\n\u0007arrival\u0018\u0002 \u0001(\u000b22.com.example.de" +
"lhitransit.TripUpdate.StopTimeEvent\u0012E\n\td" +
"eparture\u0018\u0003 \u0001(\u000b22.com.example.delhitransi" +
"t.TripUpdate.StopTimeEvent\u0012r\n\u0015schedule_r" +
"elationship\u0018\u0005 \u0001(\u000e2H.com.example.delhitra" +
"nsit.TripUpdate.StopTimeUpdate.ScheduleR" +
"elationship:\tSCHEDULED\"?\n\u0014ScheduleRelati" +
"onship\u0012\r\n\tSCHEDULED\u0010\u0000\u0012\u000b\n\u0007SKIPPED\u0010\u0001\u0012\u000b\n\u0007NO" +
"_DATA\u0010\u0002*\u0006\u0008\u00e8\u0007\u0010\u00d0\u000f*\u0006\u0008\u00e8\u0007\u0010\u00d0\u000f\"\u0090\u0007\n\u000fVehiclePosit" +
"ion\u00126\n\u0004trip\u0018\u0001 \u0001(\u000b2(.com.example.delhitra" +
"nsit.TripDescriptor\u0012<\n\u0007vehicle\u0018\u0008 \u0001(\u000b2+.c" +
"om.example.delhitransit.VehicleDescripto" +
"r\u00124\n\u0008position\u0018\u0002 \u0001(\u000b2\".com.example.delhit" +
"ransit.Position\u0012\u001d\n\u0015current_stop_sequence" +
"\u0018\u0003 \u0001(\r\u0012\u000f\n\u0007stop_id\u0018\u0007 \u0001(\t\u0012b\n\u000ecurrent_statu" +
"s\u0018\u0004 \u0001(\u000e2;.com.example.delhitransit.Vehic" +
"lePosition.VehicleStopStatus:\rIN_TRANSIT" +
"_TO\u0012\u0011\n\ttimestamp\u0018\u0005 \u0001(\u0004\u0012S\n\u0010congestion_lev" +
"el\u0018\u0006 \u0001(\u000e29.com.example.delhitransit.Vehi" +
"clePosition.CongestionLevel\u0012S\n\u0010occupancy" +
"_status\u0018\t \u0001(\u000e29.com.example.delhitransit" +
".VehiclePosition.OccupancyStatus\"G\n\u0011Vehi" +
"cleStopStatus\u0012\u000f\n\u000bINCOMING_AT\u0010\u0000\u0012\u000e\n\nSTOPPE" +
"D_AT\u0010\u0001\u0012\u0011\n\rIN_TRANSIT_TO\u0010\u0002\"}\n\u000fCongestionL" +
"evel\u0012\u001c\n\u0018UNKNOWN_CONGESTION_LEVEL\u0010\u0000\u0012\u0014\n\u0010RU" +
"NNING_SMOOTHLY\u0010\u0001\u0012\u000f\n\u000bSTOP_AND_GO\u0010\u0002\u0012\u000e\n\nCON" +
"GESTION\u0010\u0003\u0012\u0015\n\u0011SEVERE_CONGESTION\u0010\u0004\"\u00af\u0001\n\u000fOcc" +
"upancyStatus\u0012\t\n\u0005EMPTY\u0010\u0000\u0012\u0018\n\u0014MANY_SEATS_AV" +
"AILABLE\u0010\u0001\u0012\u0017\n\u0013FEW_SEATS_AVAILABLE\u0010\u0002\u0012\u0016\n\u0012ST" +
"ANDING_ROOM_ONLY\u0010\u0003\u0012\u001e\n\u001aCRUSHED_STANDING_R" +
"OOM_ONLY\u0010\u0004\u0012\u0008\n\u0004FULL\u0010\u0005\u0012\u001c\n\u0018NOT_ACCEPTING_PA" +
"SSENGERS\u0010\u0006*\u0006\u0008\u00e8\u0007\u0010\u00d0\u000f\"\u00ee\u0006\n\u0005Alert\u0012:\n\ractive_p" +
"eriod\u0018\u0001 \u0003(\u000b2#.com.example.delhitransit.T" +
"imeRange\u0012A\n\u000finformed_entity\u0018\u0005 \u0003(\u000b2(.com." +
"example.delhitransit.EntitySelector\u0012C\n\u0005c" +
"ause\u0018\u0006 \u0001(\u000e2%.com.example.delhitransit.Al" +
"ert.Cause:\rUNKNOWN_CAUSE\u0012F\n\u0006effect\u0018\u0007 \u0001(\u000e" +
"2&.com.example.delhitransit.Alert.Effect" +
":\u000eUNKNOWN_EFFECT\u00127\n\u0003url\u0018\u0008 \u0001(\u000b2*.com.exam" +
"ple.delhitransit.TranslatedString\u0012?\n\u000bhea" +
"der_text\u0018\n \u0001(\u000b2*.com.example.delhitransi" +
"t.TranslatedString\u0012D\n\u0010description_text\u0018\u000b" +
" \u0001(\u000b2*.com.example.delhitransit.Translat" +
"edString\"\u00d8\u0001\n\u0005Cause\u0012\u0011\n\rUNKNOWN_CAUSE\u0010\u0001\u0012\u000f\n" +
"\u000bOTHER_CAUSE\u0010\u0002\u0012\u0015\n\u0011TECHNICAL_PROBLEM\u0010\u0003\u0012\n\n" +
"\u0006STRIKE\u0010\u0004\u0012\u0011\n\rDEMONSTRATION\u0010\u0005\u0012\u000c\n\u0008ACCIDENT" +
"\u0010\u0006\u0012\u000b\n\u0007HOLIDAY\u0010\u0007\u0012\u000b\n\u0007WEATHER\u0010\u0008\u0012\u000f\n\u000bMAINTENA" +
"NCE\u0010\t\u0012\u0010\n\u000cCONSTRUCTION\u0010\n\u0012\u0013\n\u000fPOLICE_ACTIVI" +
"TY\u0010\u000b\u0012\u0015\n\u0011MEDICAL_EMERGENCY\u0010\u000c\"\u00b5\u0001\n\u0006Effect\u0012\u000e" +
"\n\nNO_SERVICE\u0010\u0001\u0012\u0013\n\u000fREDUCED_SERVICE\u0010\u0002\u0012\u0016\n\u0012S" +
"IGNIFICANT_DELAYS\u0010\u0003\u0012\n\n\u0006DETOUR\u0010\u0004\u0012\u0016\n\u0012ADDIT" +
"IONAL_SERVICE\u0010\u0005\u0012\u0014\n\u0010MODIFIED_SERVICE\u0010\u0006\u0012\u0010\n" +
"\u000cOTHER_EFFECT\u0010\u0007\u0012\u0012\n\u000eUNKNOWN_EFFECT\u0010\u0008\u0012\u000e\n\nS" +
"TOP_MOVED\u0010\t*\u0006\u0008\u00e8\u0007\u0010\u00d0\u000f\"/\n\tTimeRange\u0012\r\n\u0005star" +
"t\u0018\u0001 \u0001(\u0004\u0012\u000b\n\u0003end\u0018\u0002 \u0001(\u0004*\u0006\u0008\u00e8\u0007\u0010\u00d0\u000f\"i\n\u0008Position" +
"\u0012\u0010\n\u0008latitude\u0018\u0001 \u0002(\u0002\u0012\u0011\n\tlongitude\u0018\u0002 \u0002(\u0002\u0012\u000f\n" +
"\u0007bearing\u0018\u0003 \u0001(\u0002\u0012\u0010\n\u0008odometer\u0018\u0004 \u0001(\u0001\u0012\r\n\u0005spee" +
"d\u0018\u0005 \u0001(\u0002*\u0006\u0008\u00e8\u0007\u0010\u00d0\u000f\"\u00a8\u0002\n\u000eTripDescriptor\u0012\u000f\n\u0007tr" +
"ip_id\u0018\u0001 \u0001(\t\u0012\u0010\n\u0008route_id\u0018\u0005 \u0001(\t\u0012\u0014\n\u000cdirecti" +
"on_id\u0018\u0006 \u0001(\r\u0012\u0012\n\nstart_time\u0018\u0002 \u0001(\t\u0012\u0012\n\nstart" +
"_date\u0018\u0003 \u0001(\t\u0012\\\n\u0015schedule_relationship\u0018\u0004 \u0001" +
"(\u000e2=.com.example.delhitransit.TripDescri" +
"ptor.ScheduleRelationship\"O\n\u0014ScheduleRel" +
"ationship\u0012\r\n\tSCHEDULED\u0010\u0000\u0012\t\n\u0005ADDED\u0010\u0001\u0012\u000f\n\u000bU" +
"NSCHEDULED\u0010\u0002\u0012\u000c\n\u0008CANCELED\u0010\u0003*\u0006\u0008\u00e8\u0007\u0010\u00d0\u000f\"M\n\u0011Ve" +
"hicleDescriptor\u0012\n\n\u0002id\u0018\u0001 \u0001(\t\u0012\r\n\u0005label\u0018\u0002 \u0001" +
"(\t\u0012\u0015\n\rlicense_plate\u0018\u0003 \u0001(\t*\u0006\u0008\u00e8\u0007\u0010\u00d0\u000f\"\u009a\u0001\n\u000eEn" +
"titySelector\u0012\u0011\n\tagency_id\u0018\u0001 \u0001(\t\u0012\u0010\n\u0008route" +
"_id\u0018\u0002 \u0001(\t\u0012\u0012\n\nroute_type\u0018\u0003 \u0001(\u0005\u00126\n\u0004trip\u0018\u0004 " +
"\u0001(\u000b2(.com.example.delhitransit.TripDescr" +
"iptor\u0012\u000f\n\u0007stop_id\u0018\u0005 \u0001(\t*\u0006\u0008\u00e8\u0007\u0010\u00d0\u000f\"\u009e\u0001\n\u0010Trans" +
"latedString\u0012K\n\u000btranslation\u0018\u0001 \u0003(\u000b26.com.e" +
"xample.delhitransit.TranslatedString.Tra" +
"nslation\u001a5\n\u000bTranslation\u0012\u000c\n\u0004text\u0018\u0001 \u0002(\t\u0012\u0010\n" +
"\u0008language\u0018\u0002 \u0001(\t*\u0006\u0008\u00e8\u0007\u0010\u00d0\u000f*\u0006\u0008\u00e8\u0007\u0010\u00d0\u000f")
 //        descriptor = com.google.protobuf.Descriptors.FileDescriptor
 //                .internalBuildGeneratedFileFrom(descriptorData,
 //                        new com.google.protobuf.Descriptors.FileDescriptor[]{
 //                        });
        internal_static_com_example_delhitransit_FeedMessage_descriptor = descriptor!!.messageTypes[0]
internal_static_com_example_delhitransit_FeedMessage_fieldAccessorTable = com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
internal_static_com_example_delhitransit_FeedMessage_descriptor,
arrayOf<java.lang.String>("Header", "Entity"))
internal_static_com_example_delhitransit_FeedHeader_descriptor = descriptor.messageTypes[1]
internal_static_com_example_delhitransit_FeedHeader_fieldAccessorTable = com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
internal_static_com_example_delhitransit_FeedHeader_descriptor,
arrayOf<java.lang.String>("GtfsRealtimeVersion", "Incrementality", "Timestamp"))
internal_static_com_example_delhitransit_FeedEntity_descriptor = descriptor.messageTypes[2]
internal_static_com_example_delhitransit_FeedEntity_fieldAccessorTable = com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
internal_static_com_example_delhitransit_FeedEntity_descriptor,
arrayOf<java.lang.String>("Id", "IsDeleted", "TripUpdate", "Vehicle", "Alert"))
internal_static_com_example_delhitransit_TripUpdate_descriptor = descriptor.messageTypes[3]
internal_static_com_example_delhitransit_TripUpdate_fieldAccessorTable = com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
internal_static_com_example_delhitransit_TripUpdate_descriptor,
arrayOf<java.lang.String>("Trip", "Vehicle", "StopTimeUpdate", "Timestamp", "Delay"))
internal_static_com_example_delhitransit_TripUpdate_StopTimeEvent_descriptor = internal_static_com_example_delhitransit_TripUpdate_descriptor.nestedTypes[0]
internal_static_com_example_delhitransit_TripUpdate_StopTimeEvent_fieldAccessorTable = com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
internal_static_com_example_delhitransit_TripUpdate_StopTimeEvent_descriptor,
arrayOf<java.lang.String>("Delay", "Time", "Uncertainty"))
internal_static_com_example_delhitransit_TripUpdate_StopTimeUpdate_descriptor = internal_static_com_example_delhitransit_TripUpdate_descriptor.nestedTypes[1]
internal_static_com_example_delhitransit_TripUpdate_StopTimeUpdate_fieldAccessorTable = com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
internal_static_com_example_delhitransit_TripUpdate_StopTimeUpdate_descriptor,
arrayOf<java.lang.String>("StopSequence", "StopId", "Arrival", "Departure", "ScheduleRelationship"))
internal_static_com_example_delhitransit_VehiclePosition_descriptor = descriptor.messageTypes[4]
internal_static_com_example_delhitransit_VehiclePosition_fieldAccessorTable = com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
internal_static_com_example_delhitransit_VehiclePosition_descriptor,
arrayOf<java.lang.String>("Trip", "Vehicle", "Position", "CurrentStopSequence", "StopId", "CurrentStatus", "Timestamp", "CongestionLevel", "OccupancyStatus"))
internal_static_com_example_delhitransit_Alert_descriptor = descriptor.messageTypes[5]
internal_static_com_example_delhitransit_Alert_fieldAccessorTable = com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
internal_static_com_example_delhitransit_Alert_descriptor,
arrayOf<java.lang.String>("ActivePeriod", "InformedEntity", "Cause", "Effect", "Url", "HeaderText", "DescriptionText"))
internal_static_com_example_delhitransit_TimeRange_descriptor = descriptor.messageTypes[6]
internal_static_com_example_delhitransit_TimeRange_fieldAccessorTable = com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
internal_static_com_example_delhitransit_TimeRange_descriptor,
arrayOf<java.lang.String>("Start", "End"))
internal_static_com_example_delhitransit_Position_descriptor = descriptor.messageTypes[7]
internal_static_com_example_delhitransit_Position_fieldAccessorTable = com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
internal_static_com_example_delhitransit_Position_descriptor,
arrayOf<java.lang.String>("Latitude", "Longitude", "Bearing", "Odometer", "Speed"))
internal_static_com_example_delhitransit_TripDescriptor_descriptor = descriptor.messageTypes[8]
internal_static_com_example_delhitransit_TripDescriptor_fieldAccessorTable = com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
internal_static_com_example_delhitransit_TripDescriptor_descriptor,
arrayOf<java.lang.String>("TripId", "RouteId", "DirectionId", "StartTime", "StartDate", "ScheduleRelationship"))
internal_static_com_example_delhitransit_VehicleDescriptor_descriptor = descriptor.messageTypes[9]
internal_static_com_example_delhitransit_VehicleDescriptor_fieldAccessorTable = com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
internal_static_com_example_delhitransit_VehicleDescriptor_descriptor,
arrayOf<java.lang.String>("Id", "Label", "LicensePlate"))
internal_static_com_example_delhitransit_EntitySelector_descriptor = descriptor.messageTypes[10]
internal_static_com_example_delhitransit_EntitySelector_fieldAccessorTable = com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
internal_static_com_example_delhitransit_EntitySelector_descriptor,
arrayOf<java.lang.String>("AgencyId", "RouteId", "RouteType", "Trip", "StopId"))
internal_static_com_example_delhitransit_TranslatedString_descriptor = descriptor.messageTypes[11]
internal_static_com_example_delhitransit_TranslatedString_fieldAccessorTable = com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
internal_static_com_example_delhitransit_TranslatedString_descriptor,
arrayOf<java.lang.String>("Translation"))
internal_static_com_example_delhitransit_TranslatedString_Translation_descriptor = internal_static_com_example_delhitransit_TranslatedString_descriptor.nestedTypes[0]
internal_static_com_example_delhitransit_TranslatedString_Translation_fieldAccessorTable = com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
internal_static_com_example_delhitransit_TranslatedString_Translation_descriptor,
arrayOf<java.lang.String>("Text", "Language"))
}

 // @@protoc_insertion_point(outer_class_scope)
}
